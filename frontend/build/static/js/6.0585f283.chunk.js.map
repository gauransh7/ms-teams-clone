{"version":3,"sources":["../node_modules/@material-ui/icons/VideoCall.js","components/common/chatRoomCard.js","components/rooms/roomsList.js","components/homeComponents/roomDetails.js","components/common/addUser.js","views/rooms.js","components/homeComponents/createRoom.js","views/home.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","useStyles","makeStyles","theme","Card","backgroundColor","palette","secondary","main","color","contrastText","margin","spacing","width","cursor","justifyContent","roomCardMainDiv","height","display","alignItems","justifyItems","icons","ChatRoomCard","props","history","useHistory","console","log","classes","useState","showAddUserModal","setShowAddUserModal","className","clickable","onClick","push","room","id","gutterBottom","room_name","invite","label","created_by","first_name","style","marginInlineStart","e","stopPropagation","sharing_id","show","onClose","roomsList","overflow","paddingBottom","background","gridTemplateRows","list","overflowY","maxHeight","window","screen","availHeight","position","breakpoints","down","listHeading","top","primary","marginLeft","listWrapper","webkitScrollbar","webkitScrollbarThumb","withRouter","connect","state","user","auth","roomsCreated","roomsInvited","dispatch","createChatRoom","data","handleSuccess","getAllRooms","useEffect","variant","heading","rooms","map","roomDetailsDiv","roomList","title","textAlign","slice","modal","paper","border","boxShadow","shadows","padding","textField","currentRoom","updateRoomUsers","email","setEmail","toast","success","open","centered","in","textfield","onChange","event","target","name","autoComplete","placeholder","InputProps","endAdornment","Rooms","gridAutoFlow","createRoomButton","marginTop","contrast","buttonsDiv","openRoomName","setOpenRoomName","roomName","setRoomName","roomNameError","anchorAvatarEl","setAnchorAvatarEl","toggleOpenRoomName","handleLaunch","handleCreateRoom","handleSuccessJoinMeeeting","handleSuccessJoinConversation","error","onSuccess","pk","JSON","stringify","code","Grid","StepLabel","roomNameDiv","TextField","Button","size","content","currentTarget","Menu","anchorEl","Boolean","logout","MenuItem","startIcon","Home","logoutUser"],"mappings":"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","file":"static/js/6.0585f283.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4zM14 13h-3v3H9v-3H6v-2h3V8h2v3h3v2z\"\n}), 'VideoCall');\n\nexports.default = _default;","import {\n  Card,\n  CardActions,\n  Chip,\n  IconButton,\n  Typography\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport React, { Component, useEffect, useState } from 'react'\nimport AddUserModal from './addUser'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport LaunchIcon from '@material-ui/icons/Launch'\nimport PersonAddIcon from '@material-ui/icons/PersonAdd'\n\nconst useStyles = makeStyles(theme => ({\n  Card: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    margin: theme.spacing(0.4),\n    width: '80%',\n    cursor: 'pointer',\n    justifyContent: 'space-between'\n  },\n  roomCardMainDiv: {\n    height: '100%',\n    width: '100%',\n    display: 'grid',\n    alignItems: 'center',\n    justifyItems: 'center'\n  },\n  icons: {\n    color: theme.palette.secondary.contrastText,\n  }\n}))\n\nconst ChatRoomCard = props => {\n  const history = useHistory()\n  console.log(props)\n  const classes = useStyles()\n  const [showAddUserModal, setShowAddUserModal] = useState(false)\n\n  function openRoom (e) {\n    e.stopPropagation()\n    history.push(`/video/${props.room.id}/${props.room.sharing_id}`)\n  }\n\n  function handleAddUser (e) {\n    e.stopPropagation()\n    setShowAddUserModal(true)\n  }\n\n  return (\n    <div className={classes.roomCardMainDiv}>\n      <Card\n        className={classes.Card}\n        clickable\n        onClick={() => history.push(`/room/${props.room.id}`)}\n      >\n        <CardActions>\n          <Typography onClick={() => setShowAddUserModal(true)} gutterBottom>\n            {props.room && props.room.room_name}\n          </Typography>\n          {props.invite && (\n            <Chip label={`creater : ${props.room.created_by.first_name}`} />\n          )}\n          <div style={{ marginInlineStart: 'auto' }}>\n            {!props.invite && (\n              <IconButton>\n                <PersonAddIcon className={classes.icons} onClick={handleAddUser} />\n              </IconButton>\n            )}\n            <IconButton>\n              <LaunchIcon className={classes.icons} onClick={openRoom} />\n            </IconButton>\n          </div>\n        </CardActions>\n      </Card>\n      {showAddUserModal && (\n        <AddUserModal\n          room={props.room}\n          onClick={e => e.stopPropagation()}\n          show={showAddUserModal}\n          onClose={() => setShowAddUserModal(false)}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default ChatRoomCard\n","import React, { Component, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory, withRouter } from 'react-router-dom'\nimport {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Grid,\n  Paper,\n  StepLabel,\n  TextField,\n  Typography\n} from '@material-ui/core'\nimport { createChatRoom, getAllRooms } from '../../actions/chatRoomAction'\nimport ChatRoomCard from '../common/chatRoomCard'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles(theme => ({\n  roomsList: {\n    width: '80%',\n    display: 'grid',\n    justifyItems: 'center',\n    overflow: 'hidden',\n    paddingBottom: theme.spacing(1),\n    backgroundColor: theme.palette.background,\n    gridTemplateRows: 'min-content',\n    height: '80%'\n  },\n  list: {\n    overflowY: 'scroll',\n    maxHeight: window.screen.availHeight / 1.3,\n    width: '100%',\n    display: 'grid',\n    justifyItems: 'center',\n    position: 'absolute',\n    [theme.breakpoints.down('xs')]: {\n      maxHeight: window.screen.availHeight / 2,\n    }\n  },\n  listHeading: {\n    top: 0,\n    backgroundColor: theme.palette.primary.main,\n    width: '100%',\n    height: '50%',\n    marginLeft: '10%'\n  },\n  listWrapper: {\n    position: 'relative',\n    width: '100%',\n    height: '90%',\n    overflow: 'hidden',\n    display: 'grid'\n  },\n  webkitScrollbar: {\n    width: 0 /* Remove scrollbar space */,\n    background: 'transparent' /* Optional: just make scrollbar invisible */\n  },\n  /* Optional: show position indicator in red */\n  webkitScrollbarThumb: {\n    background: '#FF0000'\n  }\n}))\n\nconst RoomsList = props => {\n  const history = useHistory()\n  useEffect(() => {\n    props.getAllRooms()\n  }, [])\n  const classes = useStyles()\n\n  return (\n    <Card className={classes.roomsList}>\n      <CardContent color='secondary' className={classes.listHeading}>\n        <Typography variant='h5'>{props.heading}</Typography>\n      </CardContent>\n      <CardContent className={classes.listWrapper}>\n      <div className={classes.list}>\n        {props.rooms.map(room => (\n          <ChatRoomCard room={room} invite={props.heading==\"Your Invites\"} />\n        ))}\n      </div>\n      </CardContent>\n    </Card>\n  )\n}\n\nconst mapStateToprops = state => {\n  return {\n    user: state.auth.user,\n    roomsCreated: state.room.roomsCreated,\n    roomsInvited: state.room.roomsInvited\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    createChatRoom: (data, handleSuccess) => {\n      return dispatch(createChatRoom(data, handleSuccess))\n    },\n    getAllRooms: () => {\n      return dispatch(getAllRooms())\n    }\n  }\n}\n\nexport default withRouter(\n  connect(mapStateToprops, mapDispatchToprops)(RoomsList)\n)\n","import React, { Component, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, useHistory, withRouter } from 'react-router-dom'\nimport {\n  Button,\n  Grid,\n  Paper,\n  StepLabel,\n  TextField,\n  Typography\n} from '@material-ui/core'\nimport { createChatRoom, getAllRooms } from '../../actions/chatRoomAction'\nimport ChatRoomCard from '../common/chatRoomCard'\nimport { makeStyles } from '@material-ui/styles'\nimport RoomsList from '../rooms/roomsList'\n\nconst useStyles = makeStyles(theme => ({\n  roomDetailsDiv: {\n    width: '100%',\n    height: '60%',\n  },\n  roomList: {\n    height: '100%',\n    width: '100%',\n    display: 'grid',\n    justifyItems: 'center',\n    [theme.breakpoints.down('xs')]: {\n      display: 'none'\n    }\n  },\n  title: {\n    textAlign: 'center'\n  }\n}))\n\nconst RoomDetails = props => {\n  const history = useHistory()\n  useEffect(() => {\n    props.getAllRooms()\n  }, [])\n  const classes = useStyles()\n\n  return (\n    <div className={classes.roomDetailsDiv}>\n    <div className={classes.roomList}>\n      <RoomsList heading=\"Your rooms\" rooms={props.roomsCreated.slice(0,2)} />\n      <RoomsList heading=\"Your Invites\" rooms={props.roomsInvited.slice(0,2)} />\n      </div>\n      <Typography variant='h6' className={classes.title}>\n          <Button onClick={() => history.push('/rooms')}>View All Rooms</Button>\n        </Typography>\n    </div>\n  )\n}\n\nconst mapStateToprops = state => {\n  return {\n    user: state.auth.user,\n    roomsCreated: state.room.roomsCreated,\n    roomsInvited: state.room.roomsInvited\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    createChatRoom: (data, handleSuccess) => {\n      return dispatch(createChatRoom(data, handleSuccess))\n    },\n    getAllRooms: () => {\n      return dispatch(getAllRooms())\n    }\n  }\n}\n\nexport default withRouter(\n  connect(mapStateToprops, mapDispatchToprops)(RoomDetails)\n)\n","import {\n  IconButton,\n  InputAdornment,\n  Modal,\n  SvgIcon,\n  TextField\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport Fade from '@material-ui/core/Fade'\nimport { connect } from 'react-redux'\nimport SendIcon from '@material-ui/icons/Send'\nimport rooms from '../../views/rooms'\nimport { useState } from 'react'\nimport { updateRoomUsers } from '../../actions/chatRoomAction'\nimport toast, { Toaster } from 'react-hot-toast'\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: theme.palette.secondary.main,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  textField: {}\n}))\n\nconst AddUserModal = props => {\n  const classes = useStyles()\n  const { show, room, onClose, label = 'Add Participant', ...restProps } = props\n  const [email, setEmail] = useState('')\n  function handleEmailSend () {\n    const data = {\n      \"email\": email\n    }\n    props.updateRoomUsers(data, props.room.id, handleSuccess)\n  }\n\n  function handleSuccess () {\n    toast.success('Added user')\n    setEmail('')\n  }\n\n  function handleEmailChange (event) {\n    setEmail(event.target.value)\n  }\n  return (\n    <Modal\n      aria-labelledby='transition-modal-title'\n      aria-describedby='transition-modal-description'\n      className={classes.modal}\n      open={show}\n      centered\n      onClose={onClose}\n    >\n      <Fade in={show}>\n        <div className={classes.paper}>\n        <Toaster />\n          <h2 id='transition-modal-title'>{props.room.room_name}</h2>\n          <div id='transition-modal-description'>\n            <TextField\n              color='secondary'\n              className={classes.textfield}\n              onChange={handleEmailChange}\n              value={email}\n              name='email'\n              variant='outlined'\n              autoComplete={false}\n              label=''\n              placeholder='Enter user email'\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position='end'>\n                    <IconButton>\n                      <SvgIcon onClick={handleEmailSend}>\n                        <SendIcon />\n                      </SvgIcon>\n                    </IconButton>\n                  </InputAdornment>\n                )\n              }}\n            />\n          </div>\n        </div>\n      </Fade>\n    </Modal>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentRoom: state.room.currentRoom\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    updateRoomUsers: (data, id, handleSuccess) => {\n      return dispatch(updateRoomUsers(data, id, handleSuccess))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToprops)(AddUserModal)\n","import { Button, Card, Grid, Link, Paper } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport React, { Component, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect, useHistory } from 'react-router'\nimport { logoutUser } from '../actions/authAction'\nimport { getAllRooms } from '../actions/chatRoomAction'\nimport RoomDetails from '../components/homeComponents/roomDetails'\nimport RoomsList from '../components/rooms/roomsList'\n\nconst useStyles = makeStyles(theme => ({\n  Rooms: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    justifyItems: 'center',\n    padding: theme.spacing(2),\n    alignItems: 'center',\n    position: 'relative',\n    height: '100%',\n    [theme.breakpoints.down('xs')]: {\n      gridAutoFlow: 'row'\n    }\n  }\n}))\n\nconst Rooms = props => {\n  useEffect(() => {\n    props.getAllRooms()\n  }, [])\n  const classes = useStyles()\n  return (\n    <Grid className={classes.Rooms}>\n      <RoomsList rooms={props.roomsCreated} heading='Your Rooms' />\n      <RoomsList rooms={props.roomsInvited} heading='Your Invites' />\n    </Grid>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user,\n    roomsCreated: state.room.roomsCreated,\n    roomsInvited: state.room.roomsInvited\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllRooms: () => {\n      return dispatch(getAllRooms())\n    }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Rooms)\n","import React, { Component, useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory, withRouter } from 'react-router-dom'\nimport {\n  Button,\n  Grid,\n  Menu,\n  MenuItem,\n  Paper,\n  StepLabel,\n  TextField\n} from '@material-ui/core'\nimport { createChatRoom } from '../../actions/chatRoomAction'\nimport VideoCallIcon from '@material-ui/icons/VideoCall'\nimport { makeStyles } from '@material-ui/styles'\nimport toast, { Toaster } from 'react-hot-toast'\n\nconst useStyles = makeStyles(theme => ({\n  createRoomButton: {\n    margin: theme.spacing(2)\n  },\n  textfield: {\n    marginTop: theme.spacing(2),\n    backgroundColor: theme.palette.primary.contrast\n  },\n  buttonsDiv: {\n    marginTop: theme.spacing(2)\n  }\n}))\nconst CreateRoom = props => {\n  const history = useHistory()\n  const classes = useStyles()\n  const [openRoomName, setOpenRoomName] = useState(false)\n  const [saveForLater, setSaveForLater] = useState(false)\n  const [roomName, setRoomName] = useState('')\n  const [roomNameError, setRoomNameError] = useState('')\n  const [anchorAvatarEl, setAnchorAvatarEl] = useState(null)\n\n  const handleAvatarBtnClick = event => {\n    console.log(event.currentTarget)\n    setAnchorAvatarEl(event.currentTarget)\n  }\n\n  const handleAvatarBtnClose = () => {\n    console.log('close')\n    setAnchorAvatarEl(null)\n  }\n  useEffect(() => {\n    console.log('render')\n  }, [])\n\n  const handleRoomNameChange = e => {\n    setRoomName(e.target.value)\n  }\n\n  const toggleOpenRoomName = () => {\n    setOpenRoomName(!openRoomName)\n  }\n\n  const handleLaunch = id => {\n    if (roomName == '') {\n      toast.error('Enter a room name')\n      return\n    }\n    switch (id) {\n      case 0:\n        handleCreateRoom(handleSuccessJoinMeeeting)\n        return\n      case 1:\n        handleCreateRoom(handleSuccessJoinConversation)\n        return\n      case 2:\n        handleCreateRoom()\n        return\n    }\n  }\n\n  const handleCreateRoom = onSuccess => {\n    let data = {\n      room_name: roomName,\n      created_by: props.user.pk\n    }\n    data = JSON.stringify(data)\n    setRoomName('')\n    props.createChatRoom(data, onSuccess)\n  }\n  const handleSuccessJoinMeeeting = (id, code) => {\n    history.push(`/video/${id}/${code}`)\n  }\n\n  const handleSuccessJoinConversation = (id, code) => {\n    history.push(`/room/${id}`)\n  }\n  return (\n    <Grid>\n      <StepLabel>\n        Hi {props.user.first_name}! We provide premium quality video calls.\n      </StepLabel>\n      <StepLabel>\n        Enjoy video calling with different themes. You are just a click away.\n      </StepLabel>\n      {openRoomName ? (\n        <div className={classes.roomNameDiv}>\n          {/* <FormLabel className={classes.formLabel} required>\n            Room Name\n          </FormLabel> */}\n          <Toaster />\n          <TextField\n            color='secondary'\n            className={classes.textfield}\n            onChange={handleRoomNameChange}\n            value={roomName}\n            name='roomName'\n            variant='outlined'\n            autoComplete={false}\n            label=''\n            placeholder='Enter a room name'\n            error={roomNameError ? true : false}\n          />\n          <div className={classes.buttonsDiv}>\n            <Button size='large' color='secondary' onClick={toggleOpenRoomName}>\n              Cancel\n            </Button>\n            <Button\n              aria-controls='avatar-dropdown'\n              content='avatar'\n              variant='contained'\n              color='secondary'\n              aria-haspopup='true'\n              color='inherit'\n              size='large'\n              // className='header-title-button'\n              onClick={handleAvatarBtnClick}\n              startIcon={<VideoCallIcon />}\n            >\n              Launch\n            </Button>\n            <Menu\n              id='avatar-dropdown'\n              anchorEl={anchorAvatarEl}\n              // keepMounted\n              open={Boolean(anchorAvatarEl)}\n              onClose={handleAvatarBtnClose}\n              style={{ marginTop: '30px' }}\n              onClick={() => props.logout}\n              // style={{ marginTop: '30px' }}\n            >\n              <MenuItem onClick={() => handleLaunch(0)}>Start Meeting</MenuItem>\n              <MenuItem onClick={() => handleLaunch(1)}>\n                Start Conversation\n              </MenuItem>\n              <MenuItem onClick={() => handleLaunch(2)}>\n                Save for later\n              </MenuItem>\n            </Menu>\n          </div>\n        </div>\n      ) : (\n        <Button\n          variant='contained'\n          color='secondary'\n          className={classes.createRoomButton}\n          startIcon={<VideoCallIcon />}\n          onClick={toggleOpenRoomName}\n        >\n          Create Room\n        </Button>\n      )}\n    </Grid>\n  )\n}\n\nconst mapStateToprops = state => {\n  return {\n    user: state.auth.user\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    createChatRoom: (data, handleSuccess) => {\n      return dispatch(createChatRoom(data, handleSuccess))\n    }\n  }\n}\n\nexport default withRouter(\n  connect(mapStateToprops, mapDispatchToprops)(CreateRoom)\n)\n","import { Button, Card, Grid, Link, Paper } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport React, { Component, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect, useHistory } from 'react-router'\nimport { logoutUser } from '../actions/authAction'\nimport CreateRoom from '../components/homeComponents/createRoom'\nimport RoomDetails from '../components/homeComponents/roomDetails'\n\nconst useStyles = makeStyles(theme => ({\n  Home: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    justifyItems: 'center',\n    padding: theme.spacing(2),\n    alignItems: 'center',\n    height: '100%',\n    [theme.breakpoints.down('xs')]: {\n      gridAutoFlow: 'row'\n    }\n  }\n}))\n\nconst Home = props => {\n  useEffect(() => {\n    console.log('render')\n  }, [])\n  const classes = useStyles()\n  return (\n    <Grid className={classes.Home}>\n      <CreateRoom />\n      <RoomDetails />\n    </Grid>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logoutUser: () => {\n      return dispatch(logoutUser())\n    }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n"],"sourceRoot":""}