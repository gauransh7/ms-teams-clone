{"version":3,"sources":["components/common/chatRoomCard.js","components/rooms/roomsList.js","components/common/addUser.js","components/homeComponents/roomDetails.js","views/rooms.js","components/common/chatBox.js","components/rooms/roomData.js","components/rooms/roomChat.js","components/video/videoOffDiv.js","components/video/video.js","components/video/userCard.js","components/video/videoPlayer.js","views/video.js"],"names":["useStyles","makeStyles","theme","Card","backgroundColor","palette","secondary","main","margin","spacing","width","justifyContent","roomCardMainDiv","height","display","alignItems","justifyItems","ChatRoomCard","props","history","useHistory","console","log","classes","useState","showAddUserModal","setShowAddUserModal","className","clickable","onClick","push","room","id","gutterBottom","room_name","invite","label","created_by","first_name","style","marginInlineStart","e","stopPropagation","sharing_id","show","onClose","roomsList","overflow","paddingBottom","gridTemplateRows","list","overflowY","maxHeight","window","screen","availHeight","position","listHeading","top","primary","marginLeft","listWrapper","webkitScrollbar","background","webkitScrollbarThumb","withRouter","connect","state","user","auth","roomsCreated","roomsInvited","dispatch","createChatRoom","data","handleSuccess","getAllRooms","useEffect","color","variant","heading","rooms","map","modal","paper","border","boxShadow","shadows","padding","textField","currentRoom","updateRoomUsers","email","setEmail","toast","success","open","centered","in","textfield","onChange","event","target","value","name","autoComplete","placeholder","InputProps","endAdornment","roomDetailsDiv","slice","title","Rooms","gridAutoFlow","breakpoints","down","roomChatDiv","bottom","chatBoxMessages","messageList","left","right","messages","getAllMessages","callback","addMessage","message","messageBox","useRef","match","params","current","scrollTop","scrollHeight","length","ref","msg","container","item","xs","align","pk","disableTypography","fontWeight","fontSize","date","created_on","roomDataDiv","getRoomDetails","useSelector","textAlign","subheader","getModifiedDate","size","all_users","createRoomButton","startIcon","meeting","default","chatHeading","WebSocketInstance","close","Boolean","socketRef","location","protocol","host","includes","hostname","sendSignal","video","audio","onlyChat","on","payload","JSON","parse","setMessage","videoOffDiv","objectFit","backgroundSize","VideoOffDiv","Paper","Typography","Video","peer","stream","srcObject","playsInline","autoPlay","userDetailDiv","borderRadius","userDiv","UserCard","Grid","refer","muted","dimension","dimensions","numpeers","gridContainer","flexDirection","introLobby","chatRoom","chatRoomMainDiv","chatBox","zIndex","minWidth","chatBoxIntro","actionButtons","marginRight","up","videoConstraints","Room","React","memo","inLobby","setInLobby","pendingRequest","setPendingRequest","token","peers","setPeers","allMessages","setWebSocket","videoHeight","setVideoHeight","availWidth","videoWidth","setVideoWidth","userVideo","usersDiv","localstream","mystream","setMystream","setVideo","col","setCol","setShow","showDetails","setShowDetails","chatBoxOpen","setChatBoxOpen","allUsersBoxOpen","setAllUsersBoxOpen","setAudio","roomExist","setRoomExists","peersRef","toggleChatBoxOpen","toggleAllUsersBoxOpen","handleVideoToggle","getVideoTracks","enabled","handleAudioToggle","getAudioTracks","getTracks","track","stop","n","filter","numCol","Math","sqrt","offsetHeight","offsetWidth","ceil","floor","numRow","myuser","navigator","mediaDevices","getUserMedia","then","catch","err","error","presentInUsers","indexOf","t","Button","toast_id","user_id","dismiss","icon","duration","alert","users","allPeers","forEach","some","peerID","userToSignal","callerID","Peer","initiator","trickle","signal","createPeer","peerName","userID","caller","incomingSignal","addPeer","peerObj","find","p","destroy","newPeers","i","disabled","gridTemplateColumns","getDisplayMedia","cursor","screenStream","index","replaceTrack","removeTrack","addTrack","IconButton","chatBoxInput","TextField","InputAdornment","SvgIcon","List","ListItem","ListItemIcon","Avatar","ListItemText","Divider","fullWidth","togglePeerShow","userDimension","setUserDimension","VideoView","Component","logoutUser"],"mappings":"qPAeMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,gBAAiBF,EAAMG,QAAQC,UAAUC,KACzCC,OAAQN,EAAMO,QAAQ,IACtBC,MAAO,MACPC,eAAgB,iBAElBC,gBAAiB,CACfC,OAAQ,OACRH,MAAO,OACPI,QAAS,OACTC,WAAY,SACZC,aAAc,cA0DHC,IAtDM,SAAAC,GACnB,IAAMC,EAAUC,cAChBC,QAAQC,IAAIJ,GACZ,IAAMK,EAAUvB,IAChB,EAAgDwB,oBAAS,GAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KAYA,OACE,sBAAKC,UAAWJ,EAAQX,gBAAxB,UACE,cAAC,IAAD,CACEe,UAAWJ,EAAQpB,KACnByB,WAAS,EACTC,QAAS,kBAAMV,EAAQW,KAAR,gBAAsBZ,EAAMa,KAAKC,MAHlD,SAKE,eAAC,IAAD,WACE,cAAC,IAAD,CAAYH,QAAS,kBAAMH,GAAoB,IAAOO,cAAY,EAAlE,SACGf,EAAMa,MAAQb,EAAMa,KAAKG,YAE3BhB,EAAMiB,QACL,cAAC,IAAD,CAAMC,MAAK,oBAAelB,EAAMa,KAAKM,WAAWC,cAElD,sBAAKC,MAAO,CAAEC,kBAAmB,QAAjC,WACItB,EAAMiB,QACN,cAAC,IAAD,UACE,cAAC,IAAD,CAAeN,QAtB7B,SAAwBY,GACtBA,EAAEC,kBACFhB,GAAoB,QAuBZ,cAAC,IAAD,UACE,cAAC,IAAD,CAAYG,QA/BxB,SAAmBY,GACjBA,EAAEC,kBACFvB,EAAQW,KAAR,iBAAuBZ,EAAMa,KAAKC,GAAlC,YAAwCd,EAAMa,KAAKY,0BAkChDlB,GACC,cAAC,IAAD,CACEM,KAAMb,EAAMa,KACZF,QAAS,SAAAY,GAAC,OAAIA,EAAEC,mBAChBE,KAAMnB,EACNoB,QAAS,kBAAMnB,GAAoB,W,iCC9E7C,uFAkBM1B,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC4C,UAAW,CACTpC,MAAO,MACPI,QAAS,OACTE,aAAc,SACd+B,SAAU,SACVC,cAAe9C,EAAMO,QAAQ,GAC7BwC,iBAAkB,cAClBpC,OAAQ,OAEVqC,KAAM,CACJC,UAAW,SACXC,UAAWC,OAAOC,OAAOC,YAAc,EACvC7C,MAAO,OACPI,QAAS,OACTE,aAAc,SACdwC,SAAU,YAEZC,YAAa,CACXC,IAAK,EACLtD,gBAAiBF,EAAMG,QAAQsD,QAAQpD,KACvCG,MAAO,OACPG,OAAQ,MACR+C,WAAY,OAEdC,YAAa,CACXL,SAAU,WACV9C,MAAO,OACPG,OAAQ,MACRkC,SAAU,UAEZe,gBAAiB,CACfpD,MAAO,EACPqD,WAAY,eAGdC,qBAAsB,CACpBD,WAAY,eA8CDE,gBACbC,aApBsB,SAAAC,GACtB,MAAO,CACLC,KAAMD,EAAME,KAAKD,KACjBE,aAAcH,EAAMpC,KAAKuC,aACzBC,aAAcJ,EAAMpC,KAAKwC,iBAIF,SAAAC,GACzB,MAAO,CACLC,eAAgB,SAACC,EAAMC,GACrB,OAAOH,EAASC,YAAeC,EAAMC,KAEvCC,YAAa,WACX,OAAOJ,EAASI,mBAMpBV,EA3CgB,SAAAhD,GACAE,cAChByD,qBAAU,WACR3D,EAAM0D,gBACL,IACH,IAAMrD,EAAUvB,IAEhB,OACE,eAAC,IAAD,CAAM2B,UAAWJ,EAAQuB,UAAzB,UACE,cAAC,IAAD,CAAagC,MAAM,YAAYnD,UAAWJ,EAAQkC,YAAlD,SACE,cAAC,IAAD,CAAYsB,QAAQ,KAApB,SAA0B7D,EAAM8D,YAElC,cAAC,IAAD,CAAarD,UAAWJ,EAAQsC,YAAhC,SACA,qBAAKlC,UAAWJ,EAAQ2B,KAAxB,SACGhC,EAAM+D,MAAMC,KAAI,SAAAnD,GAAI,OACnB,cAAC,IAAD,CAAcA,KAAMA,EAAMI,OAAuB,gBAAfjB,EAAM8D,yB,0NC1D5ChF,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCiF,MAAO,CACLrE,QAAS,OACTC,WAAY,SACZJ,eAAgB,UAElByE,MAAO,CACLhF,gBAAiBF,EAAMG,QAAQC,UAAUC,KACzC8E,OAAQ,iBACRC,UAAWpF,EAAMqF,QAAQ,GACzBC,QAAStF,EAAMO,QAAQ,EAAG,EAAG,IAE/BgF,UAAW,OA+EEvB,iBAdS,SAAAC,GACtB,MAAO,CACLuB,YAAavB,EAAMpC,KAAK2D,gBAID,SAAAlB,GACzB,MAAO,CACLmB,gBAAiB,SAACjB,EAAM1C,EAAI2C,GAC1B,OAAOH,EAASmB,YAAgBjB,EAAM1C,EAAI2C,QAKjCT,EA5EM,SAAAhD,GACnB,IAAMK,EAAUvB,IACR4C,EAAiE1B,EAAjE0B,KAAYC,GAAqD3B,EAA3Da,KAA2Db,EAArD2B,SACpB,GADyE3B,EAA5CkB,MAA7B,YAAyElB,EAAzE,GAC0BM,mBAAS,KAAnC,mBAAOoE,EAAP,KAAcC,EAAd,KAQA,SAASlB,IACPmB,IAAMC,QAAQ,cACdF,EAAS,IAMX,OACE,cAAC,IAAD,CACE,kBAAgB,yBAChB,mBAAiB,+BACjBlE,UAAWJ,EAAQ4D,MACnBa,KAAMpD,EACNqD,UAAQ,EACRpD,QAASA,EANX,SAQE,cAAC,IAAD,CAAMqD,GAAItD,EAAV,SACE,sBAAKjB,UAAWJ,EAAQ6D,MAAxB,UACA,cAAC,IAAD,IACE,oBAAIpD,GAAG,yBAAP,SAAiCd,EAAMa,KAAKG,YAC5C,qBAAKF,GAAG,+BAAR,SACE,cAAC,IAAD,CACE8C,MAAM,YACNnD,UAAWJ,EAAQ4E,UACnBC,SApBZ,SAA4BC,GAC1BR,EAASQ,EAAMC,OAAOC,QAoBZA,MAAOX,EACPY,KAAK,QACLzB,QAAQ,WACR0B,cAAc,EACdrE,MAAM,GACNsE,YAAY,mBACZC,WAAY,CACVC,aACE,cAAC,IAAD,CAAgBpD,SAAS,MAAzB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAS3B,QA3C7B,WACE,IAAM6C,EAAO,CACX,MAASkB,GAEX1E,EAAMyE,gBAAgBjB,EAAMxD,EAAMa,KAAKC,GAAI2C,IAuCzB,SACE,cAAC,IAAD,0B,iCC/ExB,uFAgBM3E,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC2G,eAAgB,CACdnG,MAAO,OACPI,QAAS,OACTE,aAAc,SACdH,OAAQ,MACRE,WAAY,cAyCDkD,gBACbC,aApBsB,SAAAC,GACtB,MAAO,CACLC,KAAMD,EAAME,KAAKD,KACjBE,aAAcH,EAAMpC,KAAKuC,aACzBC,aAAcJ,EAAMpC,KAAKwC,iBAIF,SAAAC,GACzB,MAAO,CACLC,eAAgB,SAACC,EAAMC,GACrB,OAAOH,EAASC,YAAeC,EAAMC,KAEvCC,YAAa,WACX,OAAOJ,EAASI,mBAMpBV,EAtCkB,SAAAhD,GAClB,IAAMC,EAAUC,cAChByD,qBAAU,WACR3D,EAAM0D,gBACL,IACH,IAAMrD,EAAUvB,IAEhB,OACE,sBAAK2B,UAAWJ,EAAQsF,eAAxB,UACE,cAAC,IAAD,CAAW7B,QAAQ,aAAaC,MAAO/D,EAAMoD,aAAawC,MAAM,EAAE,KAClE,cAAC,IAAD,CAAW9B,QAAQ,eAAeC,MAAO/D,EAAMqD,aAAauC,MAAM,EAAE,KACpE,cAAC,IAAD,CAAY/B,QAAQ,KAAKpD,UAAWJ,EAAQwF,MAA5C,SACI,cAAC,IAAD,CAAQlF,QAAS,kBAAMV,EAAQW,KAAK,WAApC,gC,8HC5BJ9B,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC8G,MAAM,aACJlG,QAAS,OACTmG,aAAc,SACdjG,aAAc,SACdwE,QAAStF,EAAMO,QAAQ,GACvBM,WAAY,SACZyC,SAAU,WACV3C,OAAQ,QACPX,EAAMgH,YAAYC,KAAK,MAAQ,CAC9BF,aAAc,YAiCL/C,uBAfS,SAAAC,GACtB,MAAO,CACLC,KAAMD,EAAME,KAAKD,KACjBE,aAAcH,EAAMpC,KAAKuC,aACzBC,aAAcJ,EAAMpC,KAAKwC,iBAIF,SAAAC,GACzB,MAAO,CACLI,YAAa,WACX,OAAOJ,EAASI,mBAIPV,EA5BD,SAAAhD,GACZ2D,qBAAU,WACR3D,EAAM0D,gBACL,IACH,IAAMrD,EAAUvB,IAChB,OACE,eAAC,IAAD,CAAM2B,UAAWJ,EAAQyF,MAAzB,UACE,cAAC,IAAD,CAAW/B,MAAO/D,EAAMoD,aAAcU,QAAQ,eAC9C,cAAC,IAAD,CAAWC,MAAO/D,EAAMqD,aAAcS,QAAQ,wB,iJCD9ChF,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCkH,YAAa,CACXvG,OAAQ,QAEVsF,UAAW,CACT3C,SAAU,WACV6D,OAAQ,MACR3G,MAAO,OACPN,gBAAiBF,EAAMG,QAAQsD,QAAQpD,MAEzC+G,gBAAiB,CACf9B,QAAS,MACThC,SAAU,WACVT,SAAU,SACVlC,OAAQ,MACRH,MAAO,QAET6G,YAAY,aACVnE,UAAW,OACXM,IAAK,EACL8D,KAAM,EACNC,OAAQvH,EAAMO,QAAQ,GACtB+C,SAAU,WACVL,UAAW,UACVjD,EAAMgH,YAAYC,KAAK,MAAQ,CAC9BM,MAAO,QAqFExD,gBAAWC,aAtBF,SAAAC,GACtB,MAAO,CACLC,KAAMD,EAAME,KAAKD,KACjBsB,YAAavB,EAAMpC,KAAK2D,YACxBgC,SAAUvD,EAAMpC,KAAK2F,aAIE,SAAAlD,GACzB,MAAO,CACLC,eAAgB,SAACC,EAAMC,GACrB,OAAOH,EAASC,YAAeC,EAAMC,KAEvCgD,eAAgB,SAAC3F,EAAI4F,GACnB,OAAOpD,EAASmD,YAAe3F,EAAI4F,KAErCC,WAAY,SAAAC,GACV,OAAOtD,EAASqD,YAAWC,QAKP5D,EAhFV,SAAChD,GACCE,cAAhB,IACM2G,EAAaC,mBACbzG,EAAUvB,IAChB6E,qBAAU,WACRxD,QAAQC,IAAI,aACZD,QAAQC,IAAIJ,GACZA,EAAMyG,eAAezG,EAAM+G,MAAMC,OAAOlG,MACvC,IACH6C,qBAAU,WACJkD,EAAWI,UACb9G,QAAQC,IAAIyG,EAAWI,QAAQC,WAC/BL,EAAWI,QAAQC,UAAYL,EAAWI,QAAQE,aAClDhH,QAAQC,IAAIyG,EAAWI,QAAQC,cAEhC,CAACL,EAAWI,QAASjH,EAAMwG,SAASY,SACfpH,EAAhBwE,YACR,OACI,cAAC,IAAD,CAAM/D,UAAWJ,EAAQ+F,gBAAzB,SACE,cAAC,IAAD,CAAMiB,IAAKR,EAAYpG,UAAWJ,EAAQgG,YAA1C,SACGrG,EAAMwG,SAASxC,KAAI,SAAAsD,GAAG,OACrB,cAAC,IAAD,UACE,eAAC,IAAD,CAAMC,WAAS,EAAf,UACE,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,IAAD,CACEC,MAAOJ,EAAIpE,KAAKyE,IAAM3H,EAAMkD,KAAKyE,GAAK,QAAU,OAChDC,mBAAiB,EACjBxI,UACE,gCACE,sBAAMiC,MAAO,CAAEwG,WAAY,UAA3B,SACGP,EAAIpE,KAAK9B,aACJ,IACR,sBACEC,MAAO,CACLwG,WAAY,UACZC,SAAU,SAHd,SAME,cAAC,IAAD,CAASC,KAAMT,EAAIU,sBAM7B,cAAC,IAAD,CAAMR,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,IAAD,CACEC,MAAOJ,EAAIpE,KAAKyE,IAAM3H,EAAMkD,KAAKyE,GAAK,QAAU,OAChDlF,QAAS6E,EAAIV,gBA1BNU,EAAIxG,gB,gNCrDzBhC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCiJ,YAAa,CACXzI,MAAO,OACPI,QAAS,OACTE,aAAc,SACdD,WAAY,cA6GDkD,gBACbC,aAnBsB,SAAAC,GACtB,MAAO,CACLC,KAAMD,EAAME,KAAKD,KACjBsB,YAAavB,EAAMpC,KAAK2D,gBAID,SAAAlB,GACzB,MAAO,CACLC,eAAgB,SAACC,EAAMC,GACrB,OAAOH,EAASC,YAAeC,EAAMC,KAEvCyE,eAAgB,WACd,OAAO5E,EAAS4E,mBAMpBlF,EA1Ge,SAAAhD,GACf,IAAMC,EAAUC,cAChByD,qBAAU,cAEP,IACH,IAAMtD,EAAUvB,IAChB,EAAgDwB,oBAAS,GAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KACMgE,EAAc2D,aAAY,SAAAlF,GAAK,OAAIA,EAAMpC,KAAK2D,eAIpD,OACE,qBAAK/D,UAAWJ,EAAQ4H,YAAxB,SACE,eAAC,IAAD,CAAM5G,MAAO,CAAE+G,UAAW,UAA1B,UACE,cAAC,IAAD,CAWEvC,MAAOrB,GAAeA,EAAYxD,UAClCqH,UAAWC,YAAgB9D,EAAYwD,cAOzC,eAAC,IAAD,WACE,cAAC,IAAD,CAAY3G,MAAO,CAAE+G,UAAW,UAAYvE,QAAQ,KAApD,mBAGA,cAAC,IAAD,CACE0E,KAAK,SACL3E,MAAM,UACN1C,MAAK,UAAKsD,EAAY1D,IAAM0D,EAAYrD,WAAWuD,YAGvD,eAAC,IAAD,WACE,cAAC,IAAD,CAAYrD,MAAO,CAAE+G,UAAW,UAAYvE,QAAQ,KAApD,uBAGCW,EAAY1D,IACX0D,EAAYgE,UAAUxE,KAAI,SAAAd,GAAI,OAC5B,cAAC,IAAD,CAAMqF,KAAK,SAAS3E,MAAM,YAAY1C,MAAK,UAAKgC,EAAKwB,eAG3D,eAAC,IAAD,CAAarD,MAAO,CAAE5B,eAAgB,UAAtC,UACG+E,EAAY1D,IAAM0D,EAAYrD,WAAWwG,IAAM3H,EAAMkD,KAAKyE,IACzD,cAAC,IAAD,CACE9D,QAAQ,YACRD,MAAM,YACNnD,UAAWJ,EAAQoI,iBACnBC,UAAW,cAAC,IAAD,IACX/H,QAAS,kBAAMH,GAAoB,IALrC,sBAUDR,EAAM2I,SAAW,cAAC,IAAD,CAChB9E,QAAQ,YACRD,MAAM,YACNnD,UAAWJ,EAAQoI,iBACnBC,UAAW,cAAC,IAAD,IACX/H,QA7DV,WACEV,EAAQW,KAAR,iBAAuB4D,EAAY1D,GAAnC,YAAyC0D,EAAY/C,cAuD7B,0BAUjBlB,GACC,cAAC,IAAD,CACEM,KAAM2D,EACN9C,KAAMnB,EACNoB,QAAS,kBAAMnB,GAAoB,mB,uMCpF3C1B,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCkH,YAAa,CAIX5D,SAAU,WACV3C,OAAQ,MACRT,gBAAiBF,EAAMG,QAAQ0D,WAAW+F,SAE5C3D,UAAW,CACT3C,SAAU,WACV6D,OAAQ,MACR3G,MAAO,OACPN,gBAAiBF,EAAMG,QAAQsD,QAAQpD,MAEzCwJ,YAAa,CACXrG,IAAK,MACLtD,gBAAiBF,EAAMG,QAAQsD,QAAQpD,MAEzC+G,gBAAiB,CACf9B,QAAS,MACThC,SAAU,WACVT,SAAU,SACVlC,OAAQ,MACRH,MAAO,QAET6G,YAAa,CACXnE,UAAW,OACXM,IAAK,EACL8D,KAAM,EACNC,OAAQvH,EAAMO,QAAQ,GACtB+C,SAAU,WACVL,UAAW,cA8GAc,gBACbC,aAvBsB,SAAAC,GACtB,MAAO,CACLC,KAAMD,EAAME,KAAKD,KACjBsB,YAAavB,EAAMpC,KAAK2D,YACxBgC,SAAUvD,EAAMpC,KAAK2F,aAIE,SAAAlD,GACzB,MAAO,CACLC,eAAgB,SAACC,EAAMC,GACrB,OAAOH,EAASC,YAAeC,EAAMC,KAEvCgD,eAAgB,SAAC3F,EAAI4F,GACnB,OAAOpD,EAASmD,YAAe3F,EAAI4F,KAErCC,WAAY,SAAAC,GACV,OAAOtD,EAASqD,YAAWC,QAM/B5D,EA3Ge,SAAAhD,GACCE,cAChByD,qBAAU,WAIR,OAHAxD,QAAQC,IAAI,aACZD,QAAQC,IAAIJ,GACZA,EAAMyG,eAAezG,EAAM+G,MAAMC,OAAOlG,IACjC,WACLgI,IAAkBC,WAEnB,IACH,IAAQvE,EAAgBxE,EAAhBwE,YACRb,qBAAU,WACJqF,QAAQF,MAAsBA,IAAkBG,WAClDH,IAAkBC,QAEpBD,IAAkB9F,QAAlB,UACiC,SAA5Bb,OAAO+G,SAASC,SAAsB,KAAO,MADlD,cAEIhH,OAAO+G,SAASE,KAAKC,SAAS,cAC1B,iBACAlH,OAAO+G,SAASI,SAJxB,oBAKctJ,EAAMwE,YAAY/C,aAGhCqH,IAAkBS,WAAW,YAAa,CACxCC,OAAO,EACPC,OAAO,EACPC,UAAU,IAEZZ,IAAkBa,GAAG,oBAAoB,SAAAC,GAKvCA,EAAQ1G,KAAO2G,KAAKC,MAAMF,EAAQ1G,MAClClD,EAAM2G,WAAWiD,QAMlB,CAACpF,EAAY1D,KAChB,IAAMT,EAAUvB,IAChB,EAA8BwB,mBAAS,IAAvC,mBAAOsG,EAAP,KAAgBmD,EAAhB,KAUA,OACE,eAAC,IAAD,CAAMtJ,UAAWJ,EAAQ6F,YAAzB,UACE,cAAC,IAAD,CAAatC,MAAM,YAAYnD,UAAWJ,EAAQwI,YAAlD,SACE,cAAC,IAAD,CAAYhF,QAAQ,KAApB,oBAEF,cAAC,IAAD,IACA,cAAC,IAAD,CACED,MAAM,YACNnD,UAAWJ,EAAQ4E,UACnBC,SAbN,SAA8BC,GAC5B4E,EAAW5E,EAAMC,OAAOC,QAapBA,MAAOuB,EACPtB,KAAK,UACLzB,QAAQ,WACR0B,cAAc,EACdrE,MAAM,GACNsE,YAAY,iBACZC,WAAY,CACVC,aACE,cAAC,IAAD,CAAgBpD,SAAS,MAAzB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAS3B,QA7BvB,WACEmI,IAAkBS,WAAW,eAAgB3C,GAC7CmD,EAAW,KA2BC,SACE,cAAC,IAAD,qB,kiBCpIZjL,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCgL,YAAa,CACXnI,SAAU,SACVoI,UAAW,OACXC,eAAgB,QAChBhL,gBAAiBF,EAAMG,QAAQC,UAAUC,KACzCO,QAAS,OACTC,WAAY,SACZC,aAAc,cAwBHqK,GArBK,SAAAnK,GAClB,IAAMK,EAAUvB,KAGhB,OACE,eAACsL,EAAA,EAAD,CACE3J,UAAWJ,EAAQ2J,YACnB3I,MAAO,CACL7B,MAAOQ,EAAMR,MACbG,OAAQK,EAAML,OACdC,QAASI,EAAMwJ,MAAQ,OAAS,IALpC,SAQE,iCACE,eAACa,EAAA,EAAD,CAAYxG,QAAQ,KAApB,SAA0B7D,EAAMsF,OAC/BtF,EAAMyJ,MAAQ,eAAC,IAAD,IAAc,eAAC,IAAD,U,mBCjC/B3K,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCwK,MAAO,CAILU,eAAgB,QAChBD,UAAW,OACXpI,SAAU,cAGDyI,GAAQ,SAAAtK,GACnBG,QAAQC,IAAIJ,EAAMuK,MAClB,IAAMlD,EAAMP,mBAENzG,EAAUvB,KAYhB,OATA6E,qBAAU,WACRxD,QAAQC,IAAI,iBACZJ,EAAMuK,MACJvK,EAAMuK,KAAKZ,GAAG,UAAU,SAAAa,GACtBrK,QAAQC,IAAIoK,GACZnD,EAAIJ,QAAQwD,UAAYD,OAE3B,IAGD,wBACEE,aAAW,EACXlL,MAAOQ,EAAMR,MACbG,OAAQK,EAAML,OACdgL,UAAQ,EACRtJ,MAAO,CAAEzB,QAASI,EAAMwJ,MAAQ,QAAU,QAC1C/I,UAAWJ,EAAQmJ,MACnBnC,IAAKA,KCrBLvI,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCwK,MAAO,CACLU,eAAgB,QAChBD,UAAW,OACXpI,SAAU,UAEZ+I,cAAe,CACbtI,SAAU,WACVE,IAAK,SAELoB,MAAO,QACP1E,gBAAiB,qBAIjBS,OAAQ,SACRkL,aAAc,SAEdvG,QAAS,iBAEXwG,QAAS,CACP1C,UAAW,SACX9F,SAAU,WACVgC,QAAStF,EAAMO,QAAQ,GACvBD,OAAQN,EAAMO,QAAQ,GACtBK,QAAS,OACTH,eAAgB,cA8DLsL,GA3DE,SAAA/K,GACf,IAAMK,EAAUvB,KAGhB,OACE,eAACkM,EAAA,EAAD,CACEzD,WAAS,EACTC,MAAI,EACJC,GAAI,GAGJhH,UAAWJ,EAAQyK,QACnBzJ,MAAO,CAAC,QAAYrB,EAAM0B,KAAO,GAAK,QAPxC,SASE,gBAACzC,GAAA,EAAD,WACGe,EAAMiL,MACL,wBACEzL,MAAOQ,EAAMR,MACbG,OAAQK,EAAML,OACd+K,aAAW,EACXQ,OAAK,EACL7J,MAAO,CAAEzB,QAASI,EAAMwJ,MAAQ,QAAU,QAC1CmB,UAAQ,EACRlK,UAAWJ,EAAQmJ,MACnBnC,IAAKrH,EAAMiL,QAGb,eAAC,GAAD,CACEV,KAAMvK,EAAMuK,KAAKA,KACjBf,MAAOxJ,EAAMwJ,MACb2B,UAAWnL,EAAMoL,WACjB5L,MAAOQ,EAAMR,MACbG,OAAQK,EAAML,OACd0L,SAAUrL,EAAMqL,WAGpB,eAAC,GAAD,CACE/F,KAAMtF,EAAMsF,KACZmE,MAAOzJ,EAAMyJ,MACbD,MAAOxJ,EAAMwJ,MACb2B,UAAWnL,EAAMoL,WACjB5L,MAAOQ,EAAMR,MACbG,OAAQK,EAAML,OACd0L,SAAUrL,EAAMqL,WAElB,sBACEhK,MAAO,CAAEzB,QAASI,EAAMwJ,MAAQ,QAAU,QAC1C/I,UAAWJ,EAAQuK,cAFrB,SAIE,gBAACP,EAAA,EAAD,CAAYxG,QAAQ,KAAK9C,cAAY,EAArC,UACGf,EAAMsF,KADT,IACgBtF,EAAMyJ,MAAQ,eAAC,IAAD,IAAc,eAAC,IAAD,e,mFC3ChD3K,GAAYC,aAAW,SAAAC,GAAK,YAAK,CACrCwK,MAAO,CAILU,eAAgB,QAChBD,UAAW,OACXpI,SAAU,UAEZyJ,cAAc,aACZ7L,eAAgB,UACfT,EAAMgH,YAAYC,KAAK,MAAQ,CAC9BsF,cAAe,WAGnBC,WAAY,CACV5L,QAAS,OACTmG,aAAc,SACdlG,WAAY,SACZJ,eAAgB,UAElByE,MAAO,CACLtE,QAAS,OACTH,eAAgB,eAChBI,WAAY,SAEZgC,SAAU,SACVlC,OAAQ,OACRH,MAAO,OACP4E,UAAW,QAKbwG,cAAe,CACbtI,SAAU,YAGZwI,QAAS,CACP1C,UAAW,SACX9F,SAAU,WACVgC,QAAStF,EAAMO,QAAQ,GACvBD,OAAQN,EAAMO,QAAQ,IAExBkM,SAAU,CACR9L,OAAQ,QAEV+L,gBAAiB,CACf9L,QAAS,OACTmG,aAAc,SACdvG,MAAO,OACPG,OAAQ,OACR2C,SAAU,YAEZqJ,QAAQ,aACNrJ,SAAU,WACVpD,gBAAiBF,EAAMG,QAAQC,UAAUC,KACzCuM,OAAQ,EAERC,SAAU,OACV3J,UAAW,QACVlD,EAAMgH,YAAYC,KAAK,MAAQ,CAC9B3D,SAAU,WACVE,IAAK,EACL2D,OAAQ,EACRI,MAAO,EACPD,KAAM,EACN9G,MAAO,OACPG,OAAQ,SAGZmM,aAAc,CACZxH,QAAS,OAEX8B,gBAAiB,CACf9B,QAAS,MACThC,SAAU,WACVT,SAAU,SACVlC,OAAQ,MACRH,MAAO,QAET6G,YAAa,CACXnE,UAAW,OACXM,IAAK,EACL8D,KAAM,EACNC,OAAQvH,EAAMO,QAAQ,GACtB+C,SAAU,WACVL,UAAW,UAEb8J,eAAa,GACXzJ,SAAU,WACV6D,OAAQ,OACRvG,QAAS,OACTH,eAAgB,SAChB2E,UAAW,OACX2B,aAAc,SACd6F,OAAQ,EAGRlJ,WAAY,OACZsJ,YAAa,QAXF,cAYVhN,EAAMgH,YAAYiG,GAAG,MAAQ,CAC5B1F,MAAO,EACPD,KAAM,IAdG,cAgBVtH,EAAMgH,YAAYC,KAAK,MAAQ,CAC9BF,aAAc,QAjBL,GAqBbd,UAAW,CACT3C,SAAU,WACV6D,OAAQ,MACR3G,MAAO,OACPN,gBAAiBF,EAAMG,QAAQsD,QAAQpD,UAIrC6M,GAAmB,GAKnBC,GAAOC,IAAMC,MAAK,SAAArM,GACtB,IAAMC,EAAUC,cACVsE,EAAc2D,aAAY,SAAAlF,GAAK,OAAIA,EAAMpC,KAAK2D,eACpD,EAA8BlE,oBAAS,GAAvC,mBAAOgM,EAAP,KAAgBC,EAAhB,KACA,EAA4CjM,oBAAS,GAArD,mBAAOkM,EAAP,KAAuBC,EAAvB,KACA,EAA8BnM,qBAA9B,mBAAOsG,EAAP,KAAgBmD,EAAhB,KAEA,GADc5B,aAAY,SAAAlF,GAAK,OAAIA,EAAME,KAAKuJ,SACpBpM,mBAAS,KAAnC,mBAAOqM,EAAP,KAAcC,EAAd,KACA,EAA8BtM,mBAAS,IAAvC,mBACA,GADA,UACsCA,mBAAS,KAA/C,mBAAOuM,EAAP,KACA,GADA,KACkCvM,mBAAS,KAA3C,oBAAkBwM,IAAlB,aAEI,IADYhG,mBACgBxG,mBAAS,MAAzC,qBAAK6K,GAAL,MACI,IADJ,MACoC7K,mBAAS6B,OAAOC,OAAOC,YAAc,IAAzE,qBAAK0K,GAAL,MAAkBC,GAAlB,MACI,GAA8B1M,mBAAS6B,OAAOC,OAAO6K,WAAa,GAAtE,qBAAKC,GAAL,MAAiBC,GAAjB,MACMC,GAAYtG,mBACZD,GAAaC,mBAEbuG,GAAWvG,mBACbwG,GAAcxG,mBAClB,GAAgCxG,qBAAhC,qBAAOiN,GAAP,MAAiBC,GAAjB,MACA,GAA0BlN,oBAAS,GAAnC,qBAAOkJ,GAAP,MAAciE,GAAd,MACA,GAAsBnN,mBAAS,GAA/B,qBAAOoN,GAAP,MAAYC,GAAZ,MACA,GAAwBrN,oBAAS,GAAjC,qBAAOoB,GAAP,MAAakM,GAAb,MACA,GAAsCtN,oBAAS,GAA/C,qBAAOuN,GAAP,MAAoBC,GAApB,MACA,GAAsCxN,oBAAS,GAA/C,qBAAOyN,GAAP,MAAoBC,GAApB,MACA,GAA8C1N,oBAAS,GAAvD,qBAAO2N,GAAP,MAAwBC,GAAxB,MACA,GAA0B5N,oBAAS,GAAnC,qBAAOmJ,GAAP,MAAc0E,GAAd,MACA,GAAmC7N,oBAAS,GAA5C,qBAAO8N,GAAP,MAAkBC,GAAlB,MACMC,GAAWxH,iBAAO,IAClBzG,GAAUvB,KA6ahB,SAASyP,KACPL,IAAmB,GACnBF,IAAgBD,IAGlB,SAASS,KACPR,IAAe,GACfE,IAAoBD,IAoBtB,SAASQ,KACPnB,GAAYrG,QAAQyH,iBAAiB,GAAGC,SAAWrB,GAAYrG,QAAQyH,iBAAiB,GACrFC,QACCrC,EACFmB,IAAUjE,IAEVV,IAAkBS,WAAW,gBAGjC,SAASqF,KACPtB,GAAYrG,QAAQ4H,iBAAiB,GAAGF,SAAWrB,GAAYrG,QAAQ4H,iBAAiB,GACrFF,QAECrC,EACF6B,IAAU1E,IAEVX,IAAkBS,WAAW,gBAgBjC,OAteA5F,qBAAU,WAGR,OAFAxD,QAAQC,IAAI,cACZJ,EAAMyG,eAAezG,EAAM+G,MAAMC,OAAOlG,IACjC,WACUwM,GAAYrG,QAAQ6H,YAC5B9K,KAAI,SAAA+K,GACTA,EAAMC,UAER1B,GAAYrG,QAAQ6H,YAAY,GAAGE,OACnClG,IAAkBC,WAEnB,IAEHpF,qBAAU,WACRxD,QAAQC,IAAI,iBACZD,QAAQC,IAAIuM,KACX,CAACA,IAEJhJ,qBAAU,WACRxD,QAAQC,IAAIyM,EAAYzF,QACpBP,GAAWI,UACb9G,QAAQC,IAAIyG,GAAWI,QAAQC,WAC/BL,GAAWI,QAAQC,UAAYL,GAAWI,QAAQE,aAClDhH,QAAQC,IAAIyG,GAAWI,QAAQC,cAEhC,CAACL,GAAWI,QAASjH,EAAMwG,SAASY,SAEvCzD,qBAAU,WACR,GAAI0J,GAASpG,QAAS,CAKpB,IAAIgI,EAAI,EACJvN,IACFuN,IAEFA,GAAKX,GAASrH,QAAQiI,QAAO,SAAA3E,GAAI,OAAkB,IAAdA,EAAK7I,QAAe0F,OAEvD0G,GADO,GAALmB,GAKJ,IAAIE,EAASC,KAAKC,KAAKJ,GAErBE,EADE9B,GAASpG,QAAQqI,aAAejC,GAASpG,QAAQsI,YAC1CH,KAAKI,KAAKL,GAEVC,KAAKK,MAAMN,GAEtBxB,GAAOwB,GACP,IAAMO,EAASN,KAAKI,KAAKP,EAAIE,GAC7BnC,GAAeK,GAASpG,QAAQqI,cAAgB,IAAMI,IACtDvC,GAAcE,GAASpG,QAAQsI,aAAe,IAAMJ,IACpDhP,QAAQC,IAAI,qBACZD,QAAQC,IAAIsN,OAGb,CACDL,GAASpG,QACT0F,EACAjL,GACAqM,GACAE,GACAK,GAASrH,QAAQG,SAGnBzD,qBAAU,WAMRxD,QAAQC,IAAI,0BACZD,QAAQC,IAAIoE,GACZxE,EAAMkI,eAAelI,EAAM+G,MAAMC,OAAOlG,IAAI,WAC1CX,QAAQC,IAAIoE,GAAeA,EAAYrD,WAAWwG,IAAM3H,EAAM2P,OAAOhI,IACjEnD,GAAeA,EAAYrD,WAAWwG,IAAM3H,EAAM2P,OAAOhI,KAC3DiI,UAAUC,aACPC,aAAa,CAAEtG,MAAO,CAAE0C,qBAAoBzC,OAAO,IACnDsG,MAAK,SAAAvF,GACJrK,QAAQC,IAAIoK,GACZ4C,GAAUnG,QAAQwD,UAAYD,EAE9B8C,GAAYrG,QAAUuD,EACtBgD,GAAYhD,MAEbwF,OAAM,SAAAC,GACL9P,QAAQC,IAAI6P,GACZrL,IAAMsL,MAAM,mDAEhB/P,QAAQC,IAAI,gBACZmM,GAAW,IAEb8B,IAAc,QAEf,CAAC7J,EAAY1D,KAEhB6C,qBAAU,WACJyK,KACE9B,EACFsD,UAAUC,aACPC,aAAa,CAAEtG,MAAO,CAAE0C,qBAAoBzC,OAAO,IACnDsG,MAAK,SAAAvF,GACJrK,QAAQC,IAAIoK,GACZ4C,GAAUnG,QAAQwD,UAAYD,EAE9B8C,GAAYrG,QAAUuD,EACtBgD,GAAYhD,MAEbwF,OAAM,SAAAC,GACL9P,QAAQC,IAAI6P,GACZrL,IAAMsL,MAAM,oDAGZlH,QAAQF,MAAsBA,IAAkBG,WAClDH,IAAkBC,QAEpBD,IAAkB9F,QAAlB,UACiC,SAA5Bb,OAAO+G,SAASC,SAAsB,KAAO,MADlD,cAEIhH,OAAO+G,SAASE,KAAKC,SAAS,cAC1B,iBACAlH,OAAO+G,SAASI,SAJxB,oBAKctJ,EAAMwE,YAAY/C,aAKhCqL,GAAahE,KACbA,IAAkBS,WAAW,YAAa,CACxCC,SACAC,SACAC,UAAU,IAEZZ,IAAkBa,GAAG,kBAAkB,SAAAzG,GACrC,IAAIiN,GAC+C,GAAjDnQ,EAAMwE,YAAYgE,UAAU4H,QAAQlN,EAAKpC,IAC3CX,QAAQC,IAAIJ,EAAMwE,YAAYgE,WAC9BrI,QAAQC,IAAI8C,EAAKpC,IAAMd,EAAMwE,YAAYrD,WAAWwG,IACpDxH,QAAQC,IACN8C,EAAKpC,IAAMd,EAAMwE,YAAYrD,WAAWwG,IAAMwI,GAE5CjN,EAAKpC,IAAMd,EAAMwE,YAAYrD,WAAWwG,IAAMwI,EAChDrH,IAAkBS,WAAW,gBAAiBrG,EAAKpC,IAEnDd,EAAMwE,YAAYrD,WAAWwG,IAAM3H,EAAM2P,OAAOhI,IAChDnD,EAAYrD,WAAWwG,IAAMzE,EAAKpC,IAElC8D,aACE,SAAAyL,GAAC,OACC,iCACGnN,EAAKwB,MADR,iBAC6B,IAC3B,eAAC4L,EAAA,EAAD,CACE1M,MAAM,UACNjD,QAAS,kBA+LA4P,EA/LuBF,EAAEvP,GA+Lf0P,EA/LmBtN,EAAKpC,GAgM3DgI,IAAkBS,WAAW,gBAAiBiH,QAC9C5L,IAAM6L,QAAQF,GAFhB,IAA2BA,EAAUC,GAjMrB,oBAMA,eAACF,EAAA,EAAD,CACE1M,MAAM,UACNjD,QAAS,kBA8LA4P,EA9LuBF,EAAEvP,GA8Lf0P,EA9LmBtN,EAAKpC,GA+L3DgI,IAAkBS,WAAW,gBAAiBiH,QAC9C5L,IAAM6L,QAAQF,GAFhB,IAA2BA,EAAUC,GAhMrB,0BAQJ,CACEE,KAAM,eACNC,SAAU,SAKlB7H,IAAkBa,GAAG,uBAAuB,SAAAC,GAC1CzJ,QAAQC,IAAIJ,EAAM2P,OAAOhI,IAAMiC,EAAQ9I,IACnCd,EAAM2P,OAAOhI,IAAMiC,EAAQ9I,KAC7B8P,MAAM,+BACN3Q,EAAQW,KAAK,SAGjBkI,IAAkBa,GAAG,aAAa,SAAAC,GAMhC,GALsB,GAAlB4C,IACFrM,QAAQC,IAAI,wBACZqM,GAAkB,GAClBW,GAAUnG,QAAQwD,UAAY6C,GAAYrG,SAExC2C,EAAQ9I,IAAMd,EAAM2P,OAAOhI,GAAI,CACjCxH,QAAQC,IAAI,sBACZD,QAAQC,IAAIwJ,EAAQiH,OACpB,IAAMC,EAAW,GACjBlH,EAAQiH,MAAME,SAAQ,SAAA7N,GACpB,GAAIA,EAAK,KAAOlD,EAAM2P,OAAOhI,KACtBqB,QAAQsF,GAASrH,QAAQ+J,MAAK,SAAAzP,GAAC,OAAIA,EAAE0P,QAAU/N,EAAK,OAAM,CAC7D/C,QAAQC,IAAIkN,GAAYrG,SACxB,IAAMsD,EAiKtB,SAAqB2G,EAAcC,EAAU3G,GAC3C,IAAMD,EAAO,IAAI6G,IAAK,CACpBC,WAAW,EACXC,SAAS,EACT9G,WAWF,OARAD,EAAKZ,GAAG,UAAU,SAAA4H,GAChBzI,IAAkBS,WAAW,iBAAkB,CAC7C2H,eACAC,WACAI,cAIGhH,EAhLoBiH,CACXtO,EAAK,GACLlD,EAAM2P,OAAOhI,GACb2F,GAAYrG,SAEdqH,GAASrH,QAAQrG,KAAK,CACpBqQ,OAAQ/N,EAAK,GACbuO,SAAUvO,EAAK,GACfsG,MAAOtG,EAAK,GACZuG,MAAOvG,EAAK,GACZxB,MAAM,EACN6I,SAEFuG,EAASlQ,KAAK,CACZqQ,OAAQ/N,EAAK,GACbuO,SAAUvO,EAAK,GACfsG,MAAOtG,EAAK,GACZuG,MAAOvG,EAAK,GACZxB,MAAM,EACN6I,SAEFpK,QAAQC,IAAI,gBAAkB8C,EAAK,QAIzC0J,EAASkE,GACT3Q,QAAQC,IAAI,yBACZD,QAAQC,IAAIuM,OAIhB7D,IAAkBa,GAAG,eAAe,SAAAC,GAIlC,GADAzJ,QAAQC,IAAIwJ,EAAQ8H,QAChB9H,EAAQ8H,SAAW1R,EAAM2P,OAAOhI,GAAI,CACtC,IACGqB,QACCsF,GAASrH,QAAQ+J,MAAK,SAAAzP,GAAC,OAAIA,EAAE0P,QAAUrH,EAAQ+H,OAAO,OAExD,CACA,IAAMpH,EA0IlB,SAAkBqH,EAAgBD,EAAQnH,GACxC,IAAMD,EAAO,IAAI6G,IAAK,CACpBC,WAAW,EACXC,SAAS,EACT9G,WAEE2G,EAAWQ,EAAO,GAOtB,OANApH,EAAKZ,GAAG,UAAU,SAAA4H,GAChBzI,IAAkBS,WAAW,mBAAoB,CAAEgI,SAAQJ,gBAG7D5G,EAAKgH,OAAOK,GAELrH,EAvJgBsH,CACXjI,EAAQ2H,OACR3H,EAAQ+H,OACRrE,GAAYrG,SAEdrC,YAAM,GAAD,OAAIgF,EAAQ+H,OAAO,GAAnB,qBAA0C,CAAEjB,KAAM,iBACvDvQ,QAAQC,IAAR,UAAewJ,EAAQ+H,OAAO,GAA9B,sBACArD,GAASrH,QAAQrG,KAAK,CACpBqQ,OAAQrH,EAAQ+H,OAAO,GACvBF,SAAU7H,EAAQ+H,OAAO,GACzBnI,MAAOI,EAAQ+H,OAAO,GACtBlI,MAAOG,EAAQ+H,OAAO,GACtBjQ,MAAM,EACN6I,SAGF,IAAIuH,EAAU,CACZb,OAAQrH,EAAQ+H,OAAO,GACvBF,SAAU7H,EAAQ+H,OAAO,GACzBnI,MAAOI,EAAQ+H,OAAO,GACtBlI,MAAOG,EAAQ+H,OAAO,GACtBjQ,MAAM,EACN6I,QAGFqC,EAAS,GAAD,mBAAKD,GAAL,CAAYmF,KAEpB3R,QAAQC,IAAI,cAEdD,QAAQC,IAAIuM,OAKhB7D,IAAkBa,GAAG,6BAA6B,SAAAC,IAChDzJ,QAAQC,IAAI,6BACRwJ,EAAQ8H,SAAW1R,EAAM2P,OAAOhI,KACrB2G,GAASrH,QAAQ8K,MAAK,SAAAC,GAAC,OAAIA,EAAEf,SAAWrH,EAAQ9I,MACxDyJ,KAAKgH,OAAO3H,EAAQ2H,QAG3BpR,QAAQC,IAAIuM,MAGd7D,IAAkBa,GAAG,aAAa,SAAA7I,GAChC,IAAMgR,EAAUxD,GAASrH,QAAQ8K,MAAK,SAAAC,GAAC,OAAIA,EAAEf,SAAWnQ,KACpDgR,IACFlN,YAAM,GAAD,OAAIkN,EAAQL,SAAZ,UAA8B,CAAEf,KAAM,iBAE3CoB,EAAQvH,KAAK0H,WAEf,IAAMnB,EAAWxC,GAASrH,QAAQiI,QAAO,SAAA8C,GAAC,OAAIA,EAAEf,SAAWnQ,KAC3DwN,GAASrH,QAAU6J,EACnBlE,EAASkE,MAGXhI,IAAkBa,GAAG,oBAAoB,SAAAC,GAMvCA,EAAQ1G,KAAO2G,KAAKC,MAAMF,EAAQ1G,MAEhClD,EAAM2P,OAAOvO,YAAcwI,EAAQ1G,KAAK9B,YACvC2M,IAEDnJ,YAAM,GAAD,OAAIgF,EAAQ1G,KAAK9B,WAAjB,cAAiCwI,EAAQhD,SAAW,CACvD8J,KAAM,iBAIV1Q,EAAM2G,WAAWiD,MAGnBd,IAAkBa,GAAG,gBAAgB,SAAAC,GACnC,GAAIA,EAAQ9I,IAAMd,EAAM2P,OAAOhI,GAC7B8F,GAAS7D,EAAQvE,WACZ,CACL,IAAI6M,EAAW5D,GAASrH,QACxB,IAAK,IAAIkL,KAAKD,EACZ,GAAIA,EAASC,GAAGlB,QAAUrH,EAAQ9I,GAAI,CACpCoR,EAASC,GAAG3I,MAAQI,EAAQvE,MAC5B,MAGJuH,EAAS,YAAIsF,IACb5D,GAASrH,QAAUiL,MAIvBpJ,IAAkBa,GAAG,gBAAgB,SAAAC,GACnC,GAAIA,EAAQ9I,IAAMd,EAAM2P,OAAOhI,GAC7BwG,GAASvE,EAAQvE,WACZ,CACL,IAAI6M,EAAW5D,GAASrH,QACxB,IAAK,IAAIkL,KAAKD,EACZ,GAAIA,EAASC,GAAGlB,QAAUrH,EAAQ9I,GAAI,CACpCoR,EAASC,GAAG1I,MAAQG,EAAQvE,MAC5B,MAGJuH,EAAS,YAAIsF,IACb5D,GAASrH,QAAUiL,UAK1B,CAAC9D,GAAW9B,IA6IfnM,QAAQC,IAAIoM,GACZrM,QAAQC,IAAIkM,GACZnM,QAAQC,IAAIuM,GACLyB,GACJ9B,GAAYE,EA4LX,iCACE,uBAAK/L,UAAWJ,GAAQmL,WAAxB,UACE,eAAC,GAAD,CAEEhC,MAAOA,GACPC,MAAOA,GACP2B,WAAYD,GAAYiE,KAAKC,KAAK,EAAIf,GAASrH,QAAQG,QACvD5H,MAAO0N,GACPxL,KAAMA,GACN/B,OAAQoN,GACR9B,MAAOmC,GACP9H,KAAMtF,EAAM2P,OAAOvO,WACnBiK,SAAUiD,GAASrH,QAAQG,QATtBpH,EAAM2P,OAAOhI,IAWpB,iCACE,eAAC2I,EAAA,EAAD,CAAQ3P,QAAS8N,GAAjB,SACGjF,GAAQ,eAAC,IAAD,IAAmB,eAAC,IAAD,MAE9B,eAAC8G,EAAA,EAAD,CAAQ3P,QAASiO,GAAjB,SACGnF,GAAQ,eAAC,IAAD,IAAc,eAAC,IAAD,MAEzB,eAAC6G,EAAA,EAAD,CAAQ3P,QAnQlB,WACER,QAAQC,IAAI,gBACZqM,GAAkB,GAClBF,GAAW,IAgQ8B6F,SAAU5F,EAA3C,6BAKJ,eAAC,KAAD,CAAU7D,SAAS,OArNrB,uBAAKlI,UAAWJ,GAAQoL,SAAxB,UACE,eAAC,IAAD,IACA,uBAAKhL,UAAWJ,GAAQqL,gBAAxB,UACE,gBAACV,EAAA,EAAD,CAEEzD,WAAS,EACThI,QAAS,EACTkB,UAAWJ,GAAQ6D,MACnBmD,IAAKgG,GACLhM,MAAO,CACLgR,oBAAoB,UAAD,OAAY3E,GAAZ,SACnBpL,SAAUuL,GAAc,WAAa,IARzC,UAWE,gBAAC7C,EAAA,EAAD,CAAMvK,UAAWJ,GAAQ0L,cAAzB,UACE,eAACuE,EAAA,EAAD,CAAQ3P,QAAS8N,GAAjB,SACGjF,GAAQ,eAAC,IAAD,IAAmB,eAAC,IAAD,MAE9B,eAAC8G,EAAA,EAAD,CAAQ3P,QAASiO,GAAjB,SACGnF,GAAQ,eAAC,IAAD,IAAc,eAAC,IAAD,MAEzB,eAAC6G,EAAA,EAAD,CAAQ3P,QAAS4N,GAAjB,SACE,eAAC,IAAD,MAEF,eAAC+B,EAAA,EAAD,CAAQ3P,QAAS6N,GAAjB,SACE,eAAC,KAAD,MAEF,eAAC8B,EAAA,EAAD,CAAQ3P,QA1CpB,WACER,QAAQC,IAAImN,KACGA,IAAYA,GAASuB,aAC7B9K,KAAI,SAAA+K,GACTA,EAAMC,UAIR/O,EAAQW,KAAK,MAkCH,SACE,eAAC,IAAD,MAEF,eAAC0P,EAAA,EAAD,CAAQ3P,QAlIpB,WACEiP,UAAUC,aACPyC,gBAAgB,CAAE9I,MAAO,CAAE+I,OAAQ,UAAY9I,MAAO,SACtDsG,MAAK,SAAAyC,GACJ,IAAK,IAAIC,EAAQ,EAAGA,EAAQnE,GAASrH,QAAQG,OAAQqL,IACnDnE,GAASrH,QAAQwL,GAAOlI,KAAKmI,aAC3BpF,GAAYrG,QAAQyH,iBAAiB,GACrC8D,EAAa9D,iBAAiB,GAC9BpB,GAAYrG,SAGhB2F,EAAS,YAAI0B,GAASrH,UACtBqG,GAAYrG,QAAQ0L,YAAYrF,GAAYrG,QAAQyH,iBAAiB,IACrEpB,GAAYrG,QAAQ2L,SAASJ,EAAa9D,iBAAiB,QAqHrD,SACE,eAAC,IAAD,SAGHb,IAAe,eAAC,KAAD,CAAUlF,SAAS,IACnC,eAAC,GAAD,CAEEa,MAAOA,GACPC,MAAOA,GACP2B,WAAYD,GAAYiE,KAAKC,KAAK,EAAIf,GAASrH,QAAQG,QACvD5H,MAAO0N,GACPvN,OAAQoN,GACRrL,KAAMA,GACNuJ,MAAOmC,GACP9H,KAAMtF,EAAM2P,OAAOvO,WACnBiK,SAAUiD,GAASrH,QAAQG,QATtBpH,EAAM2P,OAAOhI,GAAK,KAuBxB2G,GAASrH,QAAQjD,KAAI,SAAAuG,GAEpB,OADApK,QAAQC,IAAImK,GAEV,eAAC,GAAD,CAEEf,MAAOe,EAAKf,MACZC,MAAOc,EAAKd,MACZ2B,WACED,GAAYiE,KAAKC,KAAK,EAAIf,GAASrH,QAAQG,QAE7C5H,MAAO0N,GACPvN,OAAQoN,GACR9B,MAAO,KACPvJ,KAAM6I,EAAK7I,KACX6I,KAAMA,EACNjF,KAAMiF,EAAKkH,SACXpG,SAAUiD,GAASrH,QAAQG,QAZtBmD,EAAK0G,cAiBjBlD,GACC,gBAAC/C,EAAA,EAAD,CAAMvK,UAAWJ,GAAQsL,QAAzB,UACE,eAACX,EAAA,EAAD,CAAMvK,UAAWJ,GAAQyL,aAAzB,SACE,eAAC+G,EAAA,EAAD,UACE,eAAC,IAAD,CAAelS,QAAS4N,SAG5B,eAAC,KAAD,IACA,eAACvD,EAAA,EAAD,CAAMvK,UAAWJ,GAAQyS,aAAzB,SACE,eAACC,EAAA,EAAD,CACEnP,MAAM,YACNnD,UAAWJ,GAAQ4E,UACnBC,SA1KhB,SAA8BC,GAC5B4E,EAAW5E,EAAMC,OAAOC,QA0KVA,MAAOuB,EACPtB,KAAK,UACLzB,QAAQ,WACR0B,cAAc,EACdrE,MAAM,GACNsE,YAAY,iBACZC,WAAY,CACVC,aACE,eAACsN,EAAA,EAAD,CAAgB1Q,SAAS,MAAzB,SACE,eAACuQ,EAAA,EAAD,UACE,eAACI,EAAA,EAAD,CAAStS,QA1LjC,WACEmI,IAAkBS,WAAW,eAAgB3C,GAC7CmD,EAAW,KAwLW,SACE,eAAC,IAAD,kBAUhB,GAEDkE,GACC,gBAACjD,EAAA,EAAD,CAAMvK,UAAWJ,GAAQsL,QAAzB,UACE,eAACX,EAAA,EAAD,CAAMvK,UAAWJ,GAAQyL,aAAzB,SACE,eAAC+G,EAAA,EAAD,UACE,eAAC,IAAD,CAAelS,QAAS6N,SAG5B,gBAACxD,EAAA,EAAD,WACE,eAACkI,EAAA,EAAD,UACE,gBAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAQzP,MAAM,UAAd,SACG5D,EAAM2P,OAAOvO,WAAW,OAG7B,eAACkS,EAAA,EAAD,CACE7Q,QAASzC,EAAM2P,OAAOvO,aAExB,eAACyR,EAAA,EAAD,CAAYlS,QAAS8N,GAArB,SACGjF,GAAQ,eAAC,IAAD,IAAmB,eAAC,IAAD,MAE9B,eAACqJ,EAAA,EAAD,CAAYlS,QAASiO,GAArB,SACGnF,GAAQ,eAAC,IAAD,IAAc,eAAC,IAAD,MAEzB,eAACoJ,EAAA,EAAD,CAAYlS,QAAS,WAxLjCe,GACFkM,IAAQ,IAERA,IAAQ,GACJR,GAAUnG,UACZmG,GAAUnG,QAAQwD,UAAY6C,GAAYrG,WAmL9B,SACGvF,GAAO,eAAC,KAAD,IAAiB,eAAC,KAAD,QAhBf,eAoBhB,eAAC6R,EAAA,EAAD,IACA,eAACvI,EAAA,EAAD,CAAMxD,MAAI,EAACC,GAAI,GAAIpG,MAAO,CAAEiD,QAAS,QAArC,SACE,eAACyO,EAAA,EAAD,CACEjS,GAAG,uBACHI,MAAM,SACN2C,QAAQ,WACR2P,WAAS,MAGb,eAACD,EAAA,EAAD,IACA,eAACL,EAAA,EAAD,UACG5E,GAASrH,QAAQjD,KAAI,SAAAuG,GAEpB,OADApK,QAAQC,IAAImK,GAEV,gBAAC4I,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAQzP,MAAM,UAAd,SAAyB2G,EAAKkH,SAAS,OAEzC,eAAC6B,EAAA,EAAD,CAAc7Q,QAAS8H,EAAKkH,SAA5B,wBAGA,eAACoB,EAAA,EAAD,CAAYT,UAAQ,EAApB,SACG7H,EAAKf,MAAQ,eAAC,IAAD,CAAc4I,UAAQ,IAAM,eAAC,IAAD,CAAiBA,UAAQ,MAErE,eAACS,EAAA,EAAD,CAAYT,UAAQ,EAApB,SACG7H,EAAKd,MAAQ,eAAC,IAAD,CAAS2I,UAAQ,IAAM,eAAC,IAAD,CAAYA,UAAQ,MAE3D,eAACS,EAAA,EAAD,CAAYlS,QAAS,kBAtP3C,SAAyB4J,GACvB,IAAI2H,EAAW5D,GAASrH,QACxB,IAAK,IAAIkL,KAAKD,EACZ,GAAIA,EAASC,GAAGlB,QAAU1G,EAAK0G,OAAQ,CACrCiB,EAASC,GAAGzQ,MAAQwQ,EAASC,GAAGzQ,KAChC,MAGJkL,EAAS,YAAIsF,IACb5D,GAASrH,QAAUiL,EACnB/R,QAAQC,IAAIkO,GAASrH,SA4O0BwM,CAAelJ,IAA1C,SACGA,EAAK7I,KAAO,eAAC,KAAD,IAAiB,eAAC,KAAD,QAdpB,wBAuBxB,SAmCR,wDA8BWqB,eAAWC,aA1BF,SAAAC,GACtB,MAAO,CACL0M,OAAQ1M,EAAME,KAAKD,KACnBsB,YAAavB,EAAMpC,KAAK2D,YACxBkI,MAAOzJ,EAAME,KAAKuJ,MAClBlG,SAAUvD,EAAMpC,KAAK2F,SACrBkN,cAAezQ,EAAMpC,KAAK6S,kBAIH,SAAApQ,GACzB,MAAO,CACL4E,eAAgB,SAACpH,EAAI2C,GACnB,OAAOH,EAAS4E,YAAepH,EAAI2C,KAErCgD,eAAgB,SAAC3F,EAAI4F,GACnB,OAAOpD,EAASmD,YAAe3F,EAAI4F,KAErCC,WAAY,SAAAC,GACV,OAAOtD,EAASqD,YAAWC,KAE7B+M,iBAAkB,SAAAxI,GAChB,OAAO7H,EAASqQ,YAAiBxI,QAIbnI,CAA6CmJ,KCz6BjEyH,G,4JACJ,WACE,OACE,sBAAKvS,MAAO,CAAC1B,OAAO,QAASc,UAAU,YAAvC,SACE,eAAC,GAAD,U,GAJgBoT,aAuBT7Q,uBAbS,SAAAC,GACtB,MAAO,CACLC,KAAMD,EAAME,KAAKD,SAIM,SAAAI,GACzB,MAAO,CACLwQ,WAAY,WACV,OAAOxQ,EAASwQ,mBAIP9Q,CAA6C4Q","file":"static/js/6.50c617fa.chunk.js","sourcesContent":["import {\n  Card,\n  CardActions,\n  Chip,\n  IconButton,\n  Typography\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport React, { Component, useEffect, useState } from 'react'\nimport AddUserModal from './addUser'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport LaunchIcon from '@material-ui/icons/Launch'\nimport PersonAddIcon from '@material-ui/icons/PersonAdd'\n\nconst useStyles = makeStyles(theme => ({\n  Card: {\n    backgroundColor: theme.palette.secondary.main,\n    margin: theme.spacing(0.4),\n    width: '80%',\n    justifyContent: 'space-between'\n  },\n  roomCardMainDiv: {\n    height: '100%',\n    width: '100%',\n    display: 'grid',\n    alignItems: 'center',\n    justifyItems: 'center'\n  }\n}))\n\nconst ChatRoomCard = props => {\n  const history = useHistory()\n  console.log(props)\n  const classes = useStyles()\n  const [showAddUserModal, setShowAddUserModal] = useState(false)\n\n  function openRoom (e) {\n    e.stopPropagation()\n    history.push(`/video/${props.room.id}/${props.room.sharing_id}`)\n  }\n\n  function handleAddUser (e) {\n    e.stopPropagation()\n    setShowAddUserModal(true)\n  }\n\n  return (\n    <div className={classes.roomCardMainDiv}>\n      <Card\n        className={classes.Card}\n        clickable\n        onClick={() => history.push(`/room/${props.room.id}`)}\n      >\n        <CardActions>\n          <Typography onClick={() => setShowAddUserModal(true)} gutterBottom>\n            {props.room && props.room.room_name}\n          </Typography>\n          {props.invite && (\n            <Chip label={`creater : ${props.room.created_by.first_name}`} />\n          )}\n          <div style={{ marginInlineStart: 'auto' }}>\n            {!props.invite && (\n              <IconButton>\n                <PersonAddIcon onClick={handleAddUser} />\n              </IconButton>\n            )}\n            <IconButton>\n              <LaunchIcon onClick={openRoom} />\n            </IconButton>\n          </div>\n        </CardActions>\n      </Card>\n      {showAddUserModal && (\n        <AddUserModal\n          room={props.room}\n          onClick={e => e.stopPropagation()}\n          show={showAddUserModal}\n          onClose={() => setShowAddUserModal(false)}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default ChatRoomCard\n","import React, { Component, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory, withRouter } from 'react-router-dom'\nimport {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Grid,\n  Paper,\n  StepLabel,\n  TextField,\n  Typography\n} from '@material-ui/core'\nimport { createChatRoom, getAllRooms } from '../../actions/chatRoomAction'\nimport ChatRoomCard from '../common/chatRoomCard'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles(theme => ({\n  roomsList: {\n    width: '80%',\n    display: 'grid',\n    justifyItems: 'center',\n    overflow: 'hidden',\n    paddingBottom: theme.spacing(1),\n    gridTemplateRows: 'min-content',\n    height: '80%'\n  },\n  list: {\n    overflowY: 'scroll',\n    maxHeight: window.screen.availHeight / 2,\n    width: '100%',\n    display: 'grid',\n    justifyItems: 'center',\n    position: 'absolute'\n  },\n  listHeading: {\n    top: 0,\n    backgroundColor: theme.palette.primary.main,\n    width: '100%',\n    height: '50%',\n    marginLeft: '10%'\n  },\n  listWrapper: {\n    position: 'relative',\n    width: '100%',\n    height: '90%',\n    overflow: 'hidden'\n  },\n  webkitScrollbar: {\n    width: 0 /* Remove scrollbar space */,\n    background: 'transparent' /* Optional: just make scrollbar invisible */\n  },\n  /* Optional: show position indicator in red */\n  webkitScrollbarThumb: {\n    background: '#FF0000'\n  }\n}))\n\nconst RoomsList = props => {\n  const history = useHistory()\n  useEffect(() => {\n    props.getAllRooms()\n  }, [])\n  const classes = useStyles()\n\n  return (\n    <Card className={classes.roomsList}>\n      <CardContent color='secondary' className={classes.listHeading}>\n        <Typography variant='h5'>{props.heading}</Typography>\n      </CardContent>\n      <CardContent className={classes.listWrapper}>\n      <div className={classes.list}>\n        {props.rooms.map(room => (\n          <ChatRoomCard room={room} invite={props.heading==\"Your Invites\"} />\n        ))}\n      </div>\n      </CardContent>\n    </Card>\n  )\n}\n\nconst mapStateToprops = state => {\n  return {\n    user: state.auth.user,\n    roomsCreated: state.room.roomsCreated,\n    roomsInvited: state.room.roomsInvited\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    createChatRoom: (data, handleSuccess) => {\n      return dispatch(createChatRoom(data, handleSuccess))\n    },\n    getAllRooms: () => {\n      return dispatch(getAllRooms())\n    }\n  }\n}\n\nexport default withRouter(\n  connect(mapStateToprops, mapDispatchToprops)(RoomsList)\n)\n","import {\n  IconButton,\n  InputAdornment,\n  Modal,\n  SvgIcon,\n  TextField\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport Fade from '@material-ui/core/Fade'\nimport { connect } from 'react-redux'\nimport SendIcon from '@material-ui/icons/Send'\nimport rooms from '../../views/rooms'\nimport { useState } from 'react'\nimport { updateRoomUsers } from '../../actions/chatRoomAction'\nimport toast, { Toaster } from 'react-hot-toast'\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: theme.palette.secondary.main,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  textField: {}\n}))\n\nconst AddUserModal = props => {\n  const classes = useStyles()\n  const { show, room, onClose, label = 'Add Participant', ...restProps } = props\n  const [email, setEmail] = useState('')\n  function handleEmailSend () {\n    const data = {\n      \"email\": email\n    }\n    props.updateRoomUsers(data, props.room.id, handleSuccess)\n  }\n\n  function handleSuccess () {\n    toast.success('Added user')\n    setEmail('')\n  }\n\n  function handleEmailChange (event) {\n    setEmail(event.target.value)\n  }\n  return (\n    <Modal\n      aria-labelledby='transition-modal-title'\n      aria-describedby='transition-modal-description'\n      className={classes.modal}\n      open={show}\n      centered\n      onClose={onClose}\n    >\n      <Fade in={show}>\n        <div className={classes.paper}>\n        <Toaster />\n          <h2 id='transition-modal-title'>{props.room.room_name}</h2>\n          <div id='transition-modal-description'>\n            <TextField\n              color='secondary'\n              className={classes.textfield}\n              onChange={handleEmailChange}\n              value={email}\n              name='email'\n              variant='outlined'\n              autoComplete={false}\n              label=''\n              placeholder='Enter user email'\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position='end'>\n                    <IconButton>\n                      <SvgIcon onClick={handleEmailSend}>\n                        <SendIcon />\n                      </SvgIcon>\n                    </IconButton>\n                  </InputAdornment>\n                )\n              }}\n            />\n          </div>\n        </div>\n      </Fade>\n    </Modal>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentRoom: state.room.currentRoom\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    updateRoomUsers: (data, id, handleSuccess) => {\n      return dispatch(updateRoomUsers(data, id, handleSuccess))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToprops)(AddUserModal)\n","import React, { Component, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, useHistory, withRouter } from 'react-router-dom'\nimport {\n  Button,\n  Grid,\n  Paper,\n  StepLabel,\n  TextField,\n  Typography\n} from '@material-ui/core'\nimport { createChatRoom, getAllRooms } from '../../actions/chatRoomAction'\nimport ChatRoomCard from '../common/chatRoomCard'\nimport { makeStyles } from '@material-ui/styles'\nimport RoomsList from '../rooms/roomsList'\n\nconst useStyles = makeStyles(theme => ({\n  roomDetailsDiv: {\n    width: '100%',\n    display: 'grid',\n    justifyItems: 'center',\n    height: '90%',\n    alignItems: 'center'\n  }\n}))\n\nconst RoomDetails = props => {\n  const history = useHistory()\n  useEffect(() => {\n    props.getAllRooms()\n  }, [])\n  const classes = useStyles()\n\n  return (\n    <div className={classes.roomDetailsDiv}>\n      <RoomsList heading=\"Your rooms\" rooms={props.roomsCreated.slice(0,2)} />\n      <RoomsList heading=\"Your Invites\" rooms={props.roomsInvited.slice(0,2)} />\n      <Typography variant='h6' className={classes.title}>\n          <Button onClick={() => history.push('/rooms')}>View All</Button>\n        </Typography>\n    </div>\n  )\n}\n\nconst mapStateToprops = state => {\n  return {\n    user: state.auth.user,\n    roomsCreated: state.room.roomsCreated,\n    roomsInvited: state.room.roomsInvited\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    createChatRoom: (data, handleSuccess) => {\n      return dispatch(createChatRoom(data, handleSuccess))\n    },\n    getAllRooms: () => {\n      return dispatch(getAllRooms())\n    }\n  }\n}\n\nexport default withRouter(\n  connect(mapStateToprops, mapDispatchToprops)(RoomDetails)\n)\n","import { Button, Card, Grid, Link, Paper } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport React, { Component, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect, useHistory } from 'react-router'\nimport { logoutUser } from '../actions/authAction'\nimport { getAllRooms } from '../actions/chatRoomAction'\nimport RoomDetails from '../components/homeComponents/roomDetails'\nimport RoomsList from '../components/rooms/roomsList'\n\nconst useStyles = makeStyles(theme => ({\n  Rooms: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    justifyItems: 'center',\n    padding: theme.spacing(2),\n    alignItems: 'center',\n    position: 'relative',\n    height: '100%',\n    [theme.breakpoints.down('xs')]: {\n      gridAutoFlow: 'row'\n    }\n  }\n}))\n\nconst Rooms = props => {\n  useEffect(() => {\n    props.getAllRooms()\n  }, [])\n  const classes = useStyles()\n  return (\n    <Grid className={classes.Rooms}>\n      <RoomsList rooms={props.roomsCreated} heading='Your Rooms' />\n      <RoomsList rooms={props.roomsInvited} heading='Your Invites' />\n    </Grid>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user,\n    roomsCreated: state.room.roomsCreated,\n    roomsInvited: state.room.roomsInvited\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllRooms: () => {\n      return dispatch(getAllRooms())\n    }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Rooms)\n","import React, { Component, useEffect, useRef, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, useHistory, withRouter } from 'react-router-dom'\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Grid,\n  IconButton,\n  InputAdornment,\n  Paper,\n  StepLabel,\n  SvgIcon,\n  TextField,\n  Typography,\n  ListItemText,\n  List,\n  ListItem\n} from '@material-ui/core'\nimport {\n  createChatRoom,\n  getAllMessages,\n  getAllRooms,\n  getRoomDetails,\n  addMessage\n} from '../../actions/chatRoomAction'\nimport WebSocketInstance from '../../websocket/socket'\nimport TimeAgo from 'react-timeago'\nimport { makeStyles } from '@material-ui/styles'\nimport SendIcon from '@material-ui/icons/Send'\n\nconst useStyles = makeStyles(theme => ({\n  roomChatDiv: {\n    height: '100%'\n  },\n  textfield: {\n    position: 'absolute',\n    bottom: '0px',\n    width: '100%',\n    backgroundColor: theme.palette.primary.main\n  },\n  chatBoxMessages: {\n    padding: '2px',\n    position: 'relative',\n    overflow: 'hidden',\n    height: '85%',\n    width: '100%'\n  },\n  messageList: {\n    maxHeight: '100%',\n    top: 0,\n    left: 0,\n    right: -theme.spacing(2),\n    position: 'absolute',\n    overflowY: 'scroll',\n    [theme.breakpoints.down('md')]: {\n      right: 0,\n    },\n  }\n}))\n\nconst ChatBox = (props) => {\n  const history = useHistory()\n  const messageBox = useRef()\n  const classes = useStyles()\n  useEffect(() => {\n    console.log('room chat')\n    console.log(props)\n    props.getAllMessages(props.match.params.id)\n  }, [])\n  useEffect(() => {\n    if (messageBox.current) {\n      console.log(messageBox.current.scrollTop)\n      messageBox.current.scrollTop = messageBox.current.scrollHeight\n      console.log(messageBox.current.scrollTop)\n    }\n  }, [messageBox.current, props.messages.length])\n  const { currentRoom } = props\n  return (\n      <Grid className={classes.chatBoxMessages}>\n        <List ref={messageBox} className={classes.messageList}>\n          {props.messages.map(msg => (\n            <ListItem key={msg.id}>\n              <Grid container>\n                <Grid item xs={12}>\n                  <ListItemText\n                    align={msg.user.pk == props.user.pk ? 'right' : 'left'}\n                    disableTypography\n                    secondary={\n                      <div>\n                        <span style={{ fontWeight: 'bolder' }}>\n                          {msg.user.first_name}\n                        </span>{' '}\n                        <span\n                          style={{\n                            fontWeight: 'lighter',\n                            fontSize: 'small'\n                          }}\n                        >\n                          <TimeAgo date={msg.created_on} />\n                        </span>\n                      </div>\n                    }\n                  ></ListItemText>\n                </Grid>\n                <Grid item xs={12}>\n                  <ListItemText\n                    align={msg.user.pk == props.user.pk ? 'right' : 'left'}\n                    primary={msg.message}\n                  ></ListItemText>\n                </Grid>\n              </Grid>\n            </ListItem>\n          ))}\n        </List>\n      </Grid>\n  )\n}\n\nconst mapStateToprops = state => {\n  return {\n    user: state.auth.user,\n    currentRoom: state.room.currentRoom,\n    messages: state.room.messages\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    createChatRoom: (data, handleSuccess) => {\n      return dispatch(createChatRoom(data, handleSuccess))\n    },\n    getAllMessages: (id, callback) => {\n      return dispatch(getAllMessages(id, callback))\n    },\n    addMessage: message => {\n      return dispatch(addMessage(message))\n    }\n  }\n}\n\nexport default withRouter(connect(mapStateToprops, mapDispatchToprops)(ChatBox))\n","import React, { Component, useEffect, useState } from 'react'\nimport { connect, useSelector } from 'react-redux'\nimport { Link, useHistory, withRouter } from 'react-router-dom'\nimport {\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  Paper,\n  StepLabel,\n  TextField,\n  Typography,\n  ListItemText,\n  List,\n  ListItem,\n  Chip,\n  CardHeader,\n  CardActions\n} from '@material-ui/core'\nimport AddUserModal from '../common/addUser'\nimport {\n  createChatRoom,\n  getAllRooms,\n  getRoomDetails\n} from '../../actions/chatRoomAction'\nimport { makeStyles } from '@material-ui/styles'\nimport VideoCallIcon from '@material-ui/icons/VideoCall'\nimport PersonAddIcon from '@material-ui/icons/PersonAdd'\nimport { getModifiedDate } from '../../helpers/helperFunctions'\n\nconst useStyles = makeStyles(theme => ({\n  roomDataDiv: {\n    width: '100%',\n    display: 'grid',\n    justifyItems: 'center',\n    alignItems: 'center'\n  }\n}))\n\nconst RoomData = props => {\n  const history = useHistory()\n  useEffect(() => {\n    // props.getRoomDetails()\n  }, [])\n  const classes = useStyles()\n  const [showAddUserModal, setShowAddUserModal] = useState(false)\n  const currentRoom = useSelector(state => state.room.currentRoom)\n  function openRoom () {\n    history.push(`/video/${currentRoom.id}/${currentRoom.sharing_id}`)\n  }\n  return (\n    <div className={classes.roomDataDiv}>\n      <Card style={{ textAlign: 'center' }}>\n        <CardHeader\n          // avatar={\n          //   <Avatar aria-label=\"recipe\" className={classes.avatar}>\n          //     R\n          //   </Avatar>\n          // }\n          // action={\n          //   <IconButton aria-label=\"settings\">\n          //     <MoreVertIcon />\n          //   </IconButton>\n          // }\n          title={currentRoom && currentRoom.room_name}\n          subheader={getModifiedDate(currentRoom.created_on)}\n        />\n        {/* <CardHeader color='secondary' className={classes.roomName}>\n          <Typography style={{ textAlign: 'center' }} variant='h4'>\n            {currentRoom && currentRoom.room_name}\n          </Typography>\n        </CardHeader> */}\n        <CardContent>\n          <Typography style={{ textAlign: 'center' }} variant='h5'>\n            Admin\n          </Typography>\n          <Chip\n            size='medium'\n            color='default'\n            label={`${currentRoom.id && currentRoom.created_by.email}`}\n          />\n        </CardContent>\n        <CardContent>\n          <Typography style={{ textAlign: 'center' }} variant='h5'>\n            All Users\n          </Typography>\n          {currentRoom.id &&\n            currentRoom.all_users.map(user => (\n              <Chip size='medium' color='secondary' label={`${user.email}`} />\n            ))}\n        </CardContent>\n        <CardActions style={{ justifyContent: 'center' }}>\n          {currentRoom.id && currentRoom.created_by.pk == props.user.pk && (\n            <Button\n              variant='contained'\n              color='secondary'\n              className={classes.createRoomButton}\n              startIcon={<PersonAddIcon />}\n              onClick={() => setShowAddUserModal(true)}\n            >\n              Add User\n            </Button>\n          )}\n          {props.meeting && <Button\n            variant='contained'\n            color='secondary'\n            className={classes.createRoomButton}\n            startIcon={<VideoCallIcon />}\n            onClick={openRoom}\n          >\n            Join Meeting\n          </Button>}\n          {/* </ListItem> */}\n          {showAddUserModal && (\n            <AddUserModal\n              room={currentRoom}\n              show={showAddUserModal}\n              onClose={() => setShowAddUserModal(false)}\n            />\n          )}\n        </CardActions>\n      </Card>\n    </div>\n  )\n}\n\nconst mapStateToprops = state => {\n  return {\n    user: state.auth.user,\n    currentRoom: state.room.currentRoom\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    createChatRoom: (data, handleSuccess) => {\n      return dispatch(createChatRoom(data, handleSuccess))\n    },\n    getRoomDetails: () => {\n      return dispatch(getRoomDetails())\n    }\n  }\n}\n\nexport default withRouter(\n  connect(mapStateToprops, mapDispatchToprops)(RoomData)\n)\n","import React, { Component, useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, useHistory, withRouter } from 'react-router-dom'\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Grid,\n  IconButton,\n  InputAdornment,\n  Paper,\n  StepLabel,\n  SvgIcon,\n  TextField,\n  Typography,\n  ListItemText,\n  List,\n  ListItem\n} from '@material-ui/core'\nimport {\n  createChatRoom,\n  getAllMessages,\n  getAllRooms,\n  getRoomDetails,\n  addMessage\n} from '../../actions/chatRoomAction'\nimport WebSocketInstance from '../../websocket/socket'\nimport TimeAgo from 'react-timeago'\nimport { makeStyles } from '@material-ui/styles'\nimport SendIcon from '@material-ui/icons/Send'\nimport ChatBox from '../common/chatBox'\n\nconst useStyles = makeStyles(theme => ({\n  roomChatDiv: {\n    // width: '100%',\n    // display: 'grid',\n    // justifyItems: 'center'\n    position: 'relative',\n    height: '90%',\n    backgroundColor: theme.palette.background.default\n  },\n  textfield: {\n    position: 'absolute',\n    bottom: '0px',\n    width: '100%',\n    backgroundColor: theme.palette.primary.main\n  },\n  chatHeading: {\n    top: '0px',\n    backgroundColor: theme.palette.primary.main\n  },\n  chatBoxMessages: {\n    padding: '2px',\n    position: 'relative',\n    overflow: 'hidden',\n    height: '85%',\n    width: '100%'\n  },\n  messageList: {\n    maxHeight: '100%',\n    top: 0,\n    left: 0,\n    right: -theme.spacing(2),\n    position: 'absolute',\n    overflowY: 'scroll'\n  }\n}))\n\nconst RoomChat = props => {\n  const history = useHistory()\n  useEffect(() => {\n    console.log('room chat')\n    console.log(props)\n    props.getAllMessages(props.match.params.id)\n    return () => {\n      WebSocketInstance.close()\n    }\n  }, [])\n  const { currentRoom } = props\n  useEffect(() => {\n    if (Boolean(WebSocketInstance) && WebSocketInstance.socketRef) {\n      WebSocketInstance.close()\n    }\n    WebSocketInstance.connect(\n      `${window.location.protocol == 'http:' ? 'ws' : 'wss'}://${\n        window.location.host.includes('localhost:')\n          ? 'localhost:8000'\n          : window.location.hostname\n      }/ws/chat/${props.currentRoom.sharing_id}`\n    )\n    //   setWebSocket(WebSocketInstance)\n    WebSocketInstance.sendSignal('join room', {\n      video: false,\n      audio: false,\n      onlyChat: true\n    })\n    WebSocketInstance.on('message received', payload => {\n      // const msgObj = {\n      //   user: payload.user,\n      //   msg: payload.message\n      // }\n      payload.user = JSON.parse(payload.user)\n      props.addMessage(payload)\n      // if (props.myuser.first_name != msgObj.user && !chatBoxOpen) {\n      //   toast(`${payload.user} : ${payload.message}`, { icon: '💬' })\n      // }\n      // console.log(allMessages)\n    })\n  }, [currentRoom.id])\n  const classes = useStyles()\n  const [message, setMessage] = useState('')\n  function handleMessageSend () {\n    WebSocketInstance.sendSignal('send_message', message)\n    setMessage('')\n  }\n\n  function handleMessageChange (event) {\n    setMessage(event.target.value)\n  }\n\n  return (\n    <Card className={classes.roomChatDiv}>\n      <CardContent color='secondary' className={classes.chatHeading}>\n        <Typography variant='h5'>Chat</Typography>\n      </CardContent>\n      <ChatBox />\n      <TextField\n        color='secondary'\n        className={classes.textfield}\n        onChange={handleMessageChange}\n        value={message}\n        name='message'\n        variant='outlined'\n        autoComplete={false}\n        label=''\n        placeholder='Enter your msg'\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position='end'>\n              <IconButton>\n                <SvgIcon onClick={handleMessageSend}>\n                  <SendIcon />\n                </SvgIcon>\n              </IconButton>\n            </InputAdornment>\n          )\n        }}\n      />\n    </Card>\n  )\n}\n\nconst mapStateToprops = state => {\n  return {\n    user: state.auth.user,\n    currentRoom: state.room.currentRoom,\n    messages: state.room.messages\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    createChatRoom: (data, handleSuccess) => {\n      return dispatch(createChatRoom(data, handleSuccess))\n    },\n    getAllMessages: (id, callback) => {\n      return dispatch(getAllMessages(id, callback))\n    },\n    addMessage: message => {\n      return dispatch(addMessage(message))\n    }\n  }\n}\n\nexport default withRouter(\n  connect(mapStateToprops, mapDispatchToprops)(RoomChat)\n)\n\n// import React from 'react'\n// import { makeStyles } from '@material-ui/core/styles'\n// import Paper from '@material-ui/core/Paper'\n// import Grid from '@material-ui/core/Grid'\n// import Box from '@material-ui/core/Box'\n// import Divider from '@material-ui/core/Divider'\n// import TextField from '@material-ui/core/TextField'\n// import Typography from '@material-ui/core/Typography'\n// import List from '@material-ui/core/List'\n// import ListItem from '@material-ui/core/ListItem'\n// import ListItemIcon from '@material-ui/core/ListItemIcon'\n// import ListItemText from '@material-ui/core/ListItemText'\n// import Avatar from '@material-ui/core/Avatar'\n// import Fab from '@material-ui/core/Fab'\n// import SendIcon from '@material-ui/icons/Send'\n\n// const useStyles = makeStyles({\n//   table: {\n//     minWidth: 650\n//   },\n//   chatSection: {\n//     width: '100%',\n//     height: '80vh'\n//   },\n//   headBG: {\n//     backgroundColor: '#e0e0e0'\n//   },\n//   borderRight500: {\n//     borderRight: '1px solid #e0e0e0'\n//   },\n//   messageArea: {\n//     height: '70vh',\n//     overflowY: 'auto'\n//   }\n// })\n\n// const RoomChat = () => {\n//   const classes = useStyles()\n\n//   return (\n//     <div>\n//       <Grid container>\n//         <Grid item xs={12}>\n//           <Typography variant='h5' className='header-message'>\n//             Chat\n//           </Typography>\n//         </Grid>\n//       </Grid>\n//       <Grid container component={Paper} className={classes.chatSection}>\n//         <Grid item xs={3} className={classes.borderRight500}>\n//           <List>\n//             <ListItem button key='RemySharp'>\n//               <ListItemIcon>\n//                 <Avatar\n//                   alt='Remy Sharp'\n//                   src='https://material-ui.com/static/images/avatar/1.jpg'\n//                 />\n//               </ListItemIcon>\n//               <ListItemText primary='John Wick'></ListItemText>\n//             </ListItem>\n//           </List>\n//           <Divider />\n//           <Grid item xs={12} style={{ padding: '10px' }}>\n//             <TextField\n//               id='outlined-basic-email'\n//               label='Search'\n//               variant='outlined'\n//               fullWidth\n//             />\n//           </Grid>\n//           <Divider />\n//           <List>\n//             <ListItem button key='RemySharp'>\n//               <ListItemIcon>\n//                 <Avatar\n//                   alt='Remy Sharp'\n//                   src='https://material-ui.com/static/images/avatar/1.jpg'\n//                 />\n//               </ListItemIcon>\n//               <ListItemText primary='Remy Sharp'>Remy Sharp</ListItemText>\n//               <ListItemText secondary='online' align='right'></ListItemText>\n//             </ListItem>\n//             <ListItem button key='Alice'>\n//               <ListItemIcon>\n//                 <Avatar\n//                   alt='Alice'\n//                   src='https://material-ui.com/static/images/avatar/3.jpg'\n//                 />\n//               </ListItemIcon>\n//               <ListItemText primary='Alice'>Alice</ListItemText>\n//             </ListItem>\n//             <ListItem button key='CindyBaker'>\n//               <ListItemIcon>\n//                 <Avatar\n//                   alt='Cindy Baker'\n//                   src='https://material-ui.com/static/images/avatar/2.jpg'\n//                 />\n//               </ListItemIcon>\n//               <ListItemText primary='Cindy Baker'>Cindy Baker</ListItemText>\n//             </ListItem>\n//           </List>\n//         </Grid>\n//         <Grid item xs={9}>\n//           <List className={classes.messageArea}>\n//             <ListItem key='1'>\n//               <Grid container>\n//                 <Grid item xs={12}>\n//                   {/* <ListItem button key='CindyBaker'>\n//                     <ListItemIcon> */}\n//                   <Avatar\n//                     alt='Cindy Baker'\n//                     src='https://material-ui.com/static/images/avatar/2.jpg'\n//                   />\n//                   {/* </ListItemIcon> */}\n//                   {/* <ListItemText primary='Cindy Baker'> */}\n//                   Cindy Baker\n//                   {/* </ListItemText> */}\n//                   {/* </ListItem> */}\n//                   <ListItemText align='right'>\n//                     <Avatar\n//                       alt='Cindy Baker'\n//                       src='https://material-ui.com/static/images/avatar/2.jpg'\n//                     />\n//                     Cindy Baker 09:30\n//                   </ListItemText>\n//                 </Grid>\n//                 <Grid item xs={12}>\n//                   <ListItemText\n//                     align='right'\n//                     secondary=\"Hey man, What's up ?\"\n//                   ></ListItemText>\n//                 </Grid>\n//               </Grid>\n//             </ListItem>\n//             <ListItem key='2'>\n//               <Grid container>\n//                 <Grid item xs={12}>\n//                   <ListItemText\n//                     align='left'\n//                     primary='Hey, Iam Good! What about you ?'\n//                   ></ListItemText>\n//                 </Grid>\n//                 <Grid item xs={12}>\n//                   <ListItemText align='left' secondary='09:31'></ListItemText>\n//                 </Grid>\n//               </Grid>\n//             </ListItem>\n//             <ListItem key='3'>\n//               <Grid container>\n//                 <Grid item xs={12}>\n//                   <ListItemText\n//                     align='right'\n//                     primary=\"Cool. i am good, let's catch up!\"\n//                   ></ListItemText>\n//                 </Grid>\n//                 <Grid item xs={12}>\n//                   <ListItemText align='right' secondary='10:30'></ListItemText>\n//                 </Grid>\n//               </Grid>\n//             </ListItem>\n//           </List>\n//           <Divider />\n//           <Grid container style={{ padding: '20px' }}>\n//             <Grid item xs={11}>\n//               <TextField\n//                 id='outlined-basic-email'\n//                 label='Type Something'\n//                 fullWidth\n//               />\n//             </Grid>\n//             <Grid xs={1} align='right'>\n//               <Fab color='primary' aria-label='add'>\n//                 <SendIcon />\n//               </Fab>\n//             </Grid>\n//           </Grid>\n//         </Grid>\n//       </Grid>\n//     </div>\n//   )\n// }\n\n// export default RoomChat\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {\n  Paper,\n  Typography\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport MicIcon from '@material-ui/icons/Mic'\nimport MicOffIcon from '@material-ui/icons/MicOff'\n\nconst useStyles = makeStyles(theme => ({\n  videoOffDiv: {\n    overflow: 'hidden',\n    objectFit: 'fill',\n    backgroundSize: 'cover',\n    backgroundColor: theme.palette.secondary.main,\n    display: 'grid',\n    alignItems: 'center',\n    justifyItems: 'center'\n  }\n}))\nconst VideoOffDiv = props => {\n  const classes = useStyles()\n  // const dimensions = props.dimension / Math.sqrt(1 + props.numpeers)\n\n  return (\n    <Paper\n      className={classes.videoOffDiv}\n      style={{\n        width: props.width,\n        height: props.height,\n        display: props.video ? 'none' : ''\n      }}\n    >\n      <div>\n        <Typography variant='h5'>{props.name}</Typography>\n        {props.audio ? <MicIcon /> : <MicOffIcon />}\n      </div>\n    </Paper>\n  )\n}\n\nexport default VideoOffDiv\n","import { makeStyles } from '@material-ui/styles'\nimport React, { useEffect, useRef, useState } from 'react'\n\nconst useStyles = makeStyles(theme => ({\n  video: {\n    // width: '100%',\n    // height: '100%',SvgIcon\n    // width: window.screen.availWidth/1.2,\n    backgroundSize: 'cover',\n    objectFit: 'fill',\n    overflow: 'hidden'\n  }\n}))\nexport const Video = props => {\n  console.log(props.peer)\n  const ref = useRef()\n  // const dimension = useSelector(state => state.room.userDimension)\n  const classes = useStyles()\n  // const dimension = Math.sqrt(props.width * props.height) / 1.4\n\n  useEffect(() => {\n    console.log('video started')\n    props.peer &&\n      props.peer.on('stream', stream => {\n        console.log(stream)\n        ref.current.srcObject = stream\n      })\n  }, [])\n\n  return (\n    <video\n      playsInline\n      width={props.width}\n      height={props.height}\n      autoPlay\n      style={{ display: props.video ? 'block' : 'none' }}\n      className={classes.video}\n      ref={ref}\n    />\n  )\n}\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Grid,\n  Paper,\n  Typography\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport MicIcon from '@material-ui/icons/Mic'\nimport MicOffIcon from '@material-ui/icons/MicOff'\nimport VideoOffDiv from './videoOffDiv'\nimport { Video } from './video'\n\nconst useStyles = makeStyles(theme => ({\n  video: {\n    backgroundSize: 'cover',\n    objectFit: 'fill',\n    overflow: 'hidden'\n  },\n  userDetailDiv: {\n    position: 'absolute',\n    top: '0.4rem',\n    // left: '6.25%',\n    color: 'white',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    // display: 'flex',\n    // alignItems: 'center',\n    // background: 'top',\n    height: '1.8rem',\n    borderRadius: '0.3rem',\n    // fontSize: '0.8rem',\n    padding: '0.2rem 0.4rem'\n  },\n  userDiv: {\n    textAlign: 'center',\n    position: 'relative',\n    padding: theme.spacing(1),\n    margin: theme.spacing(1),\n    display: 'grid',\n    justifyContent: 'center'\n  }\n}))\nconst UserCard = props => {\n  const classes = useStyles()\n  //   const dimensions = props.dimension / Math.sqrt(1 + props.numpeers)\n\n  return (\n    <Grid\n      container\n      item\n      xs={12}\n      // style={{'display':'none'}}\n      // xs={12}\n      className={classes.userDiv}\n      style={{'display' : props.show ? '' : 'none' }}\n    >\n      <Card>\n        {props.refer ? (\n          <video\n            width={props.width}\n            height={props.height}\n            playsInline\n            muted\n            style={{ display: props.video ? 'block' : 'none' }}\n            autoPlay\n            className={classes.video}\n            ref={props.refer}\n          />\n        ) : (\n          <Video\n            peer={props.peer.peer}\n            video={props.video}\n            dimension={props.dimensions}\n            width={props.width}\n            height={props.height}\n            numpeers={props.numpeers}\n          />\n        )}\n        <VideoOffDiv\n          name={props.name}\n          audio={props.audio}\n          video={props.video}\n          dimension={props.dimensions}\n          width={props.width}\n          height={props.height}\n          numpeers={props.numpeers}\n        />\n        <div\n          style={{ display: props.video ? 'block' : 'none' }}\n          className={classes.userDetailDiv}\n        >\n          <Typography variant='h5' gutterBottom>\n            {props.name} {props.audio ? <MicIcon /> : <MicOffIcon />}\n          </Typography>\n        </div>\n      </Card>\n      {/* </Paper> */}\n    </Grid>\n  )\n}\n\nexport default UserCard\n","import {\n  Grid,\n  Typography,\n  Paper,\n  makeStyles,\n  Button,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  StepLabel,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Avatar,\n  Divider\n} from '@material-ui/core'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { useSelector } from 'react-redux'\nimport { useHistory, withRouter } from 'react-router'\n// import io from \"socket.io-client\";\nimport Peer from 'simple-peer'\nimport {\n  addMessage,\n  getAllMessages,\n  getRoomDetails,\n  setUserDimension\n} from '../../actions/chatRoomAction'\nimport toast, { Toaster } from 'react-hot-toast'\nimport TimeAgo from 'react-timeago'\n// import styled from \"styled-components\";\nimport WebSocketInstance from '../../websocket/socket'\nimport VideocamIcon from '@material-ui/icons/Videocam'\nimport VideocamOffIcon from '@material-ui/icons/VideocamOff'\nimport MicIcon from '@material-ui/icons/Mic'\nimport MicOffIcon from '@material-ui/icons/MicOff'\nimport CallEndIcon from '@material-ui/icons/CallEnd'\nimport ChatIcon from '@material-ui/icons/Chat'\nimport SendIcon from '@material-ui/icons/Send'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport ScreenShareIcon from '@material-ui/icons/ScreenShare'\nimport VideoOffDiv from './videoOffDiv'\nimport RoomChat from '../rooms/roomChat'\nimport UserCard from './userCard'\nimport ChatBox from '../common/chatBox'\nimport GridOnIcon from '@material-ui/icons/GridOn'\nimport GridOffIcon from '@material-ui/icons/GridOff'\nimport RoomData from '../rooms/roomData'\nimport GroupIcon from '@material-ui/icons/Group';\n\nconst useStyles = makeStyles(theme => ({\n  video: {\n    // width: '100%',\n    // height: '100%',SvgIcon\n    // width: window.screen.availWidth/1.2,\n    backgroundSize: 'cover',\n    objectFit: 'fill',\n    overflow: 'hidden'\n  },\n  gridContainer: {\n    justifyContent: 'center',\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column'\n    }\n  },\n  introLobby: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    display: 'grid',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    // gridAutoFlow: 'column',\n    overflow: 'hidden',\n    height: '100%',\n    width: '100%',\n    boxShadow: 'none'\n    // [theme.breakpoints.down('sm')]: {\n    //   gridAutoFlow: 'row'\n    // }\n  },\n  userDetailDiv: {\n    position: 'absolute'\n    // marginLeft: '3%'\n  },\n  userDiv: {\n    textAlign: 'center',\n    position: 'relative',\n    padding: theme.spacing(1),\n    margin: theme.spacing(1)\n  },\n  chatRoom: {\n    height: '100%'\n  },\n  chatRoomMainDiv: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    width: '100%',\n    height: '100%',\n    position: 'relative'\n  },\n  chatBox: {\n    position: 'relative',\n    backgroundColor: theme.palette.secondary.main,\n    zIndex: 5,\n    // width: 'auto',\n    minWidth: '30vh',\n    maxHeight: '100%',\n    [theme.breakpoints.down('xs')]: {\n      position: 'absolute',\n      top: 0,\n      bottom: 0,\n      right: 0,\n      left: 0,\n      width: '100%',\n      height: '100%'\n    }\n  },\n  chatBoxIntro: {\n    padding: '2px'\n  },\n  chatBoxMessages: {\n    padding: '2px',\n    position: 'relative',\n    overflow: 'hidden',\n    height: '85%',\n    width: '100%'\n  },\n  messageList: {\n    maxHeight: '100%',\n    top: 0,\n    left: 0,\n    right: -theme.spacing(2),\n    position: 'absolute',\n    overflowY: 'scroll'\n  },\n  actionButtons: {\n    position: 'absolute',\n    bottom: '2rem',\n    display: 'grid',\n    justifyContent: 'center',\n    boxShadow: 'none',\n    gridAutoFlow: 'column',\n    zIndex: 3,\n    // left: '0',\n    // right: '0',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    [theme.breakpoints.up('md')]: {\n      right: 0,\n      left: 0\n    },\n    [theme.breakpoints.down('xs')]: {\n      gridAutoFlow: 'row'\n    }\n    // left: '40%'\n  },\n  textfield: {\n    position: 'absolute',\n    bottom: '0px',\n    width: '100%',\n    backgroundColor: theme.palette.primary.main\n  }\n}))\n\nconst videoConstraints = {\n  // height: usersDiv.current.offsetHeight,\n  // width: usersDiv.current.offsetWidth\n}\n\nconst Room = React.memo(props => {\n  const history = useHistory()\n  const currentRoom = useSelector(state => state.room.currentRoom)\n  const [inLobby, setInLobby] = useState(true)\n  const [pendingRequest, setPendingRequest] = useState(false)\n  const [message, setMessage] = useState()\n  const token = useSelector(state => state.auth.token)\n  const [peers, setPeers] = useState([])\n  const [streams, setStreams] = useState([])\n  const [allMessages, setAllMessages] = useState([])\n  const [websocket, setWebSocket] = useState([])\n  var socketRef = useRef()\n  var [dimension, setDimension] = useState(100)\n  var [videoHeight, setVideoHeight] = useState(window.screen.availHeight / 2)\n  var [videoWidth, setVideoWidth] = useState(window.screen.availWidth / 2)\n  const userVideo = useRef()\n  const messageBox = useRef()\n  // const duserVideo = useRef()\n  const usersDiv = useRef()\n  var localstream = useRef()\n  const [mystream, setMystream] = useState()\n  const [video, setVideo] = useState(true)\n  const [col, setCol] = useState(0)\n  const [show, setShow] = useState(true)\n  const [showDetails, setShowDetails] = useState(true)\n  const [chatBoxOpen, setChatBoxOpen] = useState(false)\n  const [allUsersBoxOpen, setAllUsersBoxOpen] = useState(false)\n  const [audio, setAudio] = useState(true)\n  const [roomExist, setRoomExists] = useState(false)\n  const peersRef = useRef([])\n  const classes = useStyles()\n  // console.log(usersDiv)\n  useEffect(() => {\n    console.log('initialize')\n    props.getAllMessages(props.match.params.id)\n    return () => {\n      const tracks = localstream.current.getTracks()\n      tracks.map(track => {\n        track.stop()\n      })\n      localstream.current.getTracks()[1].stop()\n      WebSocketInstance.close()\n    }\n  }, [])\n\n  useEffect(() => {\n    console.log('peers changed')\n    console.log(peers)\n  }, [peers])\n\n  useEffect(() => {\n    console.log(allMessages.length)\n    if (messageBox.current) {\n      console.log(messageBox.current.scrollTop)\n      messageBox.current.scrollTop = messageBox.current.scrollHeight\n      console.log(messageBox.current.scrollTop)\n    }\n  }, [messageBox.current, props.messages.length])\n\n  useEffect(() => {\n    if (usersDiv.current) {\n      // const d =\n      //   Math.sqrt(usersDiv.current.offsetWidth * usersDiv.current.offsetWidth) /\n      //   2\n      // setDimension(d)\n      var n = 0\n      if (show) {\n        n++\n      }\n      n += peersRef.current.filter(peer => peer.show === true).length\n      if (n == 0) {\n        setShowDetails(true)\n      } else {\n        setShowDetails(false)\n      }\n      var numCol = Math.sqrt(n)\n      if (usersDiv.current.offsetHeight < usersDiv.current.offsetWidth) {\n        numCol = Math.ceil(numCol)\n      } else {\n        numCol = Math.floor(numCol)\n      }\n      setCol(numCol)\n      const numRow = Math.ceil(n / numCol)\n      setVideoHeight(usersDiv.current.offsetHeight / (1.2 * numRow))\n      setVideoWidth(usersDiv.current.offsetWidth / (1.2 * numCol))\n      console.log('dimension changed')\n      console.log(col)\n      // console.log(d)\n    }\n  }, [\n    usersDiv.current,\n    peers,\n    show,\n    chatBoxOpen,\n    allUsersBoxOpen,\n    peersRef.current.length\n  ])\n\n  useEffect(() => {\n    // let data = {\n    //   id: props.match.params.id,\n    //   sharing_id: props.match.params.code\n    // }\n    // data = JSON.stringify(data)\n    console.log('currentroom.id changes')\n    console.log(currentRoom)\n    props.getRoomDetails(props.match.params.id, () => {\n      console.log(currentRoom && currentRoom.created_by.pk == props.myuser.pk)\n      if (currentRoom && currentRoom.created_by.pk == props.myuser.pk) {\n        navigator.mediaDevices\n          .getUserMedia({ video: { videoConstraints }, audio: true })\n          .then(stream => {\n            console.log(stream)\n            userVideo.current.srcObject = stream\n            // duserVideo.current.srcObject = stream\n            localstream.current = stream\n            setMystream(stream)\n          })\n          .catch(err => {\n            console.log(err)\n            toast.error('Cannot get access to your camera and video !')\n          })\n        console.log('admin hai ye')\n        setInLobby(false)\n      }\n      setRoomExists(true)\n    })\n  }, [currentRoom.id])\n\n  useEffect(() => {\n    if (roomExist) {\n      if (inLobby) {\n        navigator.mediaDevices\n          .getUserMedia({ video: { videoConstraints }, audio: true })\n          .then(stream => {\n            console.log(stream)\n            userVideo.current.srcObject = stream\n            // dUserVideo.current.srcObject = stream\n            localstream.current = stream\n            setMystream(stream)\n          })\n          .catch(err => {\n            console.log(err)\n            toast.error('Cannot get access to your camera and video !')\n          })\n      } else {\n        if (Boolean(WebSocketInstance) && WebSocketInstance.socketRef) {\n          WebSocketInstance.close()\n        }\n        WebSocketInstance.connect(\n          `${window.location.protocol == 'http:' ? 'ws' : 'wss'}://${\n            window.location.host.includes('localhost:')\n              ? 'localhost:8000'\n              : window.location.hostname\n          }/ws/chat/${props.currentRoom.sharing_id}`\n        )\n        // WebSocketInstance.waitForSocketConnection(() => {\n        //   console.log('looping')\n        // })\n        setWebSocket(WebSocketInstance)\n        WebSocketInstance.sendSignal('join room', {\n          video,\n          audio,\n          onlyChat: false\n        })\n        WebSocketInstance.on('request invite', user => {\n          let presentInUsers =\n            props.currentRoom.all_users.indexOf(user.id) != -1\n          console.log(props.currentRoom.all_users)\n          console.log(user.id == props.currentRoom.created_by.pk)\n          console.log(\n            user.id == props.currentRoom.created_by.pk || presentInUsers\n          )\n          if (user.id == props.currentRoom.created_by.pk || presentInUsers) {\n            WebSocketInstance.sendSignal('accept invite', user.id)\n          } else if (\n            props.currentRoom.created_by.pk == props.myuser.pk &&\n            currentRoom.created_by.pk != user.id\n          ) {\n            toast(\n              t => (\n                <div>\n                  {user.email} wants to join{' '}\n                  <Button\n                    color='inherit'\n                    onClick={() => handleUserAccept(t.id, user.id)}\n                  >\n                    accept\n                  </Button>\n                  <Button\n                    color='inherit'\n                    onClick={() => handleUserReject(t.id, user.id)}\n                  >\n                    Decline\n                  </Button>\n                </div>\n              ),\n              {\n                icon: '👤',\n                duration: 100000\n              }\n            )\n          }\n        })\n        WebSocketInstance.on('invite was rejected', payload => {\n          console.log(props.myuser.pk == payload.id)\n          if (props.myuser.pk == payload.id) {\n            alert('Admin rejected your request')\n            history.push('/')\n          }\n        })\n        WebSocketInstance.on('all users', payload => {\n          if (pendingRequest == true) {\n            console.log('pending req was true')\n            setPendingRequest(false)\n            userVideo.current.srcObject = localstream.current\n          }\n          if (payload.id == props.myuser.pk) {\n            console.log('all users received')\n            console.log(payload.users)\n            const allPeers = []\n            payload.users.forEach(user => {\n              if (user[0] !== props.myuser.pk) {\n                if (!Boolean(peersRef.current.some(e => e.peerID == user[0]))) {\n                  console.log(localstream.current)\n                  const peer = createPeer(\n                    user[0],\n                    props.myuser.pk,\n                    localstream.current\n                  )\n                  peersRef.current.push({\n                    peerID: user[0],\n                    peerName: user[1],\n                    video: user[2],\n                    audio: user[3],\n                    show: true,\n                    peer\n                  })\n                  allPeers.push({\n                    peerID: user[0],\n                    peerName: user[1],\n                    video: user[2],\n                    audio: user[3],\n                    show: true,\n                    peer\n                  })\n                  console.log('created peer ' + user[1])\n                }\n              }\n            })\n            setPeers(allPeers)\n            console.log('peers after all users')\n            console.log(peers)\n          }\n        })\n\n        WebSocketInstance.on('user joined', payload => {\n          // console.log(peersRef.current)\n          // setPeers(peersRef.current)\n          console.log(payload.userID)\n          if (payload.userID === props.myuser.pk) {\n            if (\n              !Boolean(\n                peersRef.current.some(e => e.peerID == payload.caller[0])\n              )\n            ) {\n              const peer = addPeer(\n                payload.signal,\n                payload.caller,\n                localstream.current\n              )\n              toast(`${payload.caller[1]} joined the room.`, { icon: '👏' })\n              console.log(`${payload.caller[1]} joined the room.`)\n              peersRef.current.push({\n                peerID: payload.caller[0],\n                peerName: payload.caller[1],\n                video: payload.caller[2],\n                audio: payload.caller[3],\n                show: true,\n                peer\n              })\n\n              let peerObj = {\n                peerID: payload.caller[0],\n                peerName: payload.caller[1],\n                video: payload.caller[2],\n                audio: payload.caller[3],\n                show: true,\n                peer\n              }\n\n              setPeers([...peers, peerObj])\n\n              console.log('added peer')\n            }\n            console.log(peers)\n          }\n          // setPeers(peersRef.current)\n        })\n\n        WebSocketInstance.on('receiving returned signal', payload => {\n          console.log('receiving returned signal')\n          if (payload.userID === props.myuser.pk) {\n            const item = peersRef.current.find(p => p.peerID === payload.id)\n            item.peer.signal(payload.signal)\n          }\n          // setPeers(peersRef.current)\n          console.log(peers)\n        })\n\n        WebSocketInstance.on('user left', id => {\n          const peerObj = peersRef.current.find(p => p.peerID === id)\n          if (peerObj) {\n            toast(`${peerObj.peerName} left.`, { icon: 'ℹ️' })\n\n            peerObj.peer.destroy()\n          }\n          const allPeers = peersRef.current.filter(p => p.peerID !== id)\n          peersRef.current = allPeers\n          setPeers(allPeers)\n        })\n\n        WebSocketInstance.on('message received', payload => {\n          // const msgObj = {\n          //   user: payload.user,\n          //   msg: payload.message\n          // }\n          // setAllMessages(messages => [...messages, msgObj])\n          payload.user = JSON.parse(payload.user)\n          if (\n            props.myuser.first_name != payload.user.first_name &&\n            !chatBoxOpen\n          ) {\n            toast(`${payload.user.first_name} : ${payload.message}`, {\n              icon: '💬'\n            })\n          }\n          // console.log(allMessages)\n          props.addMessage(payload)\n        })\n\n        WebSocketInstance.on('toggle video', payload => {\n          if (payload.id == props.myuser.pk) {\n            setVideo(payload.value)\n          } else {\n            var newPeers = peersRef.current\n            for (var i in newPeers) {\n              if (newPeers[i].peerID == payload.id) {\n                newPeers[i].video = payload.value\n                break //Stop this loop, we found it!\n              }\n            }\n            setPeers([...newPeers])\n            peersRef.current = newPeers\n          }\n        })\n\n        WebSocketInstance.on('toggle audio', payload => {\n          if (payload.id == props.myuser.pk) {\n            setAudio(payload.value)\n          } else {\n            var newPeers = peersRef.current\n            for (var i in newPeers) {\n              if (newPeers[i].peerID == payload.id) {\n                newPeers[i].audio = payload.value\n                break //Stop this loop, we found it!\n              }\n            }\n            setPeers([...newPeers])\n            peersRef.current = newPeers\n          }\n        })\n      }\n    }\n  }, [roomExist, inLobby])\n\n  function handleUserAccept (toast_id, user_id) {\n    WebSocketInstance.sendSignal('accept invite', user_id)\n    toast.dismiss(toast_id)\n  }\n\n  function handleUserReject (toast_id, user_id) {\n    WebSocketInstance.sendSignal('reject invite', user_id)\n    toast.dismiss(toast_id)\n  }\n\n  function createPeer (userToSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    })\n\n    peer.on('signal', signal => {\n      WebSocketInstance.sendSignal('sending signal', {\n        userToSignal,\n        callerID,\n        signal\n      })\n    })\n\n    return peer\n  }\n\n  function addPeer (incomingSignal, caller, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    })\n    let callerID = caller[0]\n    peer.on('signal', signal => {\n      WebSocketInstance.sendSignal('returning signal', { signal, callerID })\n    })\n\n    peer.signal(incomingSignal)\n\n    return peer\n  }\n\n  function shareScreen () {\n    navigator.mediaDevices\n      .getDisplayMedia({ video: { cursor: 'always' }, audio: 'true' })\n      .then(screenStream => {\n        for (let index = 0; index < peersRef.current.length; index++) {\n          peersRef.current[index].peer.replaceTrack(\n            localstream.current.getVideoTracks()[0],\n            screenStream.getVideoTracks()[0],\n            localstream.current\n          )\n        }\n        setPeers([...peersRef.current])\n        localstream.current.removeTrack(localstream.current.getVideoTracks()[0])\n        localstream.current.addTrack(screenStream.getVideoTracks()[0])\n      })\n  }\n\n  function handleMessageSend () {\n    WebSocketInstance.sendSignal('send_message', message)\n    setMessage('')\n  }\n\n  function handleMessageChange (event) {\n    setMessage(event.target.value)\n  }\n\n  function togglePeerShow (peer) {\n    var newPeers = peersRef.current\n    for (var i in newPeers) {\n      if (newPeers[i].peerID == peer.peerID) {\n        newPeers[i].show = !newPeers[i].show\n        break //Stop this loop, we found it!\n      }\n    }\n    setPeers([...newPeers])\n    peersRef.current = newPeers\n    console.log(peersRef.current)\n  }\n\n  function toggleChatBoxOpen () {\n    setAllUsersBoxOpen(false)\n    setChatBoxOpen(!chatBoxOpen)\n  }\n\n  function toggleAllUsersBoxOpen () {\n    setChatBoxOpen(false)\n    setAllUsersBoxOpen(!allUsersBoxOpen)\n  }\n\n  function handleJoinRoom () {\n    console.log('joining room')\n    setPendingRequest(true)\n    setInLobby(false)\n  }\n\n  function toggleShow () {\n    if (show) {\n      setShow(false)\n    } else {\n      setShow(true)\n      if (userVideo.current) {\n        userVideo.current.srcObject = localstream.current\n      }\n    }\n  }\n\n  function handleVideoToggle () {\n    localstream.current.getVideoTracks()[0].enabled = !localstream.current.getVideoTracks()[0]\n      .enabled\n    if (inLobby) {\n      setVideo(!video)\n    } else {\n      WebSocketInstance.sendSignal('toggle video')\n    }\n  }\n  function handleAudioToggle () {\n    localstream.current.getAudioTracks()[0].enabled = !localstream.current.getAudioTracks()[0]\n      .enabled\n    // setAudio(!audio)\n    if (inLobby) {\n      setAudio(!audio)\n    } else {\n      WebSocketInstance.sendSignal('toggle audio')\n    }\n  }\n  function handleDisconnect () {\n    console.log(mystream)\n    const tracks = mystream && mystream.getTracks()\n    tracks.map(track => {\n      track.stop()\n    })\n    // localstream.current.getTracks()[0].stop();\n    // WebSocketInstance.close()\n    history.push('/')\n  }\n  console.log(pendingRequest)\n  console.log(inLobby)\n  console.log(peers)\n  return roomExist ? (\n    !inLobby && !pendingRequest ? (\n      <div className={classes.chatRoom}>\n        <Toaster />\n        <div className={classes.chatRoomMainDiv}>\n          <Grid\n            // xs={chatBoxOpen ? 6 : 12}\n            container\n            spacing={2}\n            className={classes.paper}\n            ref={usersDiv}\n            style={{\n              gridTemplateColumns: `repeat(${col},1fr)`,\n              position: showDetails ? 'relative' : ''\n            }}\n          >\n            <Grid className={classes.actionButtons}>\n              <Button onClick={handleVideoToggle}>\n                {video ? <VideocamIcon /> : <VideocamOffIcon />}\n              </Button>\n              <Button onClick={handleAudioToggle}>\n                {audio ? <MicIcon /> : <MicOffIcon />}\n              </Button>\n              <Button onClick={toggleChatBoxOpen}>\n                <ChatIcon />\n              </Button>\n              <Button onClick={toggleAllUsersBoxOpen}>\n                <GroupIcon />\n              </Button>\n              <Button onClick={handleDisconnect}>\n                <CallEndIcon />\n              </Button>\n              <Button onClick={shareScreen}>\n                <ScreenShareIcon />\n              </Button>\n            </Grid>\n            {showDetails && <RoomData meeting={false} />}\n            <UserCard\n              key={props.myuser.pk - 100}\n              video={video}\n              audio={audio}\n              dimensions={dimension / Math.sqrt(2 + peersRef.current.length)}\n              width={videoWidth}\n              height={videoHeight}\n              show={show}\n              refer={userVideo}\n              name={props.myuser.first_name}\n              numpeers={peersRef.current.length}\n            />\n            {/* <UserCard\n              key={props.myuser.pk}\n              video={video}\n              audio={audio}\n              dimensions={dimension / Math.sqrt(2 + peersRef.current.length)}\n              width={videoWidth}\n              height={videoHeight}\n              refer={duserVideo}\n              name={props.myuser.first_name}\n              numpeers={peersRef.current.length}\n            /> */}\n\n            {peersRef.current.map(peer => {\n              console.log(peer)\n              return (\n                <UserCard\n                  key={peer.peerID}\n                  video={peer.video}\n                  audio={peer.audio}\n                  dimensions={\n                    dimension / Math.sqrt(2 + peersRef.current.length)\n                  }\n                  width={videoWidth}\n                  height={videoHeight}\n                  refer={null}\n                  show={peer.show}\n                  peer={peer}\n                  name={peer.peerName}\n                  numpeers={peersRef.current.length}\n                />\n              )\n            })}\n          </Grid>\n          {chatBoxOpen ? (\n            <Grid className={classes.chatBox}>\n              <Grid className={classes.chatBoxIntro}>\n                <IconButton>\n                  <ArrowBackIcon onClick={toggleChatBoxOpen} />\n                </IconButton>\n              </Grid>\n              <ChatBox />\n              <Grid className={classes.chatBoxInput}>\n                <TextField\n                  color='secondary'\n                  className={classes.textfield}\n                  onChange={handleMessageChange}\n                  value={message}\n                  name='message'\n                  variant='outlined'\n                  autoComplete={false}\n                  label=''\n                  placeholder='Enter your msg'\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position='end'>\n                        <IconButton>\n                          <SvgIcon onClick={handleMessageSend}>\n                            <SendIcon />\n                          </SvgIcon>\n                        </IconButton>\n                      </InputAdornment>\n                    )\n                  }}\n                />\n              </Grid>\n            </Grid>\n          ) : (\n            ''\n          )}\n          {allUsersBoxOpen ? (\n            <Grid className={classes.chatBox}>\n              <Grid className={classes.chatBoxIntro}>\n                <IconButton>\n                  <ArrowBackIcon onClick={toggleAllUsersBoxOpen} />\n                </IconButton>\n              </Grid>\n              <Grid>\n                <List>\n                  <ListItem key='RemySharp'>\n                    <ListItemIcon>\n                      <Avatar color='inherit'>\n                        {props.myuser.first_name[0]}\n                      </Avatar>\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={props.myuser.first_name}\n                    ></ListItemText>\n                    <IconButton onClick={handleVideoToggle}>\n                      {video ? <VideocamIcon /> : <VideocamOffIcon />}\n                    </IconButton>\n                    <IconButton onClick={handleAudioToggle}>\n                      {audio ? <MicIcon /> : <MicOffIcon />}\n                    </IconButton>\n                    <IconButton onClick={() => toggleShow()}>\n                      {show ? <GridOnIcon /> : <GridOffIcon />}\n                    </IconButton>\n                  </ListItem>\n                </List>\n                <Divider />\n                <Grid item xs={12} style={{ padding: '10px' }}>\n                  <TextField\n                    id='outlined-basic-email'\n                    label='Search'\n                    variant='outlined'\n                    fullWidth\n                  />\n                </Grid>\n                <Divider />\n                <List>\n                  {peersRef.current.map(peer => {\n                    console.log(peer)\n                    return (\n                      <ListItem key='RemySharp'>\n                        <ListItemIcon>\n                          <Avatar color='inherit'>{peer.peerName[0]}</Avatar>\n                        </ListItemIcon>\n                        <ListItemText primary={peer.peerName}>\n                          Remy Sharp\n                        </ListItemText>\n                        <IconButton disabled>\n                          {peer.video ? <VideocamIcon disabled /> : <VideocamOffIcon disabled />}\n                        </IconButton>\n                        <IconButton disabled>\n                          {peer.audio ? <MicIcon disabled /> : <MicOffIcon disabled />}\n                        </IconButton>\n                        <IconButton onClick={() => togglePeerShow(peer)}>\n                          {peer.show ? <GridOnIcon /> : <GridOffIcon />}\n                        </IconButton>\n                      </ListItem>\n                    )\n                  })}\n                </List>\n              </Grid>\n            </Grid>\n          ) : (\n            ''\n          )}\n        </div>\n      </div>\n    ) : (\n      <div>\n        <div className={classes.introLobby}>\n          <UserCard\n            key={props.myuser.pk}\n            video={video}\n            audio={audio}\n            dimensions={dimension / Math.sqrt(1 + peersRef.current.length)}\n            width={videoWidth}\n            show={show}\n            height={videoHeight}\n            refer={userVideo}\n            name={props.myuser.first_name}\n            numpeers={peersRef.current.length}\n          />\n          <div>\n            <Button onClick={handleVideoToggle}>\n              {video ? <VideocamIcon /> : <VideocamOffIcon />}\n            </Button>\n            <Button onClick={handleAudioToggle}>\n              {audio ? <MicIcon /> : <MicOffIcon />}\n            </Button>\n            <Button onClick={handleJoinRoom} disabled={pendingRequest}>\n              Join room\n            </Button>\n          </div>\n        </div>\n        <RoomData meeting={false} />\n      </div>\n    )\n  ) : (\n    <div>Room doesnt exist</div>\n  )\n})\n\nconst mapStateToprops = state => {\n  return {\n    myuser: state.auth.user,\n    currentRoom: state.room.currentRoom,\n    token: state.auth.token,\n    messages: state.room.messages,\n    userDimension: state.room.userDimension\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    getRoomDetails: (id, handleSuccess) => {\n      return dispatch(getRoomDetails(id, handleSuccess))\n    },\n    getAllMessages: (id, callback) => {\n      return dispatch(getAllMessages(id, callback))\n    },\n    addMessage: message => {\n      return dispatch(addMessage(message))\n    },\n    setUserDimension: dimension => {\n      return dispatch(setUserDimension(dimension))\n    }\n  }\n}\nexport default withRouter(connect(mapStateToprops, mapDispatchToprops)(Room))\n\n// width={\n//   peers.length == 0 || usersDiv.current.offsetWidth < 1400\n//     ? usersDiv.current.offsetWidth / 1.3\n//     : usersDiv.current.offsetWidth / 2.2\n// }\n// height={\n//   peers.length == 0\n//     ? usersDiv.current.offsetHeight / 1.3\n//     : usersDiv.current.offsetWidth < 1400\n//     ? usersDiv.current.offsetHeight / 2.3\n//     : usersDiv.current.offsetHeight / 1.3\n// }\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { logoutUser } from '../actions/authAction'\nimport VideoPlayer from '../components/video/videoPlayer.js'\n\nclass VideoView extends Component {\n  render () {\n    return (\n      <div style={{height:'90vh'}} className='VideoView'>\n        <VideoPlayer />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logoutUser: () => {\n      return dispatch(logoutUser())\n    }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(VideoView)\n"],"sourceRoot":""}