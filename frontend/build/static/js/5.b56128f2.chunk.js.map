{"version":3,"sources":["../node_modules/@material-ui/icons/VideoCall.js","components/common/chatRoomCard.js","components/rooms/roomsList.js","components/common/addUser.js","components/homeComponents/roomDetails.js","views/rooms.js","../node_modules/react-timeago/es6/defaultFormatter.js","../node_modules/react-timeago/es6/dateParser.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/react-timeago/es6/index.js","components/common/chatBox.js","components/rooms/roomData.js","components/rooms/roomChat.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","components/common/roomDataModal.js","views/room.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","useStyles","makeStyles","theme","Card","backgroundColor","palette","secondary","main","margin","spacing","width","justifyContent","roomCardMainDiv","height","display","alignItems","justifyItems","ChatRoomCard","props","history","useHistory","console","log","classes","useState","showAddUserModal","setShowAddUserModal","className","clickable","onClick","push","room","id","gutterBottom","room_name","invite","label","created_by","first_name","style","marginInlineStart","e","stopPropagation","sharing_id","show","onClose","roomsList","overflow","paddingBottom","gridTemplateRows","list","overflowY","maxHeight","window","screen","availHeight","position","listHeading","top","primary","marginLeft","listWrapper","webkitScrollbar","background","webkitScrollbarThumb","withRouter","connect","state","user","auth","roomsCreated","roomsInvited","dispatch","createChatRoom","data","handleSuccess","getAllRooms","useEffect","color","variant","heading","rooms","map","modal","paper","border","boxShadow","shadows","padding","textField","currentRoom","updateRoomUsers","email","setEmail","toast","success","open","centered","in","textfield","onChange","event","target","name","autoComplete","placeholder","InputProps","endAdornment","roomDetailsDiv","slice","title","Rooms","gridAutoFlow","breakpoints","down","defaultFormatter","_unit","suffix","dateParser","date","parsed","Date","Number","isNaN","valueOf","parts","String","match","length","arr","x","parseInt","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","firstP","secondP","restPs","correctedParts","UTC","_extends","assign","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","HOUR","MINUTE","DAY","WEEK","MONTH","YEAR","TimeAgo","formatter","component","live","minPeriod","maxPeriod","now","passDownProps","forceUpdate","setCount","useCallback","num","useUpdate","timeoutId","tick","refresh","then","timeNow","seconds","Math","round","abs","unboundPeriod","period","min","max","clearTimeout","setTimeout","warn","Komponent","unit","passDownTitle","toISOString","substr","replace","spreadProps","dateTime","nextFormatter","bind","roomChatDiv","bottom","chatBoxMessages","messageList","left","right","messages","getAllMessages","callback","addMessage","message","messageBox","useRef","params","current","scrollTop","scrollHeight","ref","msg","container","item","xs","align","pk","disableTypography","fontWeight","fontSize","created_on","roomDataDiv","getRoomDetails","useSelector","textAlign","subheader","getModifiedDate","size","all_users","createRoomButton","startIcon","meeting","chatHeading","WebSocketInstance","close","Boolean","socketRef","location","protocol","host","includes","hostname","sendSignal","video","audio","onlyChat","on","payload","JSON","parse","setMessage","ListItemText","children","_props$disableTypogra","_props$inset","inset","primaryProp","primaryTypographyProps","secondaryProp","secondaryTypographyProps","other","_objectWithoutProperties","dense","ListContext","type","Typography","clsx","root","multiline","withStyles","flex","minWidth","marginTop","marginBottom","paddingLeft","CardHeader","action","avatar","_props$component","Component","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","content","marginRight","alignSelf","Modal","Fade","Room","roomDetailsButton","up","logoutUser","showRoomDetailModal","setShowRoomDetailModal","Grid","Button"],"mappings":"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","file":"static/js/5.b56128f2.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4zM14 13h-3v3H9v-3H6v-2h3V8h2v3h3v2z\"\n}), 'VideoCall');\n\nexports.default = _default;","import {\n  Card,\n  CardActions,\n  Chip,\n  IconButton,\n  Typography\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport React, { Component, useEffect, useState } from 'react'\nimport AddUserModal from './addUser'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport LaunchIcon from '@material-ui/icons/Launch'\nimport PersonAddIcon from '@material-ui/icons/PersonAdd'\n\nconst useStyles = makeStyles(theme => ({\n  Card: {\n    backgroundColor: theme.palette.secondary.main,\n    margin: theme.spacing(0.4),\n    width: '80%',\n    justifyContent: 'space-between'\n  },\n  roomCardMainDiv: {\n    height: '100%',\n    width: '100%',\n    display: 'grid',\n    alignItems: 'center',\n    justifyItems: 'center'\n  }\n}))\n\nconst ChatRoomCard = props => {\n  const history = useHistory()\n  console.log(props)\n  const classes = useStyles()\n  const [showAddUserModal, setShowAddUserModal] = useState(false)\n\n  function openRoom (e) {\n    e.stopPropagation()\n    history.push(`/video/${props.room.id}/${props.room.sharing_id}`)\n  }\n\n  function handleAddUser (e) {\n    e.stopPropagation()\n    setShowAddUserModal(true)\n  }\n\n  return (\n    <div className={classes.roomCardMainDiv}>\n      <Card\n        className={classes.Card}\n        clickable\n        onClick={() => history.push(`/room/${props.room.id}`)}\n      >\n        <CardActions>\n          <Typography onClick={() => setShowAddUserModal(true)} gutterBottom>\n            {props.room && props.room.room_name}\n          </Typography>\n          {props.invite && (\n            <Chip label={`creater : ${props.room.created_by.first_name}`} />\n          )}\n          <div style={{ marginInlineStart: 'auto' }}>\n            {!props.invite && (\n              <IconButton>\n                <PersonAddIcon onClick={handleAddUser} />\n              </IconButton>\n            )}\n            <IconButton>\n              <LaunchIcon onClick={openRoom} />\n            </IconButton>\n          </div>\n        </CardActions>\n      </Card>\n      {showAddUserModal && (\n        <AddUserModal\n          room={props.room}\n          onClick={e => e.stopPropagation()}\n          show={showAddUserModal}\n          onClose={() => setShowAddUserModal(false)}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default ChatRoomCard\n","import React, { Component, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory, withRouter } from 'react-router-dom'\nimport {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Grid,\n  Paper,\n  StepLabel,\n  TextField,\n  Typography\n} from '@material-ui/core'\nimport { createChatRoom, getAllRooms } from '../../actions/chatRoomAction'\nimport ChatRoomCard from '../common/chatRoomCard'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles(theme => ({\n  roomsList: {\n    width: '80%',\n    display: 'grid',\n    justifyItems: 'center',\n    overflow: 'hidden',\n    paddingBottom: theme.spacing(1),\n    gridTemplateRows: 'min-content',\n    height: '80%'\n  },\n  list: {\n    overflowY: 'scroll',\n    maxHeight: window.screen.availHeight / 2,\n    width: '100%',\n    display: 'grid',\n    justifyItems: 'center',\n    position: 'absolute'\n  },\n  listHeading: {\n    top: 0,\n    backgroundColor: theme.palette.primary.main,\n    width: '100%',\n    height: '50%',\n    marginLeft: '10%'\n  },\n  listWrapper: {\n    position: 'relative',\n    width: '100%',\n    height: '90%',\n    overflow: 'hidden'\n  },\n  webkitScrollbar: {\n    width: 0 /* Remove scrollbar space */,\n    background: 'transparent' /* Optional: just make scrollbar invisible */\n  },\n  /* Optional: show position indicator in red */\n  webkitScrollbarThumb: {\n    background: '#FF0000'\n  }\n}))\n\nconst RoomsList = props => {\n  const history = useHistory()\n  useEffect(() => {\n    props.getAllRooms()\n  }, [])\n  const classes = useStyles()\n\n  return (\n    <Card className={classes.roomsList}>\n      <CardContent color='secondary' className={classes.listHeading}>\n        <Typography variant='h5'>{props.heading}</Typography>\n      </CardContent>\n      <CardContent className={classes.listWrapper}>\n      <div className={classes.list}>\n        {props.rooms.map(room => (\n          <ChatRoomCard room={room} invite={props.heading==\"Your Invites\"} />\n        ))}\n      </div>\n      </CardContent>\n    </Card>\n  )\n}\n\nconst mapStateToprops = state => {\n  return {\n    user: state.auth.user,\n    roomsCreated: state.room.roomsCreated,\n    roomsInvited: state.room.roomsInvited\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    createChatRoom: (data, handleSuccess) => {\n      return dispatch(createChatRoom(data, handleSuccess))\n    },\n    getAllRooms: () => {\n      return dispatch(getAllRooms())\n    }\n  }\n}\n\nexport default withRouter(\n  connect(mapStateToprops, mapDispatchToprops)(RoomsList)\n)\n","import {\n  IconButton,\n  InputAdornment,\n  Modal,\n  SvgIcon,\n  TextField\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport Fade from '@material-ui/core/Fade'\nimport { connect } from 'react-redux'\nimport SendIcon from '@material-ui/icons/Send'\nimport rooms from '../../views/rooms'\nimport { useState } from 'react'\nimport { updateRoomUsers } from '../../actions/chatRoomAction'\nimport toast, { Toaster } from 'react-hot-toast'\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: theme.palette.secondary.main,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  textField: {}\n}))\n\nconst AddUserModal = props => {\n  const classes = useStyles()\n  const { show, room, onClose, label = 'Add Participant', ...restProps } = props\n  const [email, setEmail] = useState('')\n  function handleEmailSend () {\n    const data = {\n      \"email\": email\n    }\n    props.updateRoomUsers(data, props.room.id, handleSuccess)\n  }\n\n  function handleSuccess () {\n    toast.success('Added user')\n    setEmail('')\n  }\n\n  function handleEmailChange (event) {\n    setEmail(event.target.value)\n  }\n  return (\n    <Modal\n      aria-labelledby='transition-modal-title'\n      aria-describedby='transition-modal-description'\n      className={classes.modal}\n      open={show}\n      centered\n      onClose={onClose}\n    >\n      <Fade in={show}>\n        <div className={classes.paper}>\n        <Toaster />\n          <h2 id='transition-modal-title'>{props.room.room_name}</h2>\n          <div id='transition-modal-description'>\n            <TextField\n              color='secondary'\n              className={classes.textfield}\n              onChange={handleEmailChange}\n              value={email}\n              name='email'\n              variant='outlined'\n              autoComplete={false}\n              label=''\n              placeholder='Enter user email'\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position='end'>\n                    <IconButton>\n                      <SvgIcon onClick={handleEmailSend}>\n                        <SendIcon />\n                      </SvgIcon>\n                    </IconButton>\n                  </InputAdornment>\n                )\n              }}\n            />\n          </div>\n        </div>\n      </Fade>\n    </Modal>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentRoom: state.room.currentRoom\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    updateRoomUsers: (data, id, handleSuccess) => {\n      return dispatch(updateRoomUsers(data, id, handleSuccess))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToprops)(AddUserModal)\n","import React, { Component, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, useHistory, withRouter } from 'react-router-dom'\nimport {\n  Button,\n  Grid,\n  Paper,\n  StepLabel,\n  TextField,\n  Typography\n} from '@material-ui/core'\nimport { createChatRoom, getAllRooms } from '../../actions/chatRoomAction'\nimport ChatRoomCard from '../common/chatRoomCard'\nimport { makeStyles } from '@material-ui/styles'\nimport RoomsList from '../rooms/roomsList'\n\nconst useStyles = makeStyles(theme => ({\n  roomDetailsDiv: {\n    width: '100%',\n    display: 'grid',\n    justifyItems: 'center',\n    height: '90%',\n    alignItems: 'center'\n  }\n}))\n\nconst RoomDetails = props => {\n  const history = useHistory()\n  useEffect(() => {\n    props.getAllRooms()\n  }, [])\n  const classes = useStyles()\n\n  return (\n    <div className={classes.roomDetailsDiv}>\n      <RoomsList heading=\"Your rooms\" rooms={props.roomsCreated.slice(0,2)} />\n      <RoomsList heading=\"Your Invites\" rooms={props.roomsInvited.slice(0,2)} />\n      <Typography variant='h6' className={classes.title}>\n          <Button onClick={() => history.push('/rooms')}>View All</Button>\n        </Typography>\n    </div>\n  )\n}\n\nconst mapStateToprops = state => {\n  return {\n    user: state.auth.user,\n    roomsCreated: state.room.roomsCreated,\n    roomsInvited: state.room.roomsInvited\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    createChatRoom: (data, handleSuccess) => {\n      return dispatch(createChatRoom(data, handleSuccess))\n    },\n    getAllRooms: () => {\n      return dispatch(getAllRooms())\n    }\n  }\n}\n\nexport default withRouter(\n  connect(mapStateToprops, mapDispatchToprops)(RoomDetails)\n)\n","import { Button, Card, Grid, Link, Paper } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport React, { Component, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect, useHistory } from 'react-router'\nimport { logoutUser } from '../actions/authAction'\nimport { getAllRooms } from '../actions/chatRoomAction'\nimport RoomDetails from '../components/homeComponents/roomDetails'\nimport RoomsList from '../components/rooms/roomsList'\n\nconst useStyles = makeStyles(theme => ({\n  Rooms: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    justifyItems: 'center',\n    padding: theme.spacing(2),\n    alignItems: 'center',\n    position: 'relative',\n    height: '100%',\n    [theme.breakpoints.down('xs')]: {\n      gridAutoFlow: 'row'\n    }\n  }\n}))\n\nconst Rooms = props => {\n  useEffect(() => {\n    props.getAllRooms()\n  }, [])\n  const classes = useStyles()\n  return (\n    <Grid className={classes.Rooms}>\n      <RoomsList rooms={props.roomsCreated} heading='Your Rooms' />\n      <RoomsList rooms={props.roomsInvited} heading='Your Invites' />\n    </Grid>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user,\n    roomsCreated: state.room.roomsCreated,\n    roomsInvited: state.room.roomsInvited\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllRooms: () => {\n      return dispatch(getAllRooms())\n    }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Rooms)\n","export default function defaultFormatter(value, _unit, suffix) {\n  const unit = value !== 1 ? _unit + 's' : _unit;\n  return value + ' ' + unit + ' ' + suffix;\n}","export default function dateParser(date) {\n  const parsed = new Date(date);\n\n  if (!Number.isNaN(parsed.valueOf())) {\n    return parsed;\n  }\n\n  const parts = String(date).match(/\\d+/g);\n\n  if (parts == null || parts.length <= 2) {\n    return parsed;\n  } else {\n    const [firstP, secondP, ...restPs] = parts.map(x => parseInt(x));\n    const correctedParts = [firstP, secondP - 1, ...restPs];\n    const isoDate = new Date(Date.UTC(...correctedParts));\n    return isoDate;\n  }\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { useCallback, useEffect, useState } from 'react';\nimport defaultFormatter from './defaultFormatter';\nimport dateParser from './dateParser';\n// Just some simple constants for readability\nconst MINUTE = 60;\nconst HOUR = MINUTE * 60;\nconst DAY = HOUR * 24;\nconst WEEK = DAY * 7;\nconst MONTH = DAY * 30;\nconst YEAR = DAY * 365;\nexport default function TimeAgo({\n  date,\n  formatter = defaultFormatter,\n  component = 'time',\n  live = true,\n  minPeriod = 0,\n  maxPeriod = WEEK,\n  title,\n  now = () => Date.now(),\n  ...passDownProps\n}) {\n  const forceUpdate = useUpdate();\n  useEffect(() => {\n    if (!live) {\n      return;\n    }\n\n    let timeoutId;\n\n    const tick = refresh => {\n      const then = dateParser(date).valueOf();\n\n      if (!then) {\n        console.warn('[react-timeago] Invalid Date provided');\n        return;\n      }\n\n      const timeNow = now();\n      const seconds = Math.round(Math.abs(timeNow - then) / 1000);\n      const unboundPeriod = seconds < MINUTE ? 1000 : seconds < HOUR ? 1000 * MINUTE : seconds < DAY ? 1000 * HOUR : 1000 * WEEK;\n      const period = Math.min(Math.max(unboundPeriod, minPeriod * 1000), maxPeriod * 1000);\n\n      if (period) {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n\n        timeoutId = setTimeout(tick, period);\n      }\n\n      if (!refresh) {\n        forceUpdate();\n      }\n    };\n\n    tick(true);\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [date, forceUpdate, live, maxPeriod, minPeriod, now]);\n  const Komponent = component;\n  const then = dateParser(date).valueOf();\n\n  if (!then) {\n    return null;\n  }\n\n  const timeNow = now();\n  const seconds = Math.round(Math.abs(timeNow - then) / 1000);\n  const suffix = then < timeNow ? 'ago' : 'from now';\n  const [value, unit] = seconds < MINUTE ? [Math.round(seconds), 'second'] : seconds < HOUR ? [Math.round(seconds / MINUTE), 'minute'] : seconds < DAY ? [Math.round(seconds / HOUR), 'hour'] : seconds < WEEK ? [Math.round(seconds / DAY), 'day'] : seconds < MONTH ? [Math.round(seconds / WEEK), 'week'] : seconds < YEAR ? [Math.round(seconds / MONTH), 'month'] : [Math.round(seconds / YEAR), 'year'];\n  const passDownTitle = typeof title === 'undefined' ? typeof date === 'string' ? date : dateParser(date).toISOString().substr(0, 16).replace('T', ' ') : title;\n  const spreadProps = Komponent === 'time' ? { ...passDownProps,\n    dateTime: dateParser(date).toISOString()\n  } : passDownProps;\n  const nextFormatter = defaultFormatter.bind(null, value, unit, suffix);\n  return /*#__PURE__*/React.createElement(Komponent, _extends({}, spreadProps, {\n    title: passDownTitle\n  }), formatter(value, unit, suffix, then, nextFormatter, now));\n}\n\nfunction useUpdate() {\n  const [_, setCount] = useState(0);\n  return useCallback(() => {\n    setCount(num => num + 1);\n  }, []);\n}","import React, { Component, useEffect, useRef, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, useHistory, withRouter } from 'react-router-dom'\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Grid,\n  IconButton,\n  InputAdornment,\n  Paper,\n  StepLabel,\n  SvgIcon,\n  TextField,\n  Typography,\n  ListItemText,\n  List,\n  ListItem\n} from '@material-ui/core'\nimport {\n  createChatRoom,\n  getAllMessages,\n  getAllRooms,\n  getRoomDetails,\n  addMessage\n} from '../../actions/chatRoomAction'\nimport WebSocketInstance from '../../websocket/socket'\nimport TimeAgo from 'react-timeago'\nimport { makeStyles } from '@material-ui/styles'\nimport SendIcon from '@material-ui/icons/Send'\n\nconst useStyles = makeStyles(theme => ({\n  roomChatDiv: {\n    height: '100%'\n  },\n  textfield: {\n    position: 'absolute',\n    bottom: '0px',\n    width: '100%',\n    backgroundColor: theme.palette.primary.main\n  },\n  chatBoxMessages: {\n    padding: '2px',\n    position: 'relative',\n    overflow: 'hidden',\n    height: '85%',\n    width: '100%'\n  },\n  messageList: {\n    maxHeight: '100%',\n    top: 0,\n    left: 0,\n    right: -theme.spacing(2),\n    position: 'absolute',\n    overflowY: 'scroll',\n    [theme.breakpoints.down('md')]: {\n      right: 0,\n    },\n  }\n}))\n\nconst ChatBox = (props) => {\n  const history = useHistory()\n  const messageBox = useRef()\n  const classes = useStyles()\n  useEffect(() => {\n    console.log('room chat')\n    console.log(props)\n    props.getAllMessages(props.match.params.id)\n  }, [])\n  useEffect(() => {\n    if (messageBox.current) {\n      console.log(messageBox.current.scrollTop)\n      messageBox.current.scrollTop = messageBox.current.scrollHeight\n      console.log(messageBox.current.scrollTop)\n    }\n  }, [messageBox.current, props.messages.length])\n  const { currentRoom } = props\n  return (\n      <Grid className={classes.chatBoxMessages}>\n        <List ref={messageBox} className={classes.messageList}>\n          {props.messages.map(msg => (\n            <ListItem key={msg.id}>\n              <Grid container>\n                <Grid item xs={12}>\n                  <ListItemText\n                    align={msg.user.pk == props.user.pk ? 'right' : 'left'}\n                    disableTypography\n                    secondary={\n                      <div>\n                        <span style={{ fontWeight: 'bolder' }}>\n                          {msg.user.first_name}\n                        </span>{' '}\n                        <span\n                          style={{\n                            fontWeight: 'lighter',\n                            fontSize: 'small'\n                          }}\n                        >\n                          <TimeAgo date={msg.created_on} />\n                        </span>\n                      </div>\n                    }\n                  ></ListItemText>\n                </Grid>\n                <Grid item xs={12}>\n                  <ListItemText\n                    align={msg.user.pk == props.user.pk ? 'right' : 'left'}\n                    primary={msg.message}\n                  ></ListItemText>\n                </Grid>\n              </Grid>\n            </ListItem>\n          ))}\n        </List>\n      </Grid>\n  )\n}\n\nconst mapStateToprops = state => {\n  return {\n    user: state.auth.user,\n    currentRoom: state.room.currentRoom,\n    messages: state.room.messages\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    createChatRoom: (data, handleSuccess) => {\n      return dispatch(createChatRoom(data, handleSuccess))\n    },\n    getAllMessages: (id, callback) => {\n      return dispatch(getAllMessages(id, callback))\n    },\n    addMessage: message => {\n      return dispatch(addMessage(message))\n    }\n  }\n}\n\nexport default withRouter(connect(mapStateToprops, mapDispatchToprops)(ChatBox))\n","import React, { Component, useEffect, useState } from 'react'\nimport { connect, useSelector } from 'react-redux'\nimport { Link, useHistory, withRouter } from 'react-router-dom'\nimport {\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  Paper,\n  StepLabel,\n  TextField,\n  Typography,\n  ListItemText,\n  List,\n  ListItem,\n  Chip,\n  CardHeader,\n  CardActions\n} from '@material-ui/core'\nimport AddUserModal from '../common/addUser'\nimport {\n  createChatRoom,\n  getAllRooms,\n  getRoomDetails\n} from '../../actions/chatRoomAction'\nimport { makeStyles } from '@material-ui/styles'\nimport VideoCallIcon from '@material-ui/icons/VideoCall'\nimport PersonAddIcon from '@material-ui/icons/PersonAdd'\nimport { getModifiedDate } from '../../helpers/helperFunctions'\n\nconst useStyles = makeStyles(theme => ({\n  roomDataDiv: {\n    width: '100%',\n    display: 'grid',\n    justifyItems: 'center',\n    alignItems: 'center'\n  }\n}))\n\nconst RoomData = props => {\n  const history = useHistory()\n  useEffect(() => {\n    // props.getRoomDetails()\n  }, [])\n  const classes = useStyles()\n  const [showAddUserModal, setShowAddUserModal] = useState(false)\n  const currentRoom = useSelector(state => state.room.currentRoom)\n  function openRoom () {\n    history.push(`/video/${currentRoom.id}/${currentRoom.sharing_id}`)\n  }\n  return (\n    <div className={classes.roomDataDiv}>\n      <Card style={{ textAlign: 'center' }}>\n        <CardHeader\n          // avatar={\n          //   <Avatar aria-label=\"recipe\" className={classes.avatar}>\n          //     R\n          //   </Avatar>\n          // }\n          // action={\n          //   <IconButton aria-label=\"settings\">\n          //     <MoreVertIcon />\n          //   </IconButton>\n          // }\n          title={currentRoom && currentRoom.room_name}\n          subheader={getModifiedDate(currentRoom.created_on)}\n        />\n        {/* <CardHeader color='secondary' className={classes.roomName}>\n          <Typography style={{ textAlign: 'center' }} variant='h4'>\n            {currentRoom && currentRoom.room_name}\n          </Typography>\n        </CardHeader> */}\n        <CardContent>\n          <Typography style={{ textAlign: 'center' }} variant='h5'>\n            Admin\n          </Typography>\n          <Chip\n            size='medium'\n            color='default'\n            label={`${currentRoom.id && currentRoom.created_by.email}`}\n          />\n        </CardContent>\n        <CardContent>\n          <Typography style={{ textAlign: 'center' }} variant='h5'>\n            All Users\n          </Typography>\n          {currentRoom.id &&\n            currentRoom.all_users.map(user => (\n              <Chip size='medium' color='secondary' label={`${user.email}`} />\n            ))}\n        </CardContent>\n        <CardActions style={{ justifyContent: 'center' }}>\n          {currentRoom.id && currentRoom.created_by.pk == props.user.pk && (\n            <Button\n              variant='contained'\n              color='secondary'\n              className={classes.createRoomButton}\n              startIcon={<PersonAddIcon />}\n              onClick={() => setShowAddUserModal(true)}\n            >\n              Add User\n            </Button>\n          )}\n          {props.meeting && <Button\n            variant='contained'\n            color='secondary'\n            className={classes.createRoomButton}\n            startIcon={<VideoCallIcon />}\n            onClick={openRoom}\n          >\n            Join Meeting\n          </Button>}\n          {/* </ListItem> */}\n          {showAddUserModal && (\n            <AddUserModal\n              room={currentRoom}\n              show={showAddUserModal}\n              onClose={() => setShowAddUserModal(false)}\n            />\n          )}\n        </CardActions>\n      </Card>\n    </div>\n  )\n}\n\nconst mapStateToprops = state => {\n  return {\n    user: state.auth.user,\n    currentRoom: state.room.currentRoom\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    createChatRoom: (data, handleSuccess) => {\n      return dispatch(createChatRoom(data, handleSuccess))\n    },\n    getRoomDetails: () => {\n      return dispatch(getRoomDetails())\n    }\n  }\n}\n\nexport default withRouter(\n  connect(mapStateToprops, mapDispatchToprops)(RoomData)\n)\n","import React, { Component, useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, useHistory, withRouter } from 'react-router-dom'\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Grid,\n  IconButton,\n  InputAdornment,\n  Paper,\n  StepLabel,\n  SvgIcon,\n  TextField,\n  Typography,\n  ListItemText,\n  List,\n  ListItem\n} from '@material-ui/core'\nimport {\n  createChatRoom,\n  getAllMessages,\n  getAllRooms,\n  getRoomDetails,\n  addMessage\n} from '../../actions/chatRoomAction'\nimport WebSocketInstance from '../../websocket/socket'\nimport TimeAgo from 'react-timeago'\nimport { makeStyles } from '@material-ui/styles'\nimport SendIcon from '@material-ui/icons/Send'\nimport ChatBox from '../common/chatBox'\n\nconst useStyles = makeStyles(theme => ({\n  roomChatDiv: {\n    // width: '100%',\n    // display: 'grid',\n    // justifyItems: 'center'\n    position: 'relative',\n    height: '90%',\n    backgroundColor: theme.palette.background.default\n  },\n  textfield: {\n    position: 'absolute',\n    bottom: '0px',\n    width: '100%',\n    backgroundColor: theme.palette.primary.main\n  },\n  chatHeading: {\n    top: '0px',\n    backgroundColor: theme.palette.primary.main\n  },\n  chatBoxMessages: {\n    padding: '2px',\n    position: 'relative',\n    overflow: 'hidden',\n    height: '85%',\n    width: '100%'\n  },\n  messageList: {\n    maxHeight: '100%',\n    top: 0,\n    left: 0,\n    right: -theme.spacing(2),\n    position: 'absolute',\n    overflowY: 'scroll'\n  }\n}))\n\nconst RoomChat = props => {\n  const history = useHistory()\n  useEffect(() => {\n    console.log('room chat')\n    console.log(props)\n    props.getAllMessages(props.match.params.id)\n    return () => {\n      WebSocketInstance.close()\n    }\n  }, [])\n  const { currentRoom } = props\n  useEffect(() => {\n    if (Boolean(WebSocketInstance) && WebSocketInstance.socketRef) {\n      WebSocketInstance.close()\n    }\n    WebSocketInstance.connect(\n      `${window.location.protocol == 'http:' ? 'ws' : 'wss'}://${\n        window.location.host.includes('localhost:')\n          ? 'localhost:8000'\n          : window.location.hostname\n      }/ws/chat/${props.currentRoom.sharing_id}`\n    )\n    //   setWebSocket(WebSocketInstance)\n    WebSocketInstance.sendSignal('join room', {\n      video: false,\n      audio: false,\n      onlyChat: true\n    })\n    WebSocketInstance.on('message received', payload => {\n      // const msgObj = {\n      //   user: payload.user,\n      //   msg: payload.message\n      // }\n      payload.user = JSON.parse(payload.user)\n      props.addMessage(payload)\n      // if (props.myuser.first_name != msgObj.user && !chatBoxOpen) {\n      //   toast(`${payload.user} : ${payload.message}`, { icon: '💬' })\n      // }\n      // console.log(allMessages)\n    })\n  }, [currentRoom.id])\n  const classes = useStyles()\n  const [message, setMessage] = useState('')\n  function handleMessageSend () {\n    WebSocketInstance.sendSignal('send_message', message)\n    setMessage('')\n  }\n\n  function handleMessageChange (event) {\n    setMessage(event.target.value)\n  }\n\n  return (\n    <Card className={classes.roomChatDiv}>\n      <CardContent color='secondary' className={classes.chatHeading}>\n        <Typography variant='h5'>Chat</Typography>\n      </CardContent>\n      <ChatBox />\n      <TextField\n        color='secondary'\n        className={classes.textfield}\n        onChange={handleMessageChange}\n        value={message}\n        name='message'\n        variant='outlined'\n        autoComplete={false}\n        label=''\n        placeholder='Enter your msg'\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position='end'>\n              <IconButton>\n                <SvgIcon onClick={handleMessageSend}>\n                  <SendIcon />\n                </SvgIcon>\n              </IconButton>\n            </InputAdornment>\n          )\n        }}\n      />\n    </Card>\n  )\n}\n\nconst mapStateToprops = state => {\n  return {\n    user: state.auth.user,\n    currentRoom: state.room.currentRoom,\n    messages: state.room.messages\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    createChatRoom: (data, handleSuccess) => {\n      return dispatch(createChatRoom(data, handleSuccess))\n    },\n    getAllMessages: (id, callback) => {\n      return dispatch(getAllMessages(id, callback))\n    },\n    addMessage: message => {\n      return dispatch(addMessage(message))\n    }\n  }\n}\n\nexport default withRouter(\n  connect(mapStateToprops, mapDispatchToprops)(RoomChat)\n)\n\n// import React from 'react'\n// import { makeStyles } from '@material-ui/core/styles'\n// import Paper from '@material-ui/core/Paper'\n// import Grid from '@material-ui/core/Grid'\n// import Box from '@material-ui/core/Box'\n// import Divider from '@material-ui/core/Divider'\n// import TextField from '@material-ui/core/TextField'\n// import Typography from '@material-ui/core/Typography'\n// import List from '@material-ui/core/List'\n// import ListItem from '@material-ui/core/ListItem'\n// import ListItemIcon from '@material-ui/core/ListItemIcon'\n// import ListItemText from '@material-ui/core/ListItemText'\n// import Avatar from '@material-ui/core/Avatar'\n// import Fab from '@material-ui/core/Fab'\n// import SendIcon from '@material-ui/icons/Send'\n\n// const useStyles = makeStyles({\n//   table: {\n//     minWidth: 650\n//   },\n//   chatSection: {\n//     width: '100%',\n//     height: '80vh'\n//   },\n//   headBG: {\n//     backgroundColor: '#e0e0e0'\n//   },\n//   borderRight500: {\n//     borderRight: '1px solid #e0e0e0'\n//   },\n//   messageArea: {\n//     height: '70vh',\n//     overflowY: 'auto'\n//   }\n// })\n\n// const RoomChat = () => {\n//   const classes = useStyles()\n\n//   return (\n//     <div>\n//       <Grid container>\n//         <Grid item xs={12}>\n//           <Typography variant='h5' className='header-message'>\n//             Chat\n//           </Typography>\n//         </Grid>\n//       </Grid>\n//       <Grid container component={Paper} className={classes.chatSection}>\n//         <Grid item xs={3} className={classes.borderRight500}>\n//           <List>\n//             <ListItem button key='RemySharp'>\n//               <ListItemIcon>\n//                 <Avatar\n//                   alt='Remy Sharp'\n//                   src='https://material-ui.com/static/images/avatar/1.jpg'\n//                 />\n//               </ListItemIcon>\n//               <ListItemText primary='John Wick'></ListItemText>\n//             </ListItem>\n//           </List>\n//           <Divider />\n//           <Grid item xs={12} style={{ padding: '10px' }}>\n//             <TextField\n//               id='outlined-basic-email'\n//               label='Search'\n//               variant='outlined'\n//               fullWidth\n//             />\n//           </Grid>\n//           <Divider />\n//           <List>\n//             <ListItem button key='RemySharp'>\n//               <ListItemIcon>\n//                 <Avatar\n//                   alt='Remy Sharp'\n//                   src='https://material-ui.com/static/images/avatar/1.jpg'\n//                 />\n//               </ListItemIcon>\n//               <ListItemText primary='Remy Sharp'>Remy Sharp</ListItemText>\n//               <ListItemText secondary='online' align='right'></ListItemText>\n//             </ListItem>\n//             <ListItem button key='Alice'>\n//               <ListItemIcon>\n//                 <Avatar\n//                   alt='Alice'\n//                   src='https://material-ui.com/static/images/avatar/3.jpg'\n//                 />\n//               </ListItemIcon>\n//               <ListItemText primary='Alice'>Alice</ListItemText>\n//             </ListItem>\n//             <ListItem button key='CindyBaker'>\n//               <ListItemIcon>\n//                 <Avatar\n//                   alt='Cindy Baker'\n//                   src='https://material-ui.com/static/images/avatar/2.jpg'\n//                 />\n//               </ListItemIcon>\n//               <ListItemText primary='Cindy Baker'>Cindy Baker</ListItemText>\n//             </ListItem>\n//           </List>\n//         </Grid>\n//         <Grid item xs={9}>\n//           <List className={classes.messageArea}>\n//             <ListItem key='1'>\n//               <Grid container>\n//                 <Grid item xs={12}>\n//                   {/* <ListItem button key='CindyBaker'>\n//                     <ListItemIcon> */}\n//                   <Avatar\n//                     alt='Cindy Baker'\n//                     src='https://material-ui.com/static/images/avatar/2.jpg'\n//                   />\n//                   {/* </ListItemIcon> */}\n//                   {/* <ListItemText primary='Cindy Baker'> */}\n//                   Cindy Baker\n//                   {/* </ListItemText> */}\n//                   {/* </ListItem> */}\n//                   <ListItemText align='right'>\n//                     <Avatar\n//                       alt='Cindy Baker'\n//                       src='https://material-ui.com/static/images/avatar/2.jpg'\n//                     />\n//                     Cindy Baker 09:30\n//                   </ListItemText>\n//                 </Grid>\n//                 <Grid item xs={12}>\n//                   <ListItemText\n//                     align='right'\n//                     secondary=\"Hey man, What's up ?\"\n//                   ></ListItemText>\n//                 </Grid>\n//               </Grid>\n//             </ListItem>\n//             <ListItem key='2'>\n//               <Grid container>\n//                 <Grid item xs={12}>\n//                   <ListItemText\n//                     align='left'\n//                     primary='Hey, Iam Good! What about you ?'\n//                   ></ListItemText>\n//                 </Grid>\n//                 <Grid item xs={12}>\n//                   <ListItemText align='left' secondary='09:31'></ListItemText>\n//                 </Grid>\n//               </Grid>\n//             </ListItem>\n//             <ListItem key='3'>\n//               <Grid container>\n//                 <Grid item xs={12}>\n//                   <ListItemText\n//                     align='right'\n//                     primary=\"Cool. i am good, let's catch up!\"\n//                   ></ListItemText>\n//                 </Grid>\n//                 <Grid item xs={12}>\n//                   <ListItemText align='right' secondary='10:30'></ListItemText>\n//                 </Grid>\n//               </Grid>\n//             </ListItem>\n//           </List>\n//           <Divider />\n//           <Grid container style={{ padding: '20px' }}>\n//             <Grid item xs={11}>\n//               <TextField\n//                 id='outlined-basic-email'\n//                 label='Type Something'\n//                 fullWidth\n//               />\n//             </Grid>\n//             <Grid xs={1} align='right'>\n//               <Fab color='primary' aria-label='add'>\n//                 <SendIcon />\n//               </Fab>\n//             </Grid>\n//           </Grid>\n//         </Grid>\n//       </Grid>\n//     </div>\n//   )\n// }\n\n// export default RoomChat\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import {\n    IconButton,\n    InputAdornment,\n    Modal,\n    SvgIcon,\n    TextField\n  } from '@material-ui/core'\n  import { makeStyles } from '@material-ui/styles'\n  import Fade from '@material-ui/core/Fade'\n  import { connect } from 'react-redux'\n  import SendIcon from '@material-ui/icons/Send'\n  import rooms from '../../views/rooms'\n  import { useState } from 'react'\n  import { updateRoomUsers } from '../../actions/chatRoomAction'\n  import toast, { Toaster } from 'react-hot-toast'\nimport RoomData from '../rooms/roomData'\n  \n  const useStyles = makeStyles(theme => ({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    paper: {\n      backgroundColor: theme.palette.secondary.main,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3)\n    },\n    textField: {}\n  }))\n  \n  const RoomDetailsModal = props => {\n    const classes = useStyles()\n    const { show, onClose, label = 'Room Details', ...restProps } = props\n    return (\n      <Modal\n        aria-labelledby='transition-modal-title'\n        aria-describedby='transition-modal-description'\n        className={classes.modal}\n        open={show}\n        centered\n        onClose={onClose}\n      >\n        <Fade in={show}>\n          <RoomData meeting={props.meeting}/>\n        </Fade>\n      </Modal>\n    )\n  }\n  \n  const mapStateToProps = state => {\n    return {\n      currentRoom: state.room.currentRoom\n    }\n  }\n  \n  const mapDispatchToprops = dispatch => {\n    return {\n      updateRoomUsers: (data, id, handleSuccess) => {\n        return dispatch(updateRoomUsers(data, id, handleSuccess))\n      }\n    }\n  }\n  \n  export default connect(mapStateToProps, mapDispatchToprops)(RoomDetailsModal)\n  ","import { Button, Card, Grid, Link, Paper } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport React, { Component, useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Redirect, useHistory } from 'react-router'\nimport { logoutUser } from '../actions/authAction'\nimport { getRoomDetails } from '../actions/chatRoomAction'\nimport RoomChat from '../components/rooms/roomChat'\nimport RoomData from '../components/rooms/roomData'\nimport RoomDetailsModal from '../components/common/roomDataModal'\n\nconst useStyles = makeStyles(theme => ({\n  Room: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    padding: theme.spacing(2),\n    height: '100%',\n    position: 'relative',\n    [theme.breakpoints.down('xs')]: {\n      gridAutoFlow: 'row'\n    }\n  },\n  roomDetailsButton: {\n    [theme.breakpoints.up('md')]: {\n      display: 'none'\n    }\n  },\n  roomDetailsDiv: {\n    // [theme.breakpoints.down('lg')]: {\n      display: 'none'\n    // }\n  }\n}))\n\nconst Room = props => {\n  const [showRoomDetailModal, setShowRoomDetailModal] = useState(false)\n  useEffect(() => {\n    console.log('render')\n    console.log(props)\n    props.getRoomDetails(props.match.params.id)\n  }, [])\n  const classes = useStyles()\n  return (\n    <Grid className={classes.Room}>\n      <Button\n        variant='contained'\n        color='secondary'\n        className={classes.roomDetailsButton}\n        // startIcon={<PersonAddIcon />}\n        onClick={() => setShowRoomDetailModal(true)}\n      >\n        View Details\n      </Button>\n      {showRoomDetailModal && (\n        <RoomDetailsModal\n          show={showRoomDetailModal}\n          meeting={true}\n          onClose={() => setShowRoomDetailModal(false)}\n        />\n      )}\n      <RoomData className={classes.roomDetailsDiv} meeting={true} />\n      <RoomChat />\n    </Grid>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logoutUser: () => {\n      return dispatch(logoutUser())\n    },\n    getRoomDetails: (id, callback) => {\n      return dispatch(getRoomDetails(id, callback))\n    }\n  }\n}\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Room))\n"],"sourceRoot":""}