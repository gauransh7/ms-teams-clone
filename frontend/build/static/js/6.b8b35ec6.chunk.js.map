{"version":3,"sources":["components/video/videoPlayer.js","views/video.js"],"names":["useStyles","makeStyles","theme","video","width","height","backgroundSize","objectFit","zIndex","overflow","gridContainer","justifyContent","breakpoints","down","flexDirection","paper","display","gridAutoFlow","boxShadow","userDetailDiv","position","userDiv","textAlign","padding","spacing","margin","chatRoom","chatRoomMainDiv","chatBox","backgroundColor","palette","secondary","main","minWidth","maxHeight","top","bottom","right","left","chatBoxIntro","chatBoxMessages","actionButtons","marginLeft","marginRight","up","textfield","primary","Video","props","ref","useRef","classes","useEffect","peer","on","stream","current","srcObject","playsInline","autoPlay","className","muted","videoConstraints","withRouter","connect","state","myuser","auth","user","currentRoom","room","token","dispatch","updateRoomUsers","data","id","handleSuccess","history","useHistory","useSelector","useState","message","setMessage","peers","setPeers","allMessages","setAllMessages","setWebSocket","userVideo","localstream","mystream","setMystream","setVideo","chatBoxOpen","setChatBoxOpen","audio","setAudio","roomExist","setRoomExists","peersRef","toggleChatBoxOpen","console","log","match","params","sharing_id","code","JSON","stringify","getTracks","map","track","stop","WebSocketInstance","close","Boolean","socketRef","window","location","hostname","waitForSocketConnection","navigator","mediaDevices","getUserMedia","then","sendSignal","users","forEach","pk","userToSignal","callerID","Peer","initiator","trickle","signal","createPeer","push","peerID","peerName","payload","userID","incomingSignal","caller","addPeer","some","e","peerObj","find","p","destroy","filter","msgObj","msg","messages","Grid","container","item","xs","Paper","Typography","variant","gutterBottom","first_name","IconButton","onClick","obj","chatBoxInput","TextField","color","onChange","event","target","value","name","autoComplete","label","placeholder","InputProps","endAdornment","InputAdornment","SvgIcon","Button","getVideoTracks","enabled","getAudioTracks","getDisplayMedia","cursor","screenStream","replaceTrack","VideoView","style","Component","logoutUser"],"mappings":"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","file":"static/js/6.b8b35ec6.chunk.js","sourcesContent":["import {\n  Grid,\n  Typography,\n  Paper,\n  makeStyles,\n  Button,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  StepLabel,\n  IconButton\n} from '@material-ui/core'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { useSelector } from 'react-redux'\nimport { useHistory, withRouter } from 'react-router'\n// import io from \"socket.io-client\";\nimport Peer from 'simple-peer'\nimport { updateRoomUsers } from '../../actions/chatRoomAction'\n// import styled from \"styled-components\";\nimport WebSocketInstance from '../../websocket/socket'\nimport VideocamIcon from '@material-ui/icons/Videocam'\nimport VideocamOffIcon from '@material-ui/icons/VideocamOff'\nimport MicIcon from '@material-ui/icons/Mic'\nimport MicOffIcon from '@material-ui/icons/MicOff'\nimport CallEndIcon from '@material-ui/icons/CallEnd'\nimport ChatIcon from '@material-ui/icons/Chat'\nimport SendIcon from '@material-ui/icons/Send'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\n\nconst useStyles = makeStyles(theme => ({\n  video: {\n    width: '100%',\n    height: '100%',\n    backgroundSize: 'cover',\n    objectFit: 'fill',\n    zIndex: -1,\n    overflow: 'hidden'\n  },\n  gridContainer: {\n    justifyContent: 'center',\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column'\n    }\n  },\n  paper: {\n    // padding: '2px',\n    // border: '2px solid black',\n    // margin: '2px',\n    // gridTemplateColumns: '1fr 1fr',\n    display: 'grid',\n    justifyContent: 'space-around',\n    gridAutoFlow: 'column',\n    overflow: 'hidden',\n    height: '100%',\n    width: '100%',\n    boxShadow: 'none',\n    [theme.breakpoints.down('sm')]: {\n      gridAutoFlow: 'row'\n    }\n  },\n  userDetailDiv: {\n    position: 'absolute'\n    // marginLeft: '3%'\n  },\n  userDiv: {\n    textAlign: 'center',\n    position: 'relative',\n    padding: theme.spacing(1),\n    margin: theme.spacing(1)\n  },\n  chatRoom: {\n    height: '100%'\n  },\n  chatRoomMainDiv: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    width: '100%',\n    height: '100%',\n    position: 'relative'\n  },\n  chatBox: {\n    position: 'relative',\n    backgroundColor: theme.palette.secondary.main,\n    zIndex: 2,\n    width: 'auto',\n    minWidth: '30vh',\n    maxHeight: '100%',\n    [theme.breakpoints.down('xs')]: {\n      position: 'absolute',\n      top: 0,\n      bottom: 0,\n      right: 0,\n      left: 0,\n      width: '100%',\n      height: '100%'\n    }\n  },\n  chatBoxIntro: {\n    padding: '2px'\n  },\n  chatBoxMessages: {\n    padding: '2px'\n  },\n  actionButtons: {\n    position: 'absolute',\n    bottom: '2rem',\n    display: 'grid',\n    justifyContent: 'center',\n    boxShadow: 'none',\n    gridAutoFlow: 'column',\n    // left: '0',\n    // right: '0',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    [theme.breakpoints.up('md')]: {\n      right: 0,\n      left: 0\n    },\n    [theme.breakpoints.down('xs')]: {\n      gridAutoFlow: 'row'\n    }\n    // left: '40%'\n  },\n  textfield: {\n    position: 'absolute',\n    bottom: '0px',\n    width: '100%',\n    backgroundColor: theme.palette.primary.main\n  }\n}))\n\nconst Video = props => {\n  const ref = useRef()\n  const classes = useStyles()\n\n  useEffect(() => {\n    props.peer.on('stream', stream => {\n      ref.current.srcObject = stream\n    })\n  }, [])\n\n  return (\n    <video playsInline autoPlay className={classes.video} muted ref={ref} />\n  )\n}\n\nconst videoConstraints = {\n  // height: window.innerHeight / 1.5,\n  // width: window.innerWidth / 2\n}\n\nconst Room = props => {\n  const history = useHistory()\n  const currentRoom = useSelector(state => state.room.currentRoom)\n  const [message, setMessage] = useState()\n  const token = useSelector(state => state.auth.token)\n  const [peers, setPeers] = useState([])\n  const [allMessages, setAllMessages] = useState([])\n  const [websocket, setWebSocket] = useState([])\n  var socketRef = useRef()\n  const userVideo = useRef()\n  const dummyUserVideo = useRef()\n  var localstream = useRef()\n  const [mystream, setMystream] = useState()\n  const [video, setVideo] = useState(true)\n  const [chatBoxOpen, setChatBoxOpen] = useState(false)\n  const [audio, setAudio] = useState(false)\n  const [roomExist, setRoomExists] = useState(false)\n  const peersRef = useRef([])\n  const roomID = ''\n  const classes = useStyles()\n\n  // const handleSuccess = () => {\n  //   console.log(\"success\")\n  //   setRoomExists(true)\n  // }\n  useEffect(() => {\n    console.log(history)\n    console.log(props)\n    let data = {\n      id: props.match.params.id,\n      sharing_id: props.match.params.code\n    }\n    data = JSON.stringify(data)\n    props.updateRoomUsers(data, props.match.params.id, () => {\n      setRoomExists(true)\n    })\n    return () => {\n      // Anything in here is fired on component unmount.\n      // console.log(localstream.current.getTracks())\n      const tracks = localstream.current.getTracks()\n      tracks.map(track => {\n        track.stop()\n      })\n      localstream.current.getTracks()[0].stop()\n      WebSocketInstance.close()\n    }\n  }, [])\n\n  useEffect(() => {\n    if (roomExist) {\n      console.log(props.currentRoom)\n      if (Boolean(WebSocketInstance) && WebSocketInstance.socketRef) {\n        WebSocketInstance.close()\n      }\n      WebSocketInstance.connect(\n        `wss://${window.location.hostname}/ws/chat/${props.currentRoom.sharing_id}`\n      )\n      WebSocketInstance.waitForSocketConnection(() => {\n        console.log('looping')\n      })\n      setWebSocket(WebSocketInstance)\n      navigator.mediaDevices\n        .getUserMedia({ video: videoConstraints, audio: true })\n        .then(stream => {\n          userVideo.current.srcObject = stream\n          // dummyUserVideo.current.srcObject = stream\n          localstream.current = stream\n          setMystream(stream)\n          WebSocketInstance.sendSignal('join room', roomID)\n          WebSocketInstance.on('all users', users => {\n            console.log('all users received')\n            console.log(users)\n            const peers = []\n            users.forEach(user => {\n              if (user[0] !== props.myuser.pk) {\n                const peer = createPeer(user[0], props.myuser.pk, stream)\n                peersRef.current.push({\n                  peerID: user[0],\n                  peerName: user[1],\n                  peer\n                })\n                peers.push({\n                  peerID: user[0],\n                  peerName: user[1],\n                  peer\n                })\n                console.log('created peer ' + user.id)\n              }\n            })\n            setPeers(peers)\n            console.log('peers after all users')\n            console.log(peers)\n          })\n\n          WebSocketInstance.on('user joined', payload => {\n            console.log('user joined')\n            console.log(peers)\n            console.log(payload.userID)\n            if (payload.userID === props.myuser.pk) {\n              const peer = addPeer(payload.signal, payload.caller, stream)\n              if (\n                !Boolean(\n                  peersRef.current.some(e => e.peerID == payload.caller[0])\n                )\n              ) {\n                peersRef.current.push({\n                  peerID: payload.caller[0],\n                  peerName: payload.caller[1],\n                  peer\n                })\n\n                const peerObj = {\n                  peerID: payload.callerID,\n                  peerName: payload.caller[1],\n                  peer\n                }\n\n                setPeers(users => [...users, peerObj])\n                console.log('added peer ' + peerObj.peerID)\n              }\n              console.log(peers)\n            }\n          })\n\n          WebSocketInstance.on('receiving returned signal', payload => {\n            console.log('receiving returned signal')\n            if (payload.userID === props.myuser.pk) {\n              const item = peersRef.current.find(p => p.peerID === payload.id)\n              item.peer.signal(payload.signal)\n            }\n          })\n\n          WebSocketInstance.on('user left', id => {\n            console.log('user left')\n            const peerObj = peersRef.current.find(p => p.peerID === id)\n            if (peerObj) {\n              peerObj.peer.destroy()\n            }\n            const peers = peersRef.current.filter(p => p.peerID !== id)\n            peersRef.current = peers\n            setPeers(peers)\n          })\n\n          WebSocketInstance.on('message received', payload => {\n            const msgObj = {\n              user: payload.user,\n              msg: payload.message\n            }\n            setAllMessages(messages => [...messages, msgObj])\n            console.log(allMessages)\n          })\n        })\n    }\n  }, [roomExist])\n\n  function createPeer (userToSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    })\n\n    peer.on('signal', signal => {\n      WebSocketInstance.sendSignal('sending signal', {\n        userToSignal,\n        callerID,\n        signal\n      })\n    })\n\n    return peer\n  }\n\n  function addPeer (incomingSignal, caller, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    })\n    let callerID = caller[0]\n    peer.on('signal', signal => {\n      WebSocketInstance.sendSignal('returning signal', { signal, callerID })\n    })\n\n    peer.signal(incomingSignal)\n\n    return peer\n  }\n\n  function shareScreen () {\n    console.log(mystream)\n    console.log(peersRef.current)\n    navigator.mediaDevices\n      .getDisplayMedia({ cursor: true })\n      .then(screenStream => {\n        console.log(screenStream.getVideoTracks())\n        peersRef.current[0].peer.replaceTrack(\n          peersRef.current[0].peer['streams'][0].getVideoTracks()[0],\n          screenStream.getVideoTracks()[0],\n          peersRef.current[0].peer['streams'][0]\n        )\n        userVideo.current.srcObject = screenStream\n        // screenStream.getTracks()[0].onended = () =>{\n        // peers[0].peer.replaceTrack(screenStream.getVideoTracks()[0],mystream.getVideoTracks()[0],mystream)\n        // userVideo.current.srcObject=mystream\n        // }\n      })\n  }\n\n  function handleMessageSend () {\n    WebSocketInstance.sendSignal('send_message', message)\n    setMessage('')\n  }\n\n  function handleMessageChange (event) {\n    setMessage(event.target.value)\n  }\n\n  function toggleChatBoxOpen () {\n    setChatBoxOpen(!chatBoxOpen)\n  }\n\n  function handleVideoToggle () {\n    mystream.getVideoTracks()[0].enabled = !mystream.getVideoTracks()[0].enabled\n    setVideo(!video)\n  }\n  function handleAudioToggle () {\n    mystream.getAudioTracks()[0].enabled = !mystream.getAudioTracks()[0].enabled\n    setAudio(!audio)\n  }\n  function handleDisconnect () {\n    console.log(mystream)\n    const tracks = mystream && mystream.getTracks()\n    tracks.map(track => {\n      track.stop()\n    })\n    // localstream.current.getTracks()[0].stop();\n    // WebSocketInstance.close()\n    history.push('/')\n  }\n\n  return roomExist ? (\n    <div className={classes.chatRoom}>\n      <div className={classes.chatRoomMainDiv}>\n        <Grid\n          // xs={chatBoxOpen ? 6 : 12}\n          container\n          spacing={2}\n          className={classes.paper}\n        >\n          <Grid\n            container\n            item\n            xs={12}\n            // xs={12}\n            key={props.myuser.pk}\n            className={classes.userDiv}\n          >\n          <Paper>\n            <Typography\n              variant='h5'\n              className={classes.userDetailDiv}\n              gutterBottom\n            >\n              {props.myuser.first_name}\n            </Typography>\n            <video\n              // width=\"100%\"\n              // height=\"120%\"\n              playsInline\n              autoPlay\n              className={classes.video}\n              muted\n              ref={userVideo}\n            />\n            </Paper>\n          </Grid>\n\n          {peers.map(peer => {\n            return (\n              <Grid\n                container\n                xs={12}\n                // xs={12}\n                item\n                key={peer.peerID}\n                className={classes.userDiv}\n              >\n              <Paper>\n                <Typography\n                  variant='h5'\n                  className={classes.userDetailDiv}\n                  gutterBottom\n                >\n                  {peer.peerName}\n                </Typography>\n                <Video peer={peer.peer} />\n                </Paper>\n              </Grid>\n            )\n          })}\n        </Grid>\n        {chatBoxOpen ? (\n          <Grid xs={6} className={classes.chatBox}>\n            <Grid className={classes.chatBoxIntro}>\n              <IconButton>\n                <ArrowBackIcon onClick={toggleChatBoxOpen} />\n              </IconButton>\n            </Grid>\n            {/* <StepLabel>\n                Messages are not saved and will be removed once you disconnect\n              </StepLabel> */}\n            <Grid className={classes.chatBoxMessages}>\n              {allMessages.map(obj => {\n                return (\n                  <div>\n                    <div>{obj.user}</div>\n                    <div>{obj.msg}</div>\n                  </div>\n                )\n              })}\n            </Grid>\n            <Grid className={classes.chatBoxInput}>\n              <TextField\n                color='secondary'\n                className={classes.textfield}\n                onChange={handleMessageChange}\n                value={message}\n                name='message'\n                variant='outlined'\n                autoComplete={false}\n                label=''\n                placeholder='Enter your msg'\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position='end'>\n                      <IconButton>\n                        <SvgIcon onClick={handleMessageSend}>\n                          <SendIcon />\n                        </SvgIcon>\n                      </IconButton>\n                    </InputAdornment>\n                  )\n                }}\n              />\n            </Grid>\n          </Grid>\n        ) : (\n          ''\n        )}\n      </div>\n      <Grid className={classes.actionButtons}>\n        <Button onClick={handleVideoToggle}>\n          {video ? <VideocamIcon /> : <VideocamOffIcon />}\n        </Button>\n        <Button onClick={handleAudioToggle}>\n          {audio ? <MicIcon /> : <MicOffIcon />}\n        </Button>\n        <Button onClick={toggleChatBoxOpen}>\n          <ChatIcon />\n        </Button>\n        <Button onClick={handleDisconnect}>\n          <CallEndIcon />\n        </Button>\n        <Button onClick={shareScreen}>\n          <ChatIcon />\n        </Button>\n      </Grid>\n    </div>\n  ) : (\n    <div>Room doesnt exist</div>\n  )\n}\n\nconst mapStateToprops = state => {\n  return {\n    myuser: state.auth.user,\n    currentRoom: state.room.currentRoom,\n    token: state.auth.token\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    updateRoomUsers: (data, id, handleSuccess) => {\n      return dispatch(updateRoomUsers(data, id, handleSuccess))\n    }\n  }\n}\n\nexport default withRouter(connect(mapStateToprops, mapDispatchToprops)(Room))\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { logoutUser } from '../actions/authAction'\nimport VideoPlayer from '../components/video/videoPlayer.js'\n\nclass VideoView extends Component {\n  render () {\n    return (\n      <div style={{height:'90vh'}} className='VideoView'>\n        <VideoPlayer />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logoutUser: () => {\n      return dispatch(logoutUser())\n    }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(VideoView)\n"],"sourceRoot":""}