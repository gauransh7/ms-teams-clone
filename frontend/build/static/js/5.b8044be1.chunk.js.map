{"version":3,"sources":["components/common/chatRoomCard.js","components/rooms/roomsList.js","components/common/addUser.js","components/homeComponents/roomDetails.js","views/rooms.js","../node_modules/@material-ui/icons/VideoCall.js","components/rooms/roomData.js","websocket/socket.js","components/common/chatBox.js","../node_modules/react-timeago/es6/defaultFormatter.js","../node_modules/react-timeago/es6/dateParser.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/react-timeago/es6/index.js","components/rooms/roomChat.js","components/common/roomDataModal.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","views/room.js"],"names":["useStyles","makeStyles","theme","Card","backgroundColor","palette","secondary","main","color","contrastText","margin","spacing","width","cursor","justifyContent","roomCardMainDiv","height","display","alignItems","justifyItems","icons","ChatRoomCard","props","history","useHistory","classes","useState","showAddUserModal","setShowAddUserModal","className","onClick","push","room","id","CardActions","Typography","gutterBottom","room_name","invite","Chip","label","created_by","first_name","style","marginInlineStart","IconButton","e","stopPropagation","sharing_id","show","onClose","roomsList","overflow","paddingBottom","background","gridTemplateRows","list","overflowY","maxHeight","window","screen","availHeight","position","breakpoints","down","listHeading","top","primary","marginLeft","listWrapper","webkitScrollbar","webkitScrollbarThumb","withRouter","connect","state","user","auth","roomsCreated","roomsInvited","dispatch","createChatRoom","data","handleSuccess","getAllRooms","useEffect","CardContent","variant","heading","rooms","map","modal","paper","border","boxShadow","shadows","padding","textField","currentRoom","updateRoomUsers","email","setEmail","toast","success","open","centered","in","textfield","onChange","event","target","value","name","autoComplete","placeholder","InputProps","endAdornment","roomDetailsDiv","roomList","title","textAlign","slice","Rooms","gridAutoFlow","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","React","_default","createElement","d","roomDataDiv","getRoomDetails","useSelector","maxWidth","subheader","getModifiedDate","created_on","size","all_users","pk","createRoomButton","startIcon","meeting","WebSocketService","stream","token","config","callbacks","this","socketRef","chatroom_url","WebSocket","onopen","console","log","onmessage","socketNewMessage","onerror","onclose","close","action","func","parsedData","JSON","parse","message","keys","length","send","stringify","err","waitForSocketConnection","jsonStr","peer","store","getState","bind","readyState","callback","self","setTimeout","WebSocketInstance","instance","getInstance","roomChatDiv","bottom","chatBoxMessages","messageList","left","right","ChatBox","memo","messageBox","useRef","messages","useDispatch","useParams","getAllMessages","current","scrollTop","scrollHeight","ref","msg","container","item","xs","align","disableTypography","fontWeight","fontSize","date","defaultFormatter","_unit","suffix","dateParser","parsed","Date","Number","isNaN","valueOf","parts","String","match","arr","x","parseInt","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","firstP","secondP","restPs","correctedParts","UTC","_extends","assign","i","arguments","source","key","prototype","hasOwnProperty","call","apply","HOUR","MINUTE","DAY","WEEK","MONTH","YEAR","TimeAgo","formatter","component","live","minPeriod","maxPeriod","now","passDownProps","forceUpdate","setCount","useCallback","num","useUpdate","timeoutId","tick","refresh","then","timeNow","seconds","Math","round","abs","unboundPeriod","period","min","max","clearTimeout","warn","Komponent","unit","passDownTitle","toISOString","substr","replace","spreadProps","dateTime","nextFormatter","chatHeading","addMessage","params","Boolean","location","protocol","host","includes","hostname","sendSignal","video","audio","onlyChat","on","payload","setMessage","handleMessageSend","onKeyPress","ListItemText","children","_props$disableTypogra","_props$inset","inset","primaryProp","primaryTypographyProps","secondaryProp","secondaryTypographyProps","other","_objectWithoutProperties","dense","ListContext","type","clsx","root","multiline","withStyles","flex","minWidth","marginTop","marginBottom","paddingLeft","CardHeader","avatar","_props$component","Component","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","content","marginRight","alignSelf","Room","gridTemplateColumns","roomDetailsButton","logoutUser","showRoomDetailModal","setShowRoomDetailModal"],"mappings":"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","file":"static/js/5.b8044be1.chunk.js","sourcesContent":["import {\n  Card,\n  CardActions,\n  Chip,\n  IconButton,\n  Typography\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport React, { Component, useEffect, useState } from 'react'\nimport AddUserModal from './addUser'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport LaunchIcon from '@material-ui/icons/Launch'\nimport PersonAddIcon from '@material-ui/icons/PersonAdd'\n\nconst useStyles = makeStyles(theme => ({\n  Card: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    margin: theme.spacing(0.4),\n    width: '80%',\n    cursor: 'pointer',\n    justifyContent: 'space-between'\n  },\n  roomCardMainDiv: {\n    height: '100%',\n    width: '100%',\n    display: 'grid',\n    alignItems: 'center',\n    justifyItems: 'center'\n  },\n  icons: {\n    color: theme.palette.secondary.contrastText,\n  }\n}))\n\nconst ChatRoomCard = props => {\n  const history = useHistory()\n  const classes = useStyles()\n  const [showAddUserModal, setShowAddUserModal] = useState(false)\n\n  function openRoom (e) {\n    e.stopPropagation()\n    history.push(`/video/${props.room.id}/${props.room.sharing_id}`)\n  }\n\n  function handleAddUser (e) {\n    e.stopPropagation()\n    setShowAddUserModal(true)\n  }\n\n  return (\n    <div className={classes.roomCardMainDiv}>\n      <Card\n        className={classes.Card}\n        onClick={() => history.push(`/room/${props.room.id}`)}\n      >\n        <CardActions>\n          <Typography onClick={() => setShowAddUserModal(true)} gutterBottom>\n            {props.room && props.room.room_name}\n          </Typography>\n          {props.invite && (\n            <Chip label={`creater : ${props.room.created_by.first_name}`} />\n          )}\n          <div style={{ marginInlineStart: 'auto' }}>\n            {!props.invite && (\n              <IconButton onClick={handleAddUser}>\n                <PersonAddIcon className={classes.icons} />\n              </IconButton>\n            )}\n            <IconButton onClick={openRoom}>\n              <LaunchIcon className={classes.icons} />\n            </IconButton>\n          </div>\n        </CardActions>\n      </Card>\n      {showAddUserModal && (\n        <AddUserModal\n          room={props.room}\n          onClick={e => e.stopPropagation()}\n          show={showAddUserModal}\n          onClose={() => setShowAddUserModal(false)}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default ChatRoomCard\n","import React, { Component, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory, withRouter } from 'react-router-dom'\nimport {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Grid,\n  Paper,\n  StepLabel,\n  TextField,\n  Typography\n} from '@material-ui/core'\nimport { createChatRoom, getAllRooms } from '../../actions/chatRoomAction'\nimport ChatRoomCard from '../common/chatRoomCard'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles(theme => ({\n  roomsList: {\n    width: '80%',\n    display: 'grid',\n    justifyItems: 'center',\n    overflow: 'hidden',\n    paddingBottom: theme.spacing(1),\n    backgroundColor: theme.palette.background,\n    gridTemplateRows: 'min-content',\n    height: '80%'\n  },\n  list: {\n    overflowY: 'scroll',\n    maxHeight: window.screen.availHeight / 1.3,\n    width: '100%',\n    display: 'grid',\n    justifyItems: 'center',\n    position: 'absolute',\n    [theme.breakpoints.down('xs')]: {\n      maxHeight: window.screen.availHeight / 2,\n    }\n  },\n  listHeading: {\n    top: 0,\n    backgroundColor: theme.palette.primary.main,\n    width: '100%',\n    height: '50%',\n    marginLeft: '10%'\n  },\n  listWrapper: {\n    position: 'relative',\n    width: '100%',\n    height: '90%',\n    overflow: 'hidden',\n    display: 'grid'\n  },\n  webkitScrollbar: {\n    width: 0 /* Remove scrollbar space */,\n    background: 'transparent' /* Optional: just make scrollbar invisible */\n  },\n  /* Optional: show position indicator in red */\n  webkitScrollbarThumb: {\n    background: '#FF0000'\n  }\n}))\n\nconst RoomsList = props => {\n  const history = useHistory()\n  useEffect(() => {\n    props.getAllRooms()\n  }, [])\n  const classes = useStyles()\n\n  return (\n    <Card className={classes.roomsList}>\n      <CardContent color='secondary' className={classes.listHeading}>\n        <Typography variant='h5'>{props.heading}</Typography>\n      </CardContent>\n      <CardContent className={classes.listWrapper}>\n      <div className={classes.list}>\n        {props.rooms.map(room => (\n          <ChatRoomCard key={room.id} room={room} invite={props.heading==\"Your Invites\"} />\n        ))}\n      </div>\n      </CardContent>\n    </Card>\n  )\n}\n\nconst mapStateToprops = state => {\n  return {\n    user: state.auth.user,\n    roomsCreated: state.room.roomsCreated,\n    roomsInvited: state.room.roomsInvited\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    createChatRoom: (data, handleSuccess) => {\n      return dispatch(createChatRoom(data, handleSuccess))\n    },\n    getAllRooms: () => {\n      return dispatch(getAllRooms())\n    }\n  }\n}\n\nexport default withRouter(\n  connect(mapStateToprops, mapDispatchToprops)(RoomsList)\n)\n","import {\n  IconButton,\n  InputAdornment,\n  Modal,\n  SvgIcon,\n  TextField\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport Fade from '@material-ui/core/Fade'\nimport { connect } from 'react-redux'\nimport SendIcon from '@material-ui/icons/Send'\nimport rooms from '../../views/rooms'\nimport { useState } from 'react'\nimport { updateRoomUsers } from '../../actions/chatRoomAction'\nimport toast, { Toaster } from 'react-hot-toast'\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: theme.palette.secondary.main,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  textField: {}\n}))\n\nconst AddUserModal = props => {\n  const classes = useStyles()\n  const { show, room, onClose, label = 'Add Participant', ...restProps } = props\n  const [email, setEmail] = useState('')\n  function handleEmailSend () {\n    const data = {\n      \"email\": email\n    }\n    props.updateRoomUsers(data, props.room.id, handleSuccess)\n  }\n\n  function handleSuccess () {\n    toast.success('Added user')\n    setEmail('')\n  }\n\n  function handleEmailChange (event) {\n    setEmail(event.target.value)\n  }\n  return (\n    <Modal\n      aria-labelledby='transition-modal-title'\n      aria-describedby='transition-modal-description'\n      className={classes.modal}\n      open={show}\n      centered\n      onClose={onClose}\n    >\n      <Fade in={show}>\n        <div className={classes.paper}>\n        <Toaster />\n          <h2 id='transition-modal-title'>{props.room.room_name}</h2>\n          <div id='transition-modal-description'>\n            <TextField\n              color='secondary'\n              className={classes.textfield}\n              onChange={handleEmailChange}\n              value={email}\n              name='email'\n              variant='outlined'\n              autoComplete={false}\n              label=''\n              placeholder='Enter user email'\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position='end'>\n                    <IconButton  onClick={handleEmailSend}>\n                      <SvgIcon>\n                        <SendIcon />\n                      </SvgIcon>\n                    </IconButton>\n                  </InputAdornment>\n                )\n              }}\n            />\n          </div>\n        </div>\n      </Fade>\n    </Modal>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentRoom: state.room.currentRoom\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    updateRoomUsers: (data, id, handleSuccess) => {\n      return dispatch(updateRoomUsers(data, id, handleSuccess))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToprops)(AddUserModal)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory, withRouter } from 'react-router-dom'\nimport { Button, Typography } from '@material-ui/core'\nimport { createChatRoom, getAllRooms } from '../../actions/chatRoomAction'\nimport { makeStyles } from '@material-ui/styles'\nimport RoomsList from '../rooms/roomsList'\n\nconst useStyles = makeStyles(theme => ({\n  roomDetailsDiv: {\n    width: '100%',\n    height: '60%'\n  },\n  roomList: {\n    height: '100%',\n    width: '100%',\n    display: 'grid',\n    justifyItems: 'center',\n    [theme.breakpoints.down('xs')]: {\n      display: 'none'\n    }\n  },\n  title: {\n    textAlign: 'center'\n  }\n}))\n\nconst RoomDetails = props => {\n  const history = useHistory()\n  useEffect(() => {\n    props.getAllRooms()\n  }, [])\n  const classes = useStyles()\n\n  return (\n    <div className={classes.roomDetailsDiv}>\n      <div className={classes.roomList}>\n        <RoomsList\n          heading='Your rooms'\n          rooms={props.roomsCreated.slice(0, 2)}\n        />\n        <RoomsList\n          heading='Your Invites'\n          rooms={props.roomsInvited.slice(0, 2)}\n        />\n      </div>\n      <Typography variant='h6' className={classes.title}>\n        <Button onClick={() => history.push('/rooms')}>View All Rooms</Button>\n      </Typography>\n    </div>\n  )\n}\n\nconst mapStateToprops = state => {\n  return {\n    user: state.auth.user,\n    roomsCreated: state.room.roomsCreated,\n    roomsInvited: state.room.roomsInvited\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    createChatRoom: (data, handleSuccess) => {\n      return dispatch(createChatRoom(data, handleSuccess))\n    },\n    getAllRooms: () => {\n      return dispatch(getAllRooms())\n    }\n  }\n}\n\nexport default withRouter(\n  connect(mapStateToprops, mapDispatchToprops)(RoomDetails)\n)\n","import { Button, Card, Grid, Link, Paper } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport React, { Component, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect, useHistory } from 'react-router'\nimport { logoutUser } from '../actions/authAction'\nimport { getAllRooms } from '../actions/chatRoomAction'\nimport RoomDetails from '../components/homeComponents/roomDetails'\nimport RoomsList from '../components/rooms/roomsList'\n\nconst useStyles = makeStyles(theme => ({\n  Rooms: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    justifyItems: 'center',\n    padding: theme.spacing(2),\n    alignItems: 'center',\n    position: 'relative',\n    height: '100%',\n    [theme.breakpoints.down('xs')]: {\n      gridAutoFlow: 'row'\n    }\n  }\n}))\n\nconst Rooms = props => {\n  useEffect(() => {\n    props.getAllRooms()\n  }, [])\n  const classes = useStyles()\n  return (\n    <Grid className={classes.Rooms}>\n      <RoomsList rooms={props.roomsCreated} heading='Your Rooms' />\n      <RoomsList rooms={props.roomsInvited} heading='Your Invites' />\n    </Grid>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user,\n    roomsCreated: state.room.roomsCreated,\n    roomsInvited: state.room.roomsInvited\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllRooms: () => {\n      return dispatch(getAllRooms())\n    }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Rooms)\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4zM14 13h-3v3H9v-3H6v-2h3V8h2v3h3v2z\"\n}), 'VideoCall');\n\nexports.default = _default;","import React, { Component, useEffect, useState } from 'react'\nimport { connect, useSelector } from 'react-redux'\nimport { Link, useHistory, withRouter } from 'react-router-dom'\nimport {\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  Paper,\n  StepLabel,\n  TextField,\n  Typography,\n  ListItemText,\n  List,\n  ListItem,\n  Chip,\n  CardHeader,\n  CardActions\n} from '@material-ui/core'\nimport AddUserModal from '../common/addUser'\nimport {\n  createChatRoom,\n  getAllRooms,\n  getRoomDetails\n} from '../../actions/chatRoomAction'\nimport { makeStyles } from '@material-ui/styles'\nimport VideoCallIcon from '@material-ui/icons/VideoCall'\nimport PersonAddIcon from '@material-ui/icons/PersonAdd'\nimport { getModifiedDate } from '../../helpers/helperFunctions'\n\nconst useStyles = makeStyles(theme => ({\n  roomDataDiv: {\n    width: '100%',\n    display: 'grid',\n    justifyItems: 'center',\n    alignItems: 'center'\n  }\n}))\n\nconst RoomData = props => {\n  const history = useHistory()\n  useEffect(() => {\n    // props.getRoomDetails()\n  }, [])\n  const classes = useStyles()\n  const [showAddUserModal, setShowAddUserModal] = useState(false)\n  const currentRoom = useSelector(state => state.room.currentRoom)\n  function openRoom () {\n    history.push(`/video/${currentRoom.id}/${currentRoom.sharing_id}`)\n  }\n  return (\n    <div className={classes.roomDataDiv}>\n      <Card style={{ textAlign: 'center', maxWidth: '60%' }}>\n        <CardHeader\n          // avatar={\n          //   <Avatar aria-label=\"recipe\" className={classes.avatar}>\n          //     R\n          //   </Avatar>\n          // }\n          // action={\n          //   <IconButton aria-label=\"settings\">\n          //     <MoreVertIcon />\n          //   </IconButton>\n          // }\n          title={currentRoom && currentRoom.room_name}\n          subheader={getModifiedDate(currentRoom.created_on)}\n        />\n        {/* <CardHeader color='secondary' className={classes.roomName}>\n          <Typography style={{ textAlign: 'center' }} variant='h4'>\n            {currentRoom && currentRoom.room_name}\n          </Typography>\n        </CardHeader> */}\n        <CardContent>\n          <Typography style={{ textAlign: 'center' }} variant='h5'>\n            Admin\n          </Typography>\n          <Chip\n            size='medium'\n            color='default'\n            label={`${currentRoom.id && currentRoom.created_by.email}`}\n          />\n        </CardContent>\n        <CardContent>\n          <Typography style={{ textAlign: 'center' }} variant='h5'>\n            All Users\n          </Typography>\n          {currentRoom.id &&\n            currentRoom.all_users.map(user => (\n              <Chip\n                style={{ margin: '0.2rem' }}\n                size='medium'\n                color='secondary'\n                label={`${user.email}`}\n              />\n            ))}\n        </CardContent>\n        <CardActions style={{ justifyContent: 'center' }}>\n          {currentRoom.id && currentRoom.created_by.pk == props.user.pk && (\n            <Button\n              variant='contained'\n              color='secondary'\n              className={classes.createRoomButton}\n              startIcon={<PersonAddIcon />}\n              onClick={() => setShowAddUserModal(true)}\n            >\n              Add User\n            </Button>\n          )}\n          {props.meeting && (\n            <Button\n              variant='contained'\n              color='secondary'\n              className={classes.createRoomButton}\n              startIcon={<VideoCallIcon />}\n              onClick={openRoom}\n            >\n              Join Meeting\n            </Button>\n          )}\n          {/* </ListItem> */}\n          {showAddUserModal && (\n            <AddUserModal\n              room={currentRoom}\n              show={showAddUserModal}\n              onClose={() => setShowAddUserModal(false)}\n            />\n          )}\n        </CardActions>\n      </Card>\n    </div>\n  )\n}\n\nconst mapStateToprops = state => {\n  return {\n    user: state.auth.user,\n    currentRoom: state.room.currentRoom\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    createChatRoom: (data, handleSuccess) => {\n      return dispatch(createChatRoom(data, handleSuccess))\n    },\n    getRoomDetails: () => {\n      return dispatch(getRoomDetails())\n    }\n  }\n}\n\nexport default withRouter(\n  connect(mapStateToprops, mapDispatchToprops)(RoomData)\n)\n","import store from '../store'\n\nclass WebSocketService {\n  static instance = null\n  stream = null\n  token = null\n  config  = null\n  callbacks = {}\n\n  static getInstance () {\n    if (!WebSocketService.instance) {\n      WebSocketService.instance = new WebSocketService()\n    }\n    return WebSocketService.instance\n  }\n\n  constructor () {\n    this.socketRef = null\n  }\n\n  connect (chatroom_url) {\n    this.socketRef = new WebSocket(chatroom_url)\n    this.socketRef.onopen = () => {\n      console.log('websocket open')\n    }\n    this.socketRef.onmessage = e => {\n      this.socketNewMessage(e.data)\n    }\n    this.socketRef.onerror = e => {\n      console.log(e)\n    }\n    this.socketRef.onclose = () => {\n      console.log('websockets closed lets reopen')\n    }\n  }\n\n  close () {\n    this.socketRef && this.socketRef.close()\n  }\n\n  on (action, func) {\n    this.callbacks[action] = func;\n  }\n\n  socketNewMessage (data) {\n    const parsedData = JSON.parse(data)\n    var peerusername = parsedData['peer']\n    var action = parsedData['action']\n    var message = parsedData['message']\n    if(Object.keys(this.callbacks).length == 0){\n        return;\n    }\n    this.callbacks[action](message);\n  }\n\n  getSteam () {\n    return this.stream;\n  }\n\n  sendMessage (data) {\n    try {\n      this.socketRef.send(JSON.stringify({ ...data }))\n    } catch (err) {\n      console.log(err.message)\n    }\n  }\n\n  sendSignal(action, message) {\n    try {\n      this.waitForSocketConnection(\n        function () {\n          var jsonStr = JSON.stringify({\n            peer: store.getState().auth.user,\n            action: action,\n            message: message\n          })\n      \n          this.socketRef.send(jsonStr)\n        }.bind(this),\n        1000\n      );\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  state () {\n    return this.socketRef.readyState\n  }\n\n  waitForSocketConnection (callback) {\n    var self = this\n    setTimeout(function () {\n      // Check if websocket state is OPEN\n      if (WebSocketInstance.state() === 1) {\n        callback()\n        return\n      } else {\n        self.waitForSocketConnection(callback)\n      }\n    }, 100) // wait 100 milisecond for the connection...\n  }\n}\n\nconst WebSocketInstance = WebSocketService.getInstance()\n\nexport default WebSocketInstance\n","import React, { useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport { Grid, ListItemText, List, ListItem } from '@material-ui/core'\nimport { getAllMessages } from '../../actions/chatRoomAction'\nimport TimeAgo from 'react-timeago'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles(theme => ({\n  roomChatDiv: {\n    height: '100%'\n  },\n  textfield: {\n    position: 'absolute',\n    bottom: '0px',\n    width: '100%',\n    backgroundColor: theme.palette.primary.main\n  },\n  chatBoxMessages: {\n    padding: '2px',\n    position: 'relative',\n    overflow: 'hidden',\n    height: '85%',\n    width: '100%'\n  },\n  messageList: {\n    maxHeight: '100%',\n    top: 0,\n    left: 0,\n    right: -theme.spacing(2),\n    position: 'absolute',\n    overflowY: 'scroll',\n    [theme.breakpoints.down('md')]: {\n      right: 0\n    }\n  }\n}))\n\nconst ChatBox = React.memo(() => {\n  const messageBox = useRef()\n  const classes = useStyles()\n  const user = useSelector(state => state.auth.user)\n  const messages = useSelector(state => state.room.messages)\n  const dispatch = useDispatch()\n  const { id } = useParams()\n  useEffect(() => {\n    dispatch(getAllMessages(id))\n  }, [])\n  useEffect(() => {\n    if (messageBox.current) {\n      messageBox.current.scrollTop = messageBox.current.scrollHeight\n    }\n  }, [messageBox.current, messages.length])\n  return (\n    <Grid className={classes.chatBoxMessages}>\n      <List ref={messageBox} className={classes.messageList}>\n        {messages.map(msg => (\n          <ListItem key={msg.id}>\n            <Grid container>\n              <Grid item xs={12}>\n                <ListItemText\n                  align={msg.user.pk == user.pk ? 'right' : 'left'}\n                  disableTypography\n                  secondary={\n                    <div>\n                      <span style={{ fontWeight: 'bolder' }}>\n                        {msg.user.first_name}\n                      </span>{' '}\n                      <span\n                        style={{\n                          fontWeight: 'lighter',\n                          fontSize: 'small'\n                        }}\n                      >\n                        <TimeAgo date={msg.created_on} />\n                      </span>\n                    </div>\n                  }\n                ></ListItemText>\n              </Grid>\n              <Grid item xs={12}>\n                <ListItemText\n                  align={msg.user.pk == user.pk ? 'right' : 'left'}\n                  primary={msg.message}\n                ></ListItemText>\n              </Grid>\n            </Grid>\n          </ListItem>\n        ))}\n      </List>\n    </Grid>\n  )\n})\n\nexport default ChatBox\n","export default function defaultFormatter(value, _unit, suffix) {\n  const unit = value !== 1 ? _unit + 's' : _unit;\n  return value + ' ' + unit + ' ' + suffix;\n}","export default function dateParser(date) {\n  const parsed = new Date(date);\n\n  if (!Number.isNaN(parsed.valueOf())) {\n    return parsed;\n  }\n\n  const parts = String(date).match(/\\d+/g);\n\n  if (parts == null || parts.length <= 2) {\n    return parsed;\n  } else {\n    const [firstP, secondP, ...restPs] = parts.map(x => parseInt(x));\n    const correctedParts = [firstP, secondP - 1, ...restPs];\n    const isoDate = new Date(Date.UTC(...correctedParts));\n    return isoDate;\n  }\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { useCallback, useEffect, useState } from 'react';\nimport defaultFormatter from './defaultFormatter';\nimport dateParser from './dateParser';\n// Just some simple constants for readability\nconst MINUTE = 60;\nconst HOUR = MINUTE * 60;\nconst DAY = HOUR * 24;\nconst WEEK = DAY * 7;\nconst MONTH = DAY * 30;\nconst YEAR = DAY * 365;\nexport default function TimeAgo({\n  date,\n  formatter = defaultFormatter,\n  component = 'time',\n  live = true,\n  minPeriod = 0,\n  maxPeriod = WEEK,\n  title,\n  now = () => Date.now(),\n  ...passDownProps\n}) {\n  const forceUpdate = useUpdate();\n  useEffect(() => {\n    if (!live) {\n      return;\n    }\n\n    let timeoutId;\n\n    const tick = refresh => {\n      const then = dateParser(date).valueOf();\n\n      if (!then) {\n        console.warn('[react-timeago] Invalid Date provided');\n        return;\n      }\n\n      const timeNow = now();\n      const seconds = Math.round(Math.abs(timeNow - then) / 1000);\n      const unboundPeriod = seconds < MINUTE ? 1000 : seconds < HOUR ? 1000 * MINUTE : seconds < DAY ? 1000 * HOUR : 1000 * WEEK;\n      const period = Math.min(Math.max(unboundPeriod, minPeriod * 1000), maxPeriod * 1000);\n\n      if (period) {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n\n        timeoutId = setTimeout(tick, period);\n      }\n\n      if (!refresh) {\n        forceUpdate();\n      }\n    };\n\n    tick(true);\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [date, forceUpdate, live, maxPeriod, minPeriod, now]);\n  const Komponent = component;\n  const then = dateParser(date).valueOf();\n\n  if (!then) {\n    return null;\n  }\n\n  const timeNow = now();\n  const seconds = Math.round(Math.abs(timeNow - then) / 1000);\n  const suffix = then < timeNow ? 'ago' : 'from now';\n  const [value, unit] = seconds < MINUTE ? [Math.round(seconds), 'second'] : seconds < HOUR ? [Math.round(seconds / MINUTE), 'minute'] : seconds < DAY ? [Math.round(seconds / HOUR), 'hour'] : seconds < WEEK ? [Math.round(seconds / DAY), 'day'] : seconds < MONTH ? [Math.round(seconds / WEEK), 'week'] : seconds < YEAR ? [Math.round(seconds / MONTH), 'month'] : [Math.round(seconds / YEAR), 'year'];\n  const passDownTitle = typeof title === 'undefined' ? typeof date === 'string' ? date : dateParser(date).toISOString().substr(0, 16).replace('T', ' ') : title;\n  const spreadProps = Komponent === 'time' ? { ...passDownProps,\n    dateTime: dateParser(date).toISOString()\n  } : passDownProps;\n  const nextFormatter = defaultFormatter.bind(null, value, unit, suffix);\n  return /*#__PURE__*/React.createElement(Komponent, _extends({}, spreadProps, {\n    title: passDownTitle\n  }), formatter(value, unit, suffix, then, nextFormatter, now));\n}\n\nfunction useUpdate() {\n  const [_, setCount] = useState(0);\n  return useCallback(() => {\n    setCount(num => num + 1);\n  }, []);\n}","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport {\n  Card,\n  CardContent,\n  IconButton,\n  InputAdornment,\n  SvgIcon,\n  TextField,\n  Typography\n} from '@material-ui/core'\nimport {\n  createChatRoom,\n  getAllMessages,\n  addMessage\n} from '../../actions/chatRoomAction'\nimport WebSocketInstance from '../../websocket/socket'\nimport { makeStyles } from '@material-ui/styles'\nimport SendIcon from '@material-ui/icons/Send'\nimport ChatBox from '../common/chatBox'\n\nconst useStyles = makeStyles(theme => ({\n  roomChatDiv: {\n    position: 'relative',\n    height: '90%',\n    backgroundColor: theme.palette.background.default,\n    [theme.breakpoints.down('md')]: {\n      position: 'absolute',\n      width: '100%',\n      bottom: 0\n    }\n  },\n  textfield: {\n    position: 'absolute',\n    bottom: '0px',\n    width: '100%',\n    backgroundColor: theme.palette.primary.main\n  },\n  chatHeading: {\n    top: '0px',\n    backgroundColor: theme.palette.primary.main\n  },\n  chatBoxMessages: {\n    padding: '2px',\n    position: 'relative',\n    overflow: 'hidden',\n    height: '82%',\n    width: '100%',\n    [theme.breakpoints.down('xs')]: {\n      height: '75%'\n    }\n  },\n  messageList: {\n    maxHeight: '100%',\n    top: 0,\n    left: 0,\n    right: -theme.spacing(2),\n    position: 'absolute',\n    overflowY: 'scroll'\n  }\n}))\n\nconst RoomChat = props => {\n  useEffect(() => {\n    props.getAllMessages(props.match.params.id)\n    return () => {\n      WebSocketInstance.close()\n    }\n  }, [])\n  const { currentRoom } = props\n  useEffect(() => {\n    if (Boolean(WebSocketInstance) && WebSocketInstance.socketRef) {\n      WebSocketInstance.close()\n    }\n    WebSocketInstance.connect(\n      `${window.location.protocol == 'http:' ? 'ws' : 'wss'}://${\n        window.location.host.includes('localhost:')\n          ? 'localhost:8000'\n          : window.location.hostname\n      }/ws/chat/${props.currentRoom.sharing_id}`\n    )\n    //   setWebSocket(WebSocketInstance)\n    WebSocketInstance.sendSignal('join room', {\n      video: false,\n      audio: false,\n      onlyChat: true\n    })\n    WebSocketInstance.on('message received', payload => {\n      payload.user = JSON.parse(payload.user)\n      props.addMessage(payload)\n    })\n  }, [currentRoom.id])\n  const classes = useStyles()\n  const [message, setMessage] = useState('')\n  function handleMessageSend () {\n    if (message != '') WebSocketInstance.sendSignal('send_message', message)\n    setMessage('')\n  }\n\n  function handleKeyPress (event) {\n    if (event.key === 'Enter') {\n      handleMessageSend()\n    }\n  }\n\n  function handleMessageChange (event) {\n    setMessage(event.target.value)\n  }\n\n  return (\n    <Card className={classes.roomChatDiv}>\n      <CardContent color='secondary' className={classes.chatHeading}>\n        <Typography variant='h5'>Chat</Typography>\n      </CardContent>\n      <ChatBox />\n      <TextField\n        color='secondary'\n        className={classes.textfield}\n        onChange={handleMessageChange}\n        onKeyPress={handleKeyPress}\n        value={message}\n        name='message'\n        variant='outlined'\n        autoComplete={false}\n        label=''\n        placeholder='Enter your msg'\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position='end'>\n              <IconButton onClick={handleMessageSend}>\n                <SvgIcon>\n                  <SendIcon />\n                </SvgIcon>\n              </IconButton>\n            </InputAdornment>\n          )\n        }}\n      />\n    </Card>\n  )\n}\n\nconst mapStateToprops = state => {\n  return {\n    user: state.auth.user,\n    currentRoom: state.room.currentRoom,\n    messages: state.room.messages\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    createChatRoom: (data, handleSuccess) => {\n      return dispatch(createChatRoom(data, handleSuccess))\n    },\n    getAllMessages: (id, callback) => {\n      return dispatch(getAllMessages(id, callback))\n    },\n    addMessage: message => {\n      return dispatch(addMessage(message))\n    }\n  }\n}\n\nexport default withRouter(\n  connect(mapStateToprops, mapDispatchToprops)(RoomChat)\n)\n","import { Modal } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport Fade from '@material-ui/core/Fade'\nimport { connect } from 'react-redux'\nimport { updateRoomUsers } from '../../actions/chatRoomAction'\nimport RoomData from '../rooms/roomData'\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: theme.palette.secondary.main,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  textField: {}\n}))\n\nconst RoomDetailsModal = props => {\n  const classes = useStyles()\n  const { show, onClose, label = 'Room Details', ...restProps } = props\n  return (\n    <Modal\n      aria-labelledby='transition-modal-title'\n      aria-describedby='transition-modal-description'\n      className={classes.modal}\n      open={show}\n      centered\n      onClose={onClose}\n    >\n      <Fade in={show}>\n        <RoomData meeting={props.meeting} />\n      </Fade>\n    </Modal>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentRoom: state.room.currentRoom\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    updateRoomUsers: (data, id, handleSuccess) => {\n      return dispatch(updateRoomUsers(data, id, handleSuccess))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToprops)(RoomDetailsModal)\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import { Button, Grid } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { logoutUser } from '../actions/authAction'\nimport { getRoomDetails } from '../actions/chatRoomAction'\nimport RoomChat from '../components/rooms/roomChat'\nimport RoomData from '../components/rooms/roomData'\nimport RoomDetailsModal from '../components/common/roomDataModal'\n\nconst useStyles = makeStyles(theme => ({\n  Room: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    padding: theme.spacing(2),\n    height: '100%',\n    position: 'relative',\n    gridTemplateColumns: 'repeat(2, minmax(0, 1fr))',\n    [theme.breakpoints.down('md')]: {\n      gridAutoFlow: 'row',\n      gridTemplateColumns: 'repeat(1, minmax(0, 1fr))'\n    }\n  },\n  roomDetailsButton: {\n    display: 'none',\n    height: 'max-content',\n    [theme.breakpoints.down('md')]: {\n      display: 'block'\n    }\n  },\n  roomDetailsDiv: {\n    display: 'grid',\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  }\n}))\n\nconst Room = props => {\n  const [showRoomDetailModal, setShowRoomDetailModal] = useState(false)\n  useEffect(() => {\n    props.getRoomDetails(props.match.params.id)\n  }, [])\n  const classes = useStyles()\n  return (\n    <Grid container className={classes.Room}>\n      <Button\n        variant='contained'\n        color='secondary'\n        className={classes.roomDetailsButton}\n        onClick={() => setShowRoomDetailModal(true)}\n      >\n        View Details\n      </Button>\n      {showRoomDetailModal && (\n        <RoomDetailsModal\n          show={showRoomDetailModal}\n          meeting={true}\n          onClose={() => setShowRoomDetailModal(false)}\n        />\n      )}\n      <div className={classes.roomDetailsDiv}>\n        <RoomData meeting={true} />\n      </div>\n      <RoomChat />\n    </Grid>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logoutUser: () => {\n      return dispatch(logoutUser())\n    },\n    getRoomDetails: (id, callback) => {\n      return dispatch(getRoomDetails(id, callback))\n    }\n  }\n}\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Room))\n"],"sourceRoot":""}