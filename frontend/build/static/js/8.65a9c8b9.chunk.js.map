{"version":3,"sources":["components/common/chatRoomCard.js","components/rooms/roomsList.js","components/common/addUser.js","components/homeComponents/roomDetails.js","views/rooms.js"],"names":["useStyles","makeStyles","theme","Card","backgroundColor","palette","secondary","main","color","contrastText","margin","spacing","width","cursor","justifyContent","roomCardMainDiv","height","display","alignItems","justifyItems","icons","ChatRoomCard","props","history","useHistory","classes","useState","showAddUserModal","setShowAddUserModal","className","onClick","push","room","id","CardActions","Typography","gutterBottom","room_name","invite","Chip","label","created_by","first_name","style","marginInlineStart","IconButton","e","stopPropagation","sharing_id","show","onClose","roomsList","overflow","paddingBottom","background","gridTemplateRows","list","overflowY","maxHeight","window","screen","availHeight","position","breakpoints","down","listHeading","top","primary","marginLeft","listWrapper","webkitScrollbar","webkitScrollbarThumb","withRouter","connect","state","user","auth","roomsCreated","roomsInvited","dispatch","createChatRoom","data","handleSuccess","getAllRooms","useEffect","CardContent","variant","heading","rooms","map","modal","paper","border","boxShadow","shadows","padding","textField","currentRoom","updateRoomUsers","email","setEmail","toast","success","open","centered","in","textfield","onChange","event","target","value","name","autoComplete","placeholder","InputProps","endAdornment","roomDetailsDiv","roomList","title","textAlign","slice","Rooms","gridAutoFlow"],"mappings":"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","file":"static/js/8.65a9c8b9.chunk.js","sourcesContent":["import {\n  Card,\n  CardActions,\n  Chip,\n  IconButton,\n  Typography\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport React, { Component, useEffect, useState } from 'react'\nimport AddUserModal from './addUser'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport LaunchIcon from '@material-ui/icons/Launch'\nimport PersonAddIcon from '@material-ui/icons/PersonAdd'\n\nconst useStyles = makeStyles(theme => ({\n  Card: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    margin: theme.spacing(0.4),\n    width: '80%',\n    cursor: 'pointer',\n    justifyContent: 'space-between'\n  },\n  roomCardMainDiv: {\n    height: '100%',\n    width: '100%',\n    display: 'grid',\n    alignItems: 'center',\n    justifyItems: 'center'\n  },\n  icons: {\n    color: theme.palette.secondary.contrastText,\n  }\n}))\n\nconst ChatRoomCard = props => {\n  const history = useHistory()\n  const classes = useStyles()\n  const [showAddUserModal, setShowAddUserModal] = useState(false)\n\n  function openRoom (e) {\n    e.stopPropagation()\n    history.push(`/video/${props.room.id}/${props.room.sharing_id}`)\n  }\n\n  function handleAddUser (e) {\n    e.stopPropagation()\n    setShowAddUserModal(true)\n  }\n\n  return (\n    <div className={classes.roomCardMainDiv}>\n      <Card\n        className={classes.Card}\n        onClick={() => history.push(`/room/${props.room.id}`)}\n      >\n        <CardActions>\n          <Typography onClick={() => setShowAddUserModal(true)} gutterBottom>\n            {props.room && props.room.room_name}\n          </Typography>\n          {props.invite && (\n            <Chip label={`creater : ${props.room.created_by.first_name}`} />\n          )}\n          <div style={{ marginInlineStart: 'auto' }}>\n            {!props.invite && (\n              <IconButton onClick={handleAddUser}>\n                <PersonAddIcon className={classes.icons} />\n              </IconButton>\n            )}\n            <IconButton onClick={openRoom}>\n              <LaunchIcon className={classes.icons} />\n            </IconButton>\n          </div>\n        </CardActions>\n      </Card>\n      {showAddUserModal && (\n        <AddUserModal\n          room={props.room}\n          onClick={e => e.stopPropagation()}\n          show={showAddUserModal}\n          onClose={() => setShowAddUserModal(false)}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default ChatRoomCard\n","import React, { Component, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory, withRouter } from 'react-router-dom'\nimport {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Grid,\n  Paper,\n  StepLabel,\n  TextField,\n  Typography\n} from '@material-ui/core'\nimport { createChatRoom, getAllRooms } from '../../actions/chatRoomAction'\nimport ChatRoomCard from '../common/chatRoomCard'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles(theme => ({\n  roomsList: {\n    width: '80%',\n    display: 'grid',\n    justifyItems: 'center',\n    overflow: 'hidden',\n    paddingBottom: theme.spacing(1),\n    backgroundColor: theme.palette.background,\n    gridTemplateRows: 'min-content',\n    height: '80%'\n  },\n  list: {\n    overflowY: 'scroll',\n    maxHeight: window.screen.availHeight / 1.3,\n    width: '100%',\n    display: 'grid',\n    justifyItems: 'center',\n    position: 'absolute',\n    [theme.breakpoints.down('xs')]: {\n      maxHeight: window.screen.availHeight / 2,\n    }\n  },\n  listHeading: {\n    top: 0,\n    backgroundColor: theme.palette.primary.main,\n    width: '100%',\n    height: '50%',\n    marginLeft: '10%'\n  },\n  listWrapper: {\n    position: 'relative',\n    width: '100%',\n    height: '90%',\n    overflow: 'hidden',\n    display: 'grid'\n  },\n  webkitScrollbar: {\n    width: 0 /* Remove scrollbar space */,\n    background: 'transparent' /* Optional: just make scrollbar invisible */\n  },\n  /* Optional: show position indicator in red */\n  webkitScrollbarThumb: {\n    background: '#FF0000'\n  }\n}))\n\nconst RoomsList = props => {\n  const history = useHistory()\n  useEffect(() => {\n    props.getAllRooms()\n  }, [])\n  const classes = useStyles()\n\n  return (\n    <Card className={classes.roomsList}>\n      <CardContent color='secondary' className={classes.listHeading}>\n        <Typography variant='h5'>{props.heading}</Typography>\n      </CardContent>\n      <CardContent className={classes.listWrapper}>\n      <div className={classes.list}>\n        {props.rooms.map(room => (\n          <ChatRoomCard key={room.id} room={room} invite={props.heading==\"Your Invites\"} />\n        ))}\n      </div>\n      </CardContent>\n    </Card>\n  )\n}\n\nconst mapStateToprops = state => {\n  return {\n    user: state.auth.user,\n    roomsCreated: state.room.roomsCreated,\n    roomsInvited: state.room.roomsInvited\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    createChatRoom: (data, handleSuccess) => {\n      return dispatch(createChatRoom(data, handleSuccess))\n    },\n    getAllRooms: () => {\n      return dispatch(getAllRooms())\n    }\n  }\n}\n\nexport default withRouter(\n  connect(mapStateToprops, mapDispatchToprops)(RoomsList)\n)\n","import {\n  IconButton,\n  InputAdornment,\n  Modal,\n  SvgIcon,\n  TextField\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport Fade from '@material-ui/core/Fade'\nimport { connect } from 'react-redux'\nimport SendIcon from '@material-ui/icons/Send'\nimport rooms from '../../views/rooms'\nimport { useState } from 'react'\nimport { updateRoomUsers } from '../../actions/chatRoomAction'\nimport toast, { Toaster } from 'react-hot-toast'\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: theme.palette.secondary.main,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  textField: {}\n}))\n\nconst AddUserModal = props => {\n  const classes = useStyles()\n  const { show, room, onClose, label = 'Add Participant', ...restProps } = props\n  const [email, setEmail] = useState('')\n  function handleEmailSend () {\n    const data = {\n      \"email\": email\n    }\n    props.updateRoomUsers(data, props.room.id, handleSuccess)\n  }\n\n  function handleSuccess () {\n    toast.success('Added user')\n    setEmail('')\n  }\n\n  function handleEmailChange (event) {\n    setEmail(event.target.value)\n  }\n  return (\n    <Modal\n      aria-labelledby='transition-modal-title'\n      aria-describedby='transition-modal-description'\n      className={classes.modal}\n      open={show}\n      centered\n      onClose={onClose}\n    >\n      <Fade in={show}>\n        <div className={classes.paper}>\n        <Toaster />\n          <h2 id='transition-modal-title'>{props.room.room_name}</h2>\n          <div id='transition-modal-description'>\n            <TextField\n              color='secondary'\n              className={classes.textfield}\n              onChange={handleEmailChange}\n              value={email}\n              name='email'\n              variant='outlined'\n              autoComplete={false}\n              label=''\n              placeholder='Enter user email'\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position='end'>\n                    <IconButton  onClick={handleEmailSend}>\n                      <SvgIcon>\n                        <SendIcon />\n                      </SvgIcon>\n                    </IconButton>\n                  </InputAdornment>\n                )\n              }}\n            />\n          </div>\n        </div>\n      </Fade>\n    </Modal>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentRoom: state.room.currentRoom\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    updateRoomUsers: (data, id, handleSuccess) => {\n      return dispatch(updateRoomUsers(data, id, handleSuccess))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToprops)(AddUserModal)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory, withRouter } from 'react-router-dom'\nimport { Button, Typography } from '@material-ui/core'\nimport { createChatRoom, getAllRooms } from '../../actions/chatRoomAction'\nimport { makeStyles } from '@material-ui/styles'\nimport RoomsList from '../rooms/roomsList'\n\nconst useStyles = makeStyles(theme => ({\n  roomDetailsDiv: {\n    width: '100%',\n    height: '60%'\n  },\n  roomList: {\n    height: '100%',\n    width: '100%',\n    display: 'grid',\n    justifyItems: 'center',\n    [theme.breakpoints.down('xs')]: {\n      display: 'none'\n    }\n  },\n  title: {\n    textAlign: 'center'\n  }\n}))\n\nconst RoomDetails = props => {\n  const history = useHistory()\n  useEffect(() => {\n    props.getAllRooms()\n  }, [])\n  const classes = useStyles()\n\n  return (\n    <div className={classes.roomDetailsDiv}>\n      <div className={classes.roomList}>\n        <RoomsList\n          heading='Your rooms'\n          rooms={props.roomsCreated.slice(0, 2)}\n        />\n        <RoomsList\n          heading='Your Invites'\n          rooms={props.roomsInvited.slice(0, 2)}\n        />\n      </div>\n      <Typography variant='h6' className={classes.title}>\n        <Button onClick={() => history.push('/rooms')}>View All Rooms</Button>\n      </Typography>\n    </div>\n  )\n}\n\nconst mapStateToprops = state => {\n  return {\n    user: state.auth.user,\n    roomsCreated: state.room.roomsCreated,\n    roomsInvited: state.room.roomsInvited\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    createChatRoom: (data, handleSuccess) => {\n      return dispatch(createChatRoom(data, handleSuccess))\n    },\n    getAllRooms: () => {\n      return dispatch(getAllRooms())\n    }\n  }\n}\n\nexport default withRouter(\n  connect(mapStateToprops, mapDispatchToprops)(RoomDetails)\n)\n","import { Button, Card, Grid, Link, Paper } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport React, { Component, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect, useHistory } from 'react-router'\nimport { logoutUser } from '../actions/authAction'\nimport { getAllRooms } from '../actions/chatRoomAction'\nimport RoomDetails from '../components/homeComponents/roomDetails'\nimport RoomsList from '../components/rooms/roomsList'\n\nconst useStyles = makeStyles(theme => ({\n  Rooms: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    justifyItems: 'center',\n    padding: theme.spacing(2),\n    alignItems: 'center',\n    position: 'relative',\n    height: '100%',\n    [theme.breakpoints.down('xs')]: {\n      gridAutoFlow: 'row'\n    }\n  }\n}))\n\nconst Rooms = props => {\n  useEffect(() => {\n    props.getAllRooms()\n  }, [])\n  const classes = useStyles()\n  return (\n    <Grid className={classes.Rooms}>\n      <RoomsList rooms={props.roomsCreated} heading='Your Rooms' />\n      <RoomsList rooms={props.roomsInvited} heading='Your Invites' />\n    </Grid>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user,\n    roomsCreated: state.room.roomsCreated,\n    roomsInvited: state.room.roomsInvited\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllRooms: () => {\n      return dispatch(getAllRooms())\n    }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Rooms)\n"],"sourceRoot":""}