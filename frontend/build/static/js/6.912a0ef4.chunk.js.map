{"version":3,"sources":["components/video/videoOffDiv.js","components/video/videoPlayer.js","views/video.js"],"names":["useStyles","makeStyles","theme","videoOffDiv","overflow","objectFit","backgroundSize","backgroundColor","palette","secondary","main","display","alignItems","justifyItems","VideoOffDiv","props","useHistory","classes","dimensions","dimension","Math","sqrt","numpeers","Paper","className","style","width","height","video","Typography","variant","name","audio","gridContainer","justifyContent","breakpoints","down","flexDirection","paper","gridAutoFlow","boxShadow","userDetailDiv","position","userDiv","textAlign","padding","spacing","margin","chatRoom","chatRoomMainDiv","chatBox","zIndex","minWidth","maxHeight","top","bottom","right","left","chatBoxIntro","chatBoxMessages","actionButtons","marginLeft","marginRight","up","textfield","primary","Video","console","log","peer","ref","useRef","window","screen","availWidth","availHeight","useEffect","on","stream","current","srcObject","playsInline","autoPlay","videoConstraints","Room","React","memo","history","currentRoom","useSelector","state","room","useState","inLobby","setInLobby","pendingRequest","setPendingRequest","message","setMessage","auth","token","peers","setPeers","allMessages","setAllMessages","setWebSocket","setDimension","userVideo","localstream","mystream","setMystream","setVideo","chatBoxOpen","setChatBoxOpen","setAudio","roomExist","setRoomExists","peersRef","toggleChatBoxOpen","handleVideoToggle","getVideoTracks","enabled","WebSocketInstance","sendSignal","handleAudioToggle","getAudioTracks","d","getTracks","map","track","stop","close","data","id","match","params","sharing_id","code","JSON","stringify","getRoomDetails","created_by","myuser","pk","navigator","mediaDevices","getUserMedia","then","catch","err","toast","error","Boolean","socketRef","connect","location","protocol","host","includes","hostname","user","presentInUsers","all_users","indexOf","t","email","Button","color","onClick","toast_id","user_id","dismiss","icon","duration","payload","alert","push","users","allPeers","forEach","some","e","peerID","userToSignal","callerID","Peer","initiator","trickle","signal","createPeer","peerName","userID","caller","incomingSignal","addPeer","peerObj","find","p","destroy","filter","msgObj","msg","messages","first_name","value","newPeers","i","gutterBottom","length","muted","disabled","Grid","container","item","xs","IconButton","obj","chatBoxInput","TextField","onChange","event","target","autoComplete","label","placeholder","InputProps","endAdornment","InputAdornment","SvgIcon","getDisplayMedia","cursor","screenStream","withRouter","dispatch","handleSuccess","VideoView","Component","logoutUser"],"mappings":"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","file":"static/js/6.912a0ef4.chunk.js","sourcesContent":["import React, { Component, useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory, withRouter } from 'react-router-dom'\nimport {\n  Avatar,\n  Button,\n  Grid,\n  Paper,\n  StepLabel,\n  TextField,\n  Typography\n} from '@material-ui/core'\nimport { createChatRoom } from '../../actions/chatRoomAction'\nimport VideoCallIcon from '@material-ui/icons/VideoCall'\nimport { makeStyles } from '@material-ui/styles'\nimport MicIcon from '@material-ui/icons/Mic'\nimport MicOffIcon from '@material-ui/icons/MicOff'\n\nconst useStyles = makeStyles(theme => ({\n  videoOffDiv: {\n    overflow: 'hidden',\n    objectFit: 'fill',\n    backgroundSize: 'cover',\n    backgroundColor: theme.palette.secondary.main,\n    display: 'grid',\n    alignItems: 'center',\n    justifyItems: 'center'\n  }\n}))\nconst VideoOffDiv = props => {\n  const history = useHistory()\n  const classes = useStyles()\n  const dimensions = props.dimension / Math.sqrt(1 + props.numpeers)\n\n  return (\n    <Paper\n      className={classes.videoOffDiv}\n      style={{\n        width: dimensions,\n        height: dimensions,\n        display: props.video ? 'none' : ''\n      }}\n    >\n      {/* <Avatar color='inherit'> */}\n      <div>\n        <Typography variant='h5'>{props.name}</Typography>\n        {props.audio ? <MicIcon /> : <MicOffIcon />}\n      </div>\n      {/* </Avatar> */}\n    </Paper>\n  )\n}\n\nexport default VideoOffDiv\n","import {\n  Grid,\n  Typography,\n  Paper,\n  makeStyles,\n  Button,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  StepLabel,\n  IconButton\n} from '@material-ui/core'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { useSelector } from 'react-redux'\nimport { useHistory, withRouter } from 'react-router'\n// import io from \"socket.io-client\";\nimport Peer from 'simple-peer'\nimport { getRoomDetails } from '../../actions/chatRoomAction'\nimport toast, { Toaster } from 'react-hot-toast'\n// import styled from \"styled-components\";\nimport WebSocketInstance from '../../websocket/socket'\nimport VideocamIcon from '@material-ui/icons/Videocam'\nimport VideocamOffIcon from '@material-ui/icons/VideocamOff'\nimport MicIcon from '@material-ui/icons/Mic'\nimport MicOffIcon from '@material-ui/icons/MicOff'\nimport CallEndIcon from '@material-ui/icons/CallEnd'\nimport ChatIcon from '@material-ui/icons/Chat'\nimport SendIcon from '@material-ui/icons/Send'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport ScreenShareIcon from '@material-ui/icons/ScreenShare'\nimport VideoOffDiv from './videoOffDiv'\n\nconst useStyles = makeStyles(theme => ({\n  video: {\n    // width: '100%',\n    // height: '100%',\n    // height: window.screen.availHeight/1.2,\n    // width: window.screen.availWidth/1.2,\n    backgroundSize: 'cover',\n    objectFit: 'fill',\n    overflow: 'hidden'\n  },\n  gridContainer: {\n    justifyContent: 'center',\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column'\n    }\n  },\n  paper: {\n    // padding: '2px',\n    // border: '2px solid black',\n    // margin: '2px',\n    // gridTemplateColumns: '1fr 1fr',\n    display: 'grid',\n    justifyContent: 'space-around',\n    gridAutoFlow: 'column',\n    overflow: 'hidden',\n    height: '100%',\n    width: '100%',\n    boxShadow: 'none',\n    [theme.breakpoints.down('sm')]: {\n      gridAutoFlow: 'row'\n    }\n  },\n  userDetailDiv: {\n    position: 'absolute'\n    // marginLeft: '3%'\n  },\n  userDiv: {\n    textAlign: 'center',\n    position: 'relative',\n    padding: theme.spacing(1),\n    margin: theme.spacing(1)\n  },\n  chatRoom: {\n    height: '100%'\n  },\n  chatRoomMainDiv: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    width: '100%',\n    height: '100%',\n    position: 'relative'\n  },\n  chatBox: {\n    position: 'relative',\n    backgroundColor: theme.palette.secondary.main,\n    zIndex: 2,\n    width: 'auto',\n    minWidth: '30vh',\n    maxHeight: '100%',\n    [theme.breakpoints.down('xs')]: {\n      position: 'absolute',\n      top: 0,\n      bottom: 0,\n      right: 0,\n      left: 0,\n      width: '100%',\n      height: '100%'\n    }\n  },\n  chatBoxIntro: {\n    padding: '2px'\n  },\n  chatBoxMessages: {\n    padding: '2px'\n  },\n  actionButtons: {\n    position: 'absolute',\n    bottom: '2rem',\n    display: 'grid',\n    justifyContent: 'center',\n    boxShadow: 'none',\n    gridAutoFlow: 'column',\n    // left: '0',\n    // right: '0',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    [theme.breakpoints.up('md')]: {\n      right: 0,\n      left: 0\n    },\n    [theme.breakpoints.down('xs')]: {\n      gridAutoFlow: 'row'\n    }\n    // left: '40%'\n  },\n  textfield: {\n    position: 'absolute',\n    bottom: '0px',\n    width: '100%',\n    backgroundColor: theme.palette.primary.main\n  }\n}))\n\nconst Video = props => {\n  console.log(props.peer)\n  const ref = useRef()\n  const classes = useStyles()\n  const dimension =\n    Math.sqrt(window.screen.availWidth * window.screen.availHeight) / 1.4\n\n  useEffect(() => {\n    console.log('video started')\n    props.peer.on('stream', stream => {\n      console.log(stream)\n      ref.current.srcObject = stream\n    })\n  }, [])\n\n  return (\n    <video\n      playsInline\n      width={dimension / Math.sqrt(1 + props.numpeers)}\n      height={dimension / Math.sqrt(1 + props.numpeers)}\n      autoPlay\n      style={{ display: props.video ? 'block' : 'none' }}\n      className={classes.video}\n      ref={ref}\n    />\n  )\n}\n\nconst videoConstraints = {\n  height: window.screen.availHeight,\n  width: window.screen.availWidth\n}\n\nconst Room = React.memo(props => {\n  const history = useHistory()\n  const currentRoom = useSelector(state => state.room.currentRoom)\n  const [inLobby, setInLobby] = useState(true)\n  const [pendingRequest, setPendingRequest] = useState(false)\n  const [message, setMessage] = useState()\n  const token = useSelector(state => state.auth.token)\n  const [peers, setPeers] = useState([])\n  const [streams, setStreams] = useState([])\n  const [allMessages, setAllMessages] = useState([])\n  const [websocket, setWebSocket] = useState([])\n  var socketRef = useRef()\n  var [dimension, setDimension] = useState(window.screen.availHeight)\n  const userVideo = useRef()\n  var localstream = useRef()\n  const [mystream, setMystream] = useState()\n  const [video, setVideo] = useState(true)\n  const [chatBoxOpen, setChatBoxOpen] = useState(false)\n  const [audio, setAudio] = useState(true)\n  const [roomExist, setRoomExists] = useState(false)\n  const peersRef = useRef([])\n  const classes = useStyles()\n\n  useEffect(() => {\n    console.log('initialize')\n    const d =\n      Math.sqrt(window.screen.availHeight * window.screen.availWidth) / 1.4\n    setDimension(d)\n    return () => {\n      const tracks = localstream.current.getTracks()\n      tracks.map(track => {\n        track.stop()\n      })\n      localstream.current.getTracks()[1].stop()\n      WebSocketInstance.close()\n    }\n  }, [])\n\n  useEffect(() => {\n    console.log('peers changed')\n    console.log(peers)\n  }, [peers])\n\n  useEffect(() => {\n    let data = {\n      id: props.match.params.id,\n      sharing_id: props.match.params.code\n    }\n    data = JSON.stringify(data)\n    props.getRoomDetails(data, props.match.params.id, () => {\n      console.log(currentRoom && currentRoom.created_by == props.myuser.pk)\n      if (currentRoom && currentRoom.created_by == props.myuser.pk) {\n        navigator.mediaDevices\n          .getUserMedia({ video: { videoConstraints }, audio: true })\n          .then(stream => {\n            console.log(stream)\n            userVideo.current.srcObject = stream\n            localstream.current = stream\n            setMystream(stream)\n          })\n          .catch(err => {\n            console.log(err)\n            toast.error('Cannot get access to your camera and video !')\n          })\n        console.log('admin hai ye')\n        setInLobby(false)\n      }\n      setRoomExists(true)\n    })\n  }, [currentRoom.id])\n\n  useEffect(() => {\n    if (roomExist) {\n      if (inLobby) {\n        navigator.mediaDevices\n          .getUserMedia({ video: { videoConstraints }, audio: true })\n          .then(stream => {\n            console.log(stream)\n            userVideo.current.srcObject = stream\n            // dummyUserVideo.current.srcObject = stream\n            localstream.current = stream\n            setMystream(stream)\n          })\n          .catch(err => {\n            console.log(err)\n            toast.error('Cannot get access to your camera and video !')\n          })\n      } else {\n        if (Boolean(WebSocketInstance) && WebSocketInstance.socketRef) {\n          WebSocketInstance.close()\n        }\n        WebSocketInstance.connect(\n          `${window.location.protocol == 'http:' ? 'ws' : 'wss'}://${\n            window.location.host.includes('localhost:')\n              ? 'localhost:8000'\n              : window.location.hostname\n          }/ws/chat/${props.currentRoom.sharing_id}`\n        )\n        // WebSocketInstance.waitForSocketConnection(() => {\n        //   console.log('looping')\n        // })\n        setWebSocket(WebSocketInstance)\n        WebSocketInstance.sendSignal('join room', { video, audio })\n        WebSocketInstance.on('request invite', user => {\n          let presentInUsers =\n            props.currentRoom.all_users.indexOf(user.id) != -1\n          console.log(props.currentRoom.all_users)\n          console.log(user.id == props.currentRoom.created_by)\n          console.log(user.id == props.currentRoom.created_by || presentInUsers)\n          if (user.id == props.currentRoom.created_by || presentInUsers) {\n            WebSocketInstance.sendSignal('accept invite', user.id)\n          }\n          else if (\n            props.currentRoom.created_by == props.myuser.pk &&\n            currentRoom.created_by != user.id \n          ) {\n            toast(\n              t => (\n                <div>\n                  {user.email} wants to join{' '}\n                  <Button\n                    color='inherit'\n                    onClick={() => handleUserAccept(t.id, user.id)}\n                  >\n                    accept\n                  </Button>\n                  <Button\n                    color='inherit'\n                    onClick={() => handleUserReject(t.id, user.id)}\n                  >\n                    Decline\n                  </Button>\n                </div>\n              ),\n              {\n                icon: '👤',\n                duration: 100000\n              }\n            )\n          }\n        })\n        WebSocketInstance.on('invite was rejected', payload => {\n          console.log(props.myuser.pk == payload.id)\n          if (props.myuser.pk == payload.id) {\n            alert('Admin rejected your request')\n            history.push('/')\n          }\n        })\n        WebSocketInstance.on('all users', payload => {\n          if (pendingRequest == true) {\n            console.log('pending req was true')\n            setPendingRequest(false)\n            userVideo.current.srcObject = localstream.current\n          }\n          if (payload.id == props.myuser.pk) {\n            console.log('all users received')\n            console.log(payload.users)\n            const allPeers = []\n            payload.users.forEach(user => {\n              if (user[0] !== props.myuser.pk) {\n                if (!Boolean(peersRef.current.some(e => e.peerID == user[0]))) {\n                  console.log(localstream.current)\n                  const peer = createPeer(\n                    user[0],\n                    props.myuser.pk,\n                    localstream.current\n                  )\n                  peersRef.current.push({\n                    peerID: user[0],\n                    peerName: user[1],\n                    video: user[2],\n                    audio: user[3],\n                    peer\n                  })\n                  allPeers.push({\n                    peerID: user[0],\n                    peerName: user[1],\n                    video: user[2],\n                    audio: user[3],\n                    peer\n                  })\n                  console.log('created peer ' + user[1])\n                }\n              }\n            })\n            setPeers(allPeers)\n            console.log('peers after all users')\n            console.log(peers)\n          }\n        })\n\n        WebSocketInstance.on('user joined', payload => {\n          // console.log(peersRef.current)\n          // setPeers(peersRef.current)\n          console.log(payload.userID)\n          if (payload.userID === props.myuser.pk) {\n            if (\n              !Boolean(\n                peersRef.current.some(e => e.peerID == payload.caller[0])\n              )\n            ) {\n              const peer = addPeer(\n                payload.signal,\n                payload.caller,\n                localstream.current\n              )\n              toast(`${payload.caller[1]} joined the room.`, { icon: '👏' })\n              console.log(`${payload.caller[1]} joined the room.`)\n              peersRef.current.push({\n                peerID: payload.caller[0],\n                peerName: payload.caller[1],\n                video: payload.caller[2],\n                audio: payload.caller[3],\n                peer\n              })\n\n              let peerObj = {\n                peerID: payload.caller[0],\n                peerName: payload.caller[1],\n                video: payload.caller[2],\n                audio: payload.caller[3],\n                peer\n              }\n\n              setPeers([...peers, peerObj])\n\n              console.log('added peer')\n            }\n            console.log(peers)\n          }\n          // setPeers(peersRef.current)\n        })\n\n        WebSocketInstance.on('receiving returned signal', payload => {\n          console.log('receiving returned signal')\n          if (payload.userID === props.myuser.pk) {\n            const item = peersRef.current.find(p => p.peerID === payload.id)\n            item.peer.signal(payload.signal)\n          }\n          // setPeers(peersRef.current)\n          console.log(peers)\n        })\n\n        WebSocketInstance.on('user left', id => {\n          const peerObj = peersRef.current.find(p => p.peerID === id)\n          if (peerObj) {\n            toast(`${peerObj.peerName} left.`, { icon: 'ℹ️' })\n\n            peerObj.peer.destroy()\n          }\n          const allPeers = peersRef.current.filter(p => p.peerID !== id)\n          peersRef.current = allPeers\n          setPeers(allPeers)\n        })\n\n        WebSocketInstance.on('message received', payload => {\n          const msgObj = {\n            user: payload.user,\n            msg: payload.message\n          }\n          setAllMessages(messages => [...messages, msgObj])\n          if (props.myuser.first_name != msgObj.user && !chatBoxOpen) {\n            toast(`${payload.user} : ${payload.message}`, { icon: '💬' })\n          }\n          console.log(allMessages)\n        })\n\n        WebSocketInstance.on('toggle video', payload => {\n          if (payload.id == props.myuser.pk) {\n            setVideo(payload.value)\n          } else {\n            var newPeers = peersRef.current\n            for (var i in newPeers) {\n              if (newPeers[i].peerID == payload.id) {\n                newPeers[i].video = payload.value\n                break //Stop this loop, we found it!\n              }\n            }\n            setPeers([...newPeers])\n            peersRef.current = newPeers\n          }\n        })\n\n        WebSocketInstance.on('toggle audio', payload => {\n          if (payload.id == props.myuser.pk) {\n            setAudio(payload.value)\n          } else {\n            var newPeers = peersRef.current\n            for (var i in newPeers) {\n              if (newPeers[i].peerID == payload.id) {\n                newPeers[i].audio = payload.value\n                break //Stop this loop, we found it!\n              }\n            }\n            setPeers([...newPeers])\n            peersRef.current = newPeers\n          }\n        })\n      }\n    }\n  }, [roomExist, inLobby])\n\n  function handleUserAccept (toast_id, user_id) {\n    WebSocketInstance.sendSignal('accept invite', user_id)\n    toast.dismiss(toast_id)\n  }\n\n  function handleUserReject (toast_id, user_id) {\n    WebSocketInstance.sendSignal('reject invite', user_id)\n    toast.dismiss(toast_id)\n  }\n\n  function createPeer (userToSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    })\n\n    peer.on('signal', signal => {\n      WebSocketInstance.sendSignal('sending signal', {\n        userToSignal,\n        callerID,\n        signal\n      })\n    })\n\n    return peer\n  }\n\n  function addPeer (incomingSignal, caller, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    })\n    let callerID = caller[0]\n    peer.on('signal', signal => {\n      WebSocketInstance.sendSignal('returning signal', { signal, callerID })\n    })\n\n    peer.signal(incomingSignal)\n\n    return peer\n  }\n\n  function shareScreen () {\n    console.log(mystream)\n    console.log(peersRef.current[0].peer)\n    navigator.mediaDevices\n      .getDisplayMedia({ video: { cursor: 'always' }, audio: 'true' })\n      .then(screenStream => {\n        console.log(screenStream.getVideoTracks())\n        let videoTrack = screenStream.getVideoTracks()[0]\n        // peersRef.current[0].peer.getSenders()[1].replaceTrack(screenStream.getTracks()[0])\n        userVideo.current.srcObject = screenStream\n        // screenStream.getTracks()[0].onended = () =>{\n        // peers[0].peer.getSenders.find(function(s){return s.track.kind == videoTrack.kind}).replaceTrack(videoTrack)\n        // userVideo.current.srcObject=mystream\n        // }\n      })\n  }\n\n  function handleMessageSend () {\n    WebSocketInstance.sendSignal('send_message', message)\n    setMessage('')\n  }\n\n  function handleMessageChange (event) {\n    setMessage(event.target.value)\n  }\n\n  function toggleChatBoxOpen () {\n    setChatBoxOpen(!chatBoxOpen)\n  }\n\n  function handleJoinRoom () {\n    console.log('joining room')\n    setPendingRequest(true)\n    setInLobby(false)\n  }\n\n  function handleVideoToggle () {\n    localstream.current.getVideoTracks()[0].enabled = !localstream.current.getVideoTracks()[0]\n      .enabled\n    if (inLobby) {\n      setVideo(!video)\n    } else {\n      WebSocketInstance.sendSignal('toggle video')\n    }\n  }\n  function handleAudioToggle () {\n    localstream.current.getAudioTracks()[0].enabled = !localstream.current.getAudioTracks()[0]\n      .enabled\n    // setAudio(!audio)\n    if (inLobby) {\n      setAudio(!audio)\n    } else {\n      WebSocketInstance.sendSignal('toggle audio')\n    }\n  }\n  function handleDisconnect () {\n    console.log(mystream)\n    const tracks = mystream && mystream.getTracks()\n    tracks.map(track => {\n      track.stop()\n    })\n    // localstream.current.getTracks()[0].stop();\n    // WebSocketInstance.close()\n    history.push('/')\n  }\n  console.log(pendingRequest)\n  console.log(inLobby)\n  console.log(peers)\n  return roomExist ? (\n    !inLobby && !pendingRequest ? (\n      <div className={classes.chatRoom}>\n        <Toaster />\n        <div className={classes.chatRoomMainDiv}>\n          <Grid\n            // xs={chatBoxOpen ? 6 : 12}\n            container\n            spacing={2}\n            className={classes.paper}\n          >\n            <Grid\n              container\n              item\n              xs={12}\n              // style={{'display':'none'}}\n              // xs={12}\n              key={props.myuser.pk}\n              className={classes.userDiv}\n            >\n              {/* <Paper> */}\n              <Typography\n                variant='h5'\n                className={classes.userDetailDiv}\n                style={{ display: video ? 'block' : 'none' }}\n                gutterBottom\n              >\n                {props.myuser.first_name}\n              </Typography>\n              <video\n                width={dimension / Math.sqrt(1 + peersRef.current.length)}\n                height={dimension / Math.sqrt(1 + peersRef.current.length)}\n                playsInline\n                muted\n                style={{ display: video ? 'block' : 'none' }}\n                autoPlay\n                className={classes.video}\n                ref={userVideo}\n              />\n              <VideoOffDiv\n                name={props.myuser.first_name}\n                audio={audio}\n                video={video}\n                dimension={dimension}\n                numpeers={peersRef.current.length}\n              />\n              {/* </Paper> */}\n            </Grid>\n\n            {peersRef.current.map(peer => {\n              console.log(peer)\n              return (\n                <Grid\n                  // container\n                  xs={12}\n                  // xs={12}\n                  item\n                  key={peer.peerID}\n                  className={classes.userDiv}\n                >\n                  {/* <Paper> */}\n                  <Typography\n                    variant='h5'\n                    className={classes.userDetailDiv}\n                    gutterBottom\n                    style={{ display: peer.video ? 'block' : 'none' }}\n                  >\n                    {peer.peerName}\n                  </Typography>\n                  <Video\n                    peer={peer.peer}\n                    video={peer.video}\n                    numpeers={peersRef.current.length}\n                  />\n                  <VideoOffDiv\n                    name={peer.peerName}\n                    audio={peer.audio}\n                    video={peer.video}\n                    dimension={dimension}\n                    numpeers={peersRef.current.length}\n                  />\n                  {/* </Paper> */}\n                </Grid>\n              )\n            })}\n          </Grid>\n          {chatBoxOpen ? (\n            <Grid className={classes.chatBox}>\n              <Grid className={classes.chatBoxIntro}>\n                <IconButton>\n                  <ArrowBackIcon onClick={toggleChatBoxOpen} />\n                </IconButton>\n              </Grid>\n              {/* <StepLabel>\n                Messages are not saved and will be removed once you disconnect\n              </StepLabel> */}\n              <Grid className={classes.chatBoxMessages}>\n                {allMessages.map(obj => {\n                  return (\n                    <div>\n                      <div>{obj.user}</div>\n                      <div>{obj.msg}</div>\n                    </div>\n                  )\n                })}\n              </Grid>\n              <Grid className={classes.chatBoxInput}>\n                <TextField\n                  color='secondary'\n                  className={classes.textfield}\n                  onChange={handleMessageChange}\n                  value={message}\n                  name='message'\n                  variant='outlined'\n                  autoComplete={false}\n                  label=''\n                  placeholder='Enter your msg'\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position='end'>\n                        <IconButton>\n                          <SvgIcon onClick={handleMessageSend}>\n                            <SendIcon />\n                          </SvgIcon>\n                        </IconButton>\n                      </InputAdornment>\n                    )\n                  }}\n                />\n              </Grid>\n            </Grid>\n          ) : (\n            ''\n          )}\n        </div>\n        <Grid className={classes.actionButtons}>\n          <Button onClick={handleVideoToggle}>\n            {video ? <VideocamIcon /> : <VideocamOffIcon />}\n          </Button>\n          <Button onClick={handleAudioToggle}>\n            {audio ? <MicIcon /> : <MicOffIcon />}\n          </Button>\n          <Button onClick={toggleChatBoxOpen}>\n            <ChatIcon />\n          </Button>\n          <Button onClick={handleDisconnect}>\n            <CallEndIcon />\n          </Button>\n          <Button onClick={shareScreen}>\n            <ScreenShareIcon />\n          </Button>\n        </Grid>\n      </div>\n    ) : (\n      <div>\n        <Typography variant='h5' className={classes.userDetailDiv} gutterBottom>\n          {props.myuser.first_name}\n        </Typography>\n        <video\n          width={\n            peers.length == 0 || window.screen.availWidth < 1400\n              ? window.screen.availWidth / 1.3\n              : window.screen.availWidth / 2.2\n          }\n          height={\n            peers.length == 0\n              ? window.screen.availHeight / 1.3\n              : window.screen.availWidth < 1400\n              ? window.screen.availHeight / 2.3\n              : window.screen.availHeight / 1.3\n          }\n          playsInline\n          muted\n          autoPlay\n          className={classes.video}\n          ref={userVideo}\n        />\n        <Button onClick={handleVideoToggle}>\n          {video ? <VideocamIcon /> : <VideocamOffIcon />}\n        </Button>\n        <Button onClick={handleAudioToggle}>\n          {audio ? <MicIcon /> : <MicOffIcon />}\n        </Button>\n        <Button onClick={handleJoinRoom} disabled={pendingRequest}>\n          Join room\n        </Button>\n      </div>\n    )\n  ) : (\n    <div>Room doesnt exist</div>\n  )\n})\n\nconst mapStateToprops = state => {\n  return {\n    myuser: state.auth.user,\n    currentRoom: state.room.currentRoom,\n    token: state.auth.token\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    getRoomDetails: (data, id, handleSuccess) => {\n      return dispatch(getRoomDetails(data, id, handleSuccess))\n    }\n  }\n}\nexport default withRouter(connect(mapStateToprops, mapDispatchToprops)(Room))\n\n// width={\n//   peers.length == 0 || window.screen.availWidth < 1400\n//     ? window.screen.availWidth / 1.3\n//     : window.screen.availWidth / 2.2\n// }\n// height={\n//   peers.length == 0\n//     ? window.screen.availHeight / 1.3\n//     : window.screen.availWidth < 1400\n//     ? window.screen.availHeight / 2.3\n//     : window.screen.availHeight / 1.3\n// }\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { logoutUser } from '../actions/authAction'\nimport VideoPlayer from '../components/video/videoPlayer.js'\n\nclass VideoView extends Component {\n  render () {\n    return (\n      <div style={{height:'90vh'}} className='VideoView'>\n        <VideoPlayer />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logoutUser: () => {\n      return dispatch(logoutUser())\n    }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(VideoView)\n"],"sourceRoot":""}