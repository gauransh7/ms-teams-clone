{"version":3,"sources":["components/common/chatRoomCard.js","components/rooms/roomsList.js","components/homeComponents/roomDetails.js","components/common/addUser.js","views/rooms.js","components/rooms/roomData.js","components/rooms/roomChat.js","components/common/chatBox.js","components/common/roomDataModal.js"],"names":["useStyles","makeStyles","theme","Card","backgroundColor","palette","secondary","main","color","contrastText","margin","spacing","width","cursor","justifyContent","roomCardMainDiv","height","display","alignItems","justifyItems","icons","ChatRoomCard","props","history","useHistory","console","log","classes","useState","showAddUserModal","setShowAddUserModal","className","clickable","onClick","push","room","id","gutterBottom","room_name","invite","label","created_by","first_name","style","marginInlineStart","e","stopPropagation","sharing_id","show","onClose","roomsList","overflow","paddingBottom","background","gridTemplateRows","list","overflowY","maxHeight","window","screen","availHeight","position","breakpoints","down","listHeading","top","primary","marginLeft","listWrapper","webkitScrollbar","webkitScrollbarThumb","withRouter","connect","state","user","auth","roomsCreated","roomsInvited","dispatch","createChatRoom","data","handleSuccess","getAllRooms","useEffect","variant","heading","rooms","map","roomDetailsDiv","roomList","title","textAlign","slice","modal","paper","border","boxShadow","shadows","padding","textField","currentRoom","updateRoomUsers","email","setEmail","toast","success","open","centered","in","textfield","onChange","event","target","value","name","autoComplete","placeholder","InputProps","endAdornment","Rooms","gridAutoFlow","roomDataDiv","getRoomDetails","useSelector","subheader","getModifiedDate","created_on","size","all_users","pk","createRoomButton","startIcon","meeting","roomChatDiv","default","bottom","chatHeading","chatBoxMessages","messageList","left","right","messages","getAllMessages","callback","addMessage","message","match","params","WebSocketInstance","close","Boolean","socketRef","location","protocol","host","includes","hostname","sendSignal","video","audio","onlyChat","on","payload","JSON","parse","setMessage","handleMessageSend","onKeyPress","key","messageBox","useRef","current","scrollTop","scrollHeight","length","ref","msg","container","item","xs","align","disableTypography","fontWeight","fontSize","date"],"mappings":"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","file":"static/js/1.106d3ff4.chunk.js","sourcesContent":["import {\n  Card,\n  CardActions,\n  Chip,\n  IconButton,\n  Typography\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport React, { Component, useEffect, useState } from 'react'\nimport AddUserModal from './addUser'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport LaunchIcon from '@material-ui/icons/Launch'\nimport PersonAddIcon from '@material-ui/icons/PersonAdd'\n\nconst useStyles = makeStyles(theme => ({\n  Card: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    margin: theme.spacing(0.4),\n    width: '80%',\n    cursor: 'pointer',\n    justifyContent: 'space-between'\n  },\n  roomCardMainDiv: {\n    height: '100%',\n    width: '100%',\n    display: 'grid',\n    alignItems: 'center',\n    justifyItems: 'center'\n  },\n  icons: {\n    color: theme.palette.secondary.contrastText,\n  }\n}))\n\nconst ChatRoomCard = props => {\n  const history = useHistory()\n  console.log(props)\n  const classes = useStyles()\n  const [showAddUserModal, setShowAddUserModal] = useState(false)\n\n  function openRoom (e) {\n    e.stopPropagation()\n    history.push(`/video/${props.room.id}/${props.room.sharing_id}`)\n  }\n\n  function handleAddUser (e) {\n    e.stopPropagation()\n    setShowAddUserModal(true)\n  }\n\n  return (\n    <div className={classes.roomCardMainDiv}>\n      <Card\n        className={classes.Card}\n        clickable\n        onClick={() => history.push(`/room/${props.room.id}`)}\n      >\n        <CardActions>\n          <Typography onClick={() => setShowAddUserModal(true)} gutterBottom>\n            {props.room && props.room.room_name}\n          </Typography>\n          {props.invite && (\n            <Chip label={`creater : ${props.room.created_by.first_name}`} />\n          )}\n          <div style={{ marginInlineStart: 'auto' }}>\n            {!props.invite && (\n              <IconButton>\n                <PersonAddIcon className={classes.icons} onClick={handleAddUser} />\n              </IconButton>\n            )}\n            <IconButton>\n              <LaunchIcon className={classes.icons} onClick={openRoom} />\n            </IconButton>\n          </div>\n        </CardActions>\n      </Card>\n      {showAddUserModal && (\n        <AddUserModal\n          room={props.room}\n          onClick={e => e.stopPropagation()}\n          show={showAddUserModal}\n          onClose={() => setShowAddUserModal(false)}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default ChatRoomCard\n","import React, { Component, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory, withRouter } from 'react-router-dom'\nimport {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Grid,\n  Paper,\n  StepLabel,\n  TextField,\n  Typography\n} from '@material-ui/core'\nimport { createChatRoom, getAllRooms } from '../../actions/chatRoomAction'\nimport ChatRoomCard from '../common/chatRoomCard'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles(theme => ({\n  roomsList: {\n    width: '80%',\n    display: 'grid',\n    justifyItems: 'center',\n    overflow: 'hidden',\n    paddingBottom: theme.spacing(1),\n    backgroundColor: theme.palette.background,\n    gridTemplateRows: 'min-content',\n    height: '80%'\n  },\n  list: {\n    overflowY: 'scroll',\n    maxHeight: window.screen.availHeight / 1.3,\n    width: '100%',\n    display: 'grid',\n    justifyItems: 'center',\n    position: 'absolute',\n    [theme.breakpoints.down('xs')]: {\n      maxHeight: window.screen.availHeight / 2,\n    }\n  },\n  listHeading: {\n    top: 0,\n    backgroundColor: theme.palette.primary.main,\n    width: '100%',\n    height: '50%',\n    marginLeft: '10%'\n  },\n  listWrapper: {\n    position: 'relative',\n    width: '100%',\n    height: '90%',\n    overflow: 'hidden',\n    display: 'grid'\n  },\n  webkitScrollbar: {\n    width: 0 /* Remove scrollbar space */,\n    background: 'transparent' /* Optional: just make scrollbar invisible */\n  },\n  /* Optional: show position indicator in red */\n  webkitScrollbarThumb: {\n    background: '#FF0000'\n  }\n}))\n\nconst RoomsList = props => {\n  const history = useHistory()\n  useEffect(() => {\n    props.getAllRooms()\n  }, [])\n  const classes = useStyles()\n\n  return (\n    <Card className={classes.roomsList}>\n      <CardContent color='secondary' className={classes.listHeading}>\n        <Typography variant='h5'>{props.heading}</Typography>\n      </CardContent>\n      <CardContent className={classes.listWrapper}>\n      <div className={classes.list}>\n        {props.rooms.map(room => (\n          <ChatRoomCard room={room} invite={props.heading==\"Your Invites\"} />\n        ))}\n      </div>\n      </CardContent>\n    </Card>\n  )\n}\n\nconst mapStateToprops = state => {\n  return {\n    user: state.auth.user,\n    roomsCreated: state.room.roomsCreated,\n    roomsInvited: state.room.roomsInvited\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    createChatRoom: (data, handleSuccess) => {\n      return dispatch(createChatRoom(data, handleSuccess))\n    },\n    getAllRooms: () => {\n      return dispatch(getAllRooms())\n    }\n  }\n}\n\nexport default withRouter(\n  connect(mapStateToprops, mapDispatchToprops)(RoomsList)\n)\n","import React, { Component, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, useHistory, withRouter } from 'react-router-dom'\nimport {\n  Button,\n  Grid,\n  Paper,\n  StepLabel,\n  TextField,\n  Typography\n} from '@material-ui/core'\nimport { createChatRoom, getAllRooms } from '../../actions/chatRoomAction'\nimport ChatRoomCard from '../common/chatRoomCard'\nimport { makeStyles } from '@material-ui/styles'\nimport RoomsList from '../rooms/roomsList'\n\nconst useStyles = makeStyles(theme => ({\n  roomDetailsDiv: {\n    width: '100%',\n    height: '60%',\n  },\n  roomList: {\n    height: '100%',\n    width: '100%',\n    display: 'grid',\n    justifyItems: 'center',\n    [theme.breakpoints.down('xs')]: {\n      display: 'none'\n    }\n  },\n  title: {\n    textAlign: 'center'\n  }\n}))\n\nconst RoomDetails = props => {\n  const history = useHistory()\n  useEffect(() => {\n    props.getAllRooms()\n  }, [])\n  const classes = useStyles()\n\n  return (\n    <div className={classes.roomDetailsDiv}>\n    <div className={classes.roomList}>\n      <RoomsList heading=\"Your rooms\" rooms={props.roomsCreated.slice(0,2)} />\n      <RoomsList heading=\"Your Invites\" rooms={props.roomsInvited.slice(0,2)} />\n      </div>\n      <Typography variant='h6' className={classes.title}>\n          <Button onClick={() => history.push('/rooms')}>View All Rooms</Button>\n        </Typography>\n    </div>\n  )\n}\n\nconst mapStateToprops = state => {\n  return {\n    user: state.auth.user,\n    roomsCreated: state.room.roomsCreated,\n    roomsInvited: state.room.roomsInvited\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    createChatRoom: (data, handleSuccess) => {\n      return dispatch(createChatRoom(data, handleSuccess))\n    },\n    getAllRooms: () => {\n      return dispatch(getAllRooms())\n    }\n  }\n}\n\nexport default withRouter(\n  connect(mapStateToprops, mapDispatchToprops)(RoomDetails)\n)\n","import {\n  IconButton,\n  InputAdornment,\n  Modal,\n  SvgIcon,\n  TextField\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport Fade from '@material-ui/core/Fade'\nimport { connect } from 'react-redux'\nimport SendIcon from '@material-ui/icons/Send'\nimport rooms from '../../views/rooms'\nimport { useState } from 'react'\nimport { updateRoomUsers } from '../../actions/chatRoomAction'\nimport toast, { Toaster } from 'react-hot-toast'\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: theme.palette.secondary.main,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  textField: {}\n}))\n\nconst AddUserModal = props => {\n  const classes = useStyles()\n  const { show, room, onClose, label = 'Add Participant', ...restProps } = props\n  const [email, setEmail] = useState('')\n  function handleEmailSend () {\n    const data = {\n      \"email\": email\n    }\n    props.updateRoomUsers(data, props.room.id, handleSuccess)\n  }\n\n  function handleSuccess () {\n    toast.success('Added user')\n    setEmail('')\n  }\n\n  function handleEmailChange (event) {\n    setEmail(event.target.value)\n  }\n  return (\n    <Modal\n      aria-labelledby='transition-modal-title'\n      aria-describedby='transition-modal-description'\n      className={classes.modal}\n      open={show}\n      centered\n      onClose={onClose}\n    >\n      <Fade in={show}>\n        <div className={classes.paper}>\n        <Toaster />\n          <h2 id='transition-modal-title'>{props.room.room_name}</h2>\n          <div id='transition-modal-description'>\n            <TextField\n              color='secondary'\n              className={classes.textfield}\n              onChange={handleEmailChange}\n              value={email}\n              name='email'\n              variant='outlined'\n              autoComplete={false}\n              label=''\n              placeholder='Enter user email'\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position='end'>\n                    <IconButton>\n                      <SvgIcon onClick={handleEmailSend}>\n                        <SendIcon />\n                      </SvgIcon>\n                    </IconButton>\n                  </InputAdornment>\n                )\n              }}\n            />\n          </div>\n        </div>\n      </Fade>\n    </Modal>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentRoom: state.room.currentRoom\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    updateRoomUsers: (data, id, handleSuccess) => {\n      return dispatch(updateRoomUsers(data, id, handleSuccess))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToprops)(AddUserModal)\n","import { Button, Card, Grid, Link, Paper } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport React, { Component, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect, useHistory } from 'react-router'\nimport { logoutUser } from '../actions/authAction'\nimport { getAllRooms } from '../actions/chatRoomAction'\nimport RoomDetails from '../components/homeComponents/roomDetails'\nimport RoomsList from '../components/rooms/roomsList'\n\nconst useStyles = makeStyles(theme => ({\n  Rooms: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    justifyItems: 'center',\n    padding: theme.spacing(2),\n    alignItems: 'center',\n    position: 'relative',\n    height: '100%',\n    [theme.breakpoints.down('xs')]: {\n      gridAutoFlow: 'row'\n    }\n  }\n}))\n\nconst Rooms = props => {\n  useEffect(() => {\n    props.getAllRooms()\n  }, [])\n  const classes = useStyles()\n  return (\n    <Grid className={classes.Rooms}>\n      <RoomsList rooms={props.roomsCreated} heading='Your Rooms' />\n      <RoomsList rooms={props.roomsInvited} heading='Your Invites' />\n    </Grid>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user,\n    roomsCreated: state.room.roomsCreated,\n    roomsInvited: state.room.roomsInvited\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllRooms: () => {\n      return dispatch(getAllRooms())\n    }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Rooms)\n","import React, { Component, useEffect, useState } from 'react'\nimport { connect, useSelector } from 'react-redux'\nimport { Link, useHistory, withRouter } from 'react-router-dom'\nimport {\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  Paper,\n  StepLabel,\n  TextField,\n  Typography,\n  ListItemText,\n  List,\n  ListItem,\n  Chip,\n  CardHeader,\n  CardActions\n} from '@material-ui/core'\nimport AddUserModal from '../common/addUser'\nimport {\n  createChatRoom,\n  getAllRooms,\n  getRoomDetails\n} from '../../actions/chatRoomAction'\nimport { makeStyles } from '@material-ui/styles'\nimport VideoCallIcon from '@material-ui/icons/VideoCall'\nimport PersonAddIcon from '@material-ui/icons/PersonAdd'\nimport { getModifiedDate } from '../../helpers/helperFunctions'\n\nconst useStyles = makeStyles(theme => ({\n  roomDataDiv: {\n    width: '100%',\n    display: 'grid',\n    justifyItems: 'center',\n    alignItems: 'center'\n  }\n}))\n\nconst RoomData = props => {\n  const history = useHistory()\n  useEffect(() => {\n    // props.getRoomDetails()\n  }, [])\n  const classes = useStyles()\n  const [showAddUserModal, setShowAddUserModal] = useState(false)\n  const currentRoom = useSelector(state => state.room.currentRoom)\n  function openRoom () {\n    history.push(`/video/${currentRoom.id}/${currentRoom.sharing_id}`)\n  }\n  return (\n    <div className={classes.roomDataDiv}>\n      <Card style={{ textAlign: 'center', 'maxWidth': '60%' }}>\n        <CardHeader\n          // avatar={\n          //   <Avatar aria-label=\"recipe\" className={classes.avatar}>\n          //     R\n          //   </Avatar>\n          // }\n          // action={\n          //   <IconButton aria-label=\"settings\">\n          //     <MoreVertIcon />\n          //   </IconButton>\n          // }\n          title={currentRoom && currentRoom.room_name}\n          subheader={getModifiedDate(currentRoom.created_on)}\n        />\n        {/* <CardHeader color='secondary' className={classes.roomName}>\n          <Typography style={{ textAlign: 'center' }} variant='h4'>\n            {currentRoom && currentRoom.room_name}\n          </Typography>\n        </CardHeader> */}\n        <CardContent>\n          <Typography style={{ textAlign: 'center' }} variant='h5'>\n            Admin\n          </Typography>\n          <Chip\n            size='medium'\n            color='default'\n            label={`${currentRoom.id && currentRoom.created_by.email}`}\n          />\n        </CardContent>\n        <CardContent>\n          <Typography style={{ textAlign: 'center' }} variant='h5'>\n            All Users\n          </Typography>\n          {currentRoom.id &&\n            currentRoom.all_users.map(user => (\n              <Chip style={{'margin' : '0.2rem'}} size='medium' color='secondary' label={`${user.email}`} />\n            ))}\n        </CardContent>\n        <CardActions style={{ justifyContent: 'center' }}>\n          {currentRoom.id && currentRoom.created_by.pk == props.user.pk && (\n            <Button\n              variant='contained'\n              color='secondary'\n              className={classes.createRoomButton}\n              startIcon={<PersonAddIcon />}\n              onClick={() => setShowAddUserModal(true)}\n            >\n              Add User\n            </Button>\n          )}\n          {props.meeting && <Button\n            variant='contained'\n            color='secondary'\n            className={classes.createRoomButton}\n            startIcon={<VideoCallIcon />}\n            onClick={openRoom}\n          >\n            Join Meeting\n          </Button>}\n          {/* </ListItem> */}\n          {showAddUserModal && (\n            <AddUserModal\n              room={currentRoom}\n              show={showAddUserModal}\n              onClose={() => setShowAddUserModal(false)}\n            />\n          )}\n        </CardActions>\n      </Card>\n    </div>\n  )\n}\n\nconst mapStateToprops = state => {\n  return {\n    user: state.auth.user,\n    currentRoom: state.room.currentRoom\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    createChatRoom: (data, handleSuccess) => {\n      return dispatch(createChatRoom(data, handleSuccess))\n    },\n    getRoomDetails: () => {\n      return dispatch(getRoomDetails())\n    }\n  }\n}\n\nexport default withRouter(\n  connect(mapStateToprops, mapDispatchToprops)(RoomData)\n)\n","import React, { Component, useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, useHistory, withRouter } from 'react-router-dom'\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Grid,\n  IconButton,\n  InputAdornment,\n  Paper,\n  StepLabel,\n  SvgIcon,\n  TextField,\n  Typography,\n  ListItemText,\n  List,\n  ListItem\n} from '@material-ui/core'\nimport {\n  createChatRoom,\n  getAllMessages,\n  getAllRooms,\n  getRoomDetails,\n  addMessage\n} from '../../actions/chatRoomAction'\nimport WebSocketInstance from '../../websocket/socket'\nimport TimeAgo from 'react-timeago'\nimport { makeStyles } from '@material-ui/styles'\nimport SendIcon from '@material-ui/icons/Send'\nimport ChatBox from '../common/chatBox'\n\nconst useStyles = makeStyles(theme => ({\n  roomChatDiv: {\n    // width: '100%',\n    // display: 'grid',\n    // justifyItems: 'center'\n    position: 'relative',\n    height: '90%',\n    backgroundColor: theme.palette.background.default,\n    [theme.breakpoints.down('xs')]: {\n      position: 'absolute',\n      width: '100%',\n      bottom: 0,\n    }\n  },\n  textfield: {\n    position: 'absolute',\n    bottom: '0px',\n    width: '100%',\n    backgroundColor: theme.palette.primary.main\n  },\n  chatHeading: {\n    top: '0px',\n    backgroundColor: theme.palette.primary.main\n  },\n  chatBoxMessages: {\n    padding: '2px',\n    position: 'relative',\n    overflow: 'hidden',\n    height: '82%',\n    width: '100%',\n    [theme.breakpoints.down('xs')]: {\n      height: '75%'\n    }\n  },\n  messageList: {\n    maxHeight: '100%',\n    top: 0,\n    left: 0,\n    right: -theme.spacing(2),\n    position: 'absolute',\n    overflowY: 'scroll'\n  }\n}))\n\nconst RoomChat = props => {\n  const history = useHistory()\n  useEffect(() => {\n    console.log('room chat')\n    console.log(props)\n    props.getAllMessages(props.match.params.id)\n    return () => {\n      WebSocketInstance.close()\n    }\n  }, [])\n  const { currentRoom } = props\n  useEffect(() => {\n    if (Boolean(WebSocketInstance) && WebSocketInstance.socketRef) {\n      WebSocketInstance.close()\n    }\n    WebSocketInstance.connect(\n      `${window.location.protocol == 'http:' ? 'ws' : 'wss'}://${\n        window.location.host.includes('localhost:')\n          ? 'localhost:8000'\n          : window.location.hostname\n      }/ws/chat/${props.currentRoom.sharing_id}`\n    )\n    //   setWebSocket(WebSocketInstance)\n    WebSocketInstance.sendSignal('join room', {\n      video: false,\n      audio: false,\n      onlyChat: true\n    })\n    WebSocketInstance.on('message received', payload => {\n      // const msgObj = {\n      //   user: payload.user,\n      //   msg: payload.message\n      // }\n      payload.user = JSON.parse(payload.user)\n      props.addMessage(payload)\n      // if (props.myuser.first_name != msgObj.user && !chatBoxOpen) {\n      //   toast(`${payload.user} : ${payload.message}`, { icon: '💬' })\n      // }\n      // console.log(allMessages)\n    })\n  }, [currentRoom.id])\n  const classes = useStyles()\n  const [message, setMessage] = useState('')\n  function handleMessageSend () {\n    WebSocketInstance.sendSignal('send_message', message)\n    setMessage('')\n  }\n\n  function handleKeyPress (event) {\n    if(event.key === 'Enter'){\n      handleMessageSend()\n    }\n  }\n\n  function handleMessageChange (event) {\n    setMessage(event.target.value)\n  }\n\n  return (\n    <Card className={classes.roomChatDiv}>\n      <CardContent color='secondary' className={classes.chatHeading}>\n        <Typography variant='h5'>Chat</Typography>\n      </CardContent>\n      <ChatBox />\n      <TextField\n        color='secondary'\n        className={classes.textfield}\n        onChange={handleMessageChange}\n        onKeyPress={handleKeyPress}\n        value={message}\n        name='message'\n        variant='outlined'\n        autoComplete={false}\n        label=''\n        placeholder='Enter your msg'\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position='end'>\n              <IconButton>\n                <SvgIcon onClick={handleMessageSend}>\n                  <SendIcon />\n                </SvgIcon>\n              </IconButton>\n            </InputAdornment>\n          )\n        }}\n      />\n    </Card>\n  )\n}\n\nconst mapStateToprops = state => {\n  return {\n    user: state.auth.user,\n    currentRoom: state.room.currentRoom,\n    messages: state.room.messages\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    createChatRoom: (data, handleSuccess) => {\n      return dispatch(createChatRoom(data, handleSuccess))\n    },\n    getAllMessages: (id, callback) => {\n      return dispatch(getAllMessages(id, callback))\n    },\n    addMessage: message => {\n      return dispatch(addMessage(message))\n    }\n  }\n}\n\nexport default withRouter(\n  connect(mapStateToprops, mapDispatchToprops)(RoomChat)\n)\n\n// import React from 'react'\n// import { makeStyles } from '@material-ui/core/styles'\n// import Paper from '@material-ui/core/Paper'\n// import Grid from '@material-ui/core/Grid'\n// import Box from '@material-ui/core/Box'\n// import Divider from '@material-ui/core/Divider'\n// import TextField from '@material-ui/core/TextField'\n// import Typography from '@material-ui/core/Typography'\n// import List from '@material-ui/core/List'\n// import ListItem from '@material-ui/core/ListItem'\n// import ListItemIcon from '@material-ui/core/ListItemIcon'\n// import ListItemText from '@material-ui/core/ListItemText'\n// import Avatar from '@material-ui/core/Avatar'\n// import Fab from '@material-ui/core/Fab'\n// import SendIcon from '@material-ui/icons/Send'\n\n// const useStyles = makeStyles({\n//   table: {\n//     minWidth: 650\n//   },\n//   chatSection: {\n//     width: '100%',\n//     height: '80vh'\n//   },\n//   headBG: {\n//     backgroundColor: '#e0e0e0'\n//   },\n//   borderRight500: {\n//     borderRight: '1px solid #e0e0e0'\n//   },\n//   messageArea: {\n//     height: '70vh',\n//     overflowY: 'auto'\n//   }\n// })\n\n// const RoomChat = () => {\n//   const classes = useStyles()\n\n//   return (\n//     <div>\n//       <Grid container>\n//         <Grid item xs={12}>\n//           <Typography variant='h5' className='header-message'>\n//             Chat\n//           </Typography>\n//         </Grid>\n//       </Grid>\n//       <Grid container component={Paper} className={classes.chatSection}>\n//         <Grid item xs={3} className={classes.borderRight500}>\n//           <List>\n//             <ListItem button key='RemySharp'>\n//               <ListItemIcon>\n//                 <Avatar\n//                   alt='Remy Sharp'\n//                   src='https://material-ui.com/static/images/avatar/1.jpg'\n//                 />\n//               </ListItemIcon>\n//               <ListItemText primary='John Wick'></ListItemText>\n//             </ListItem>\n//           </List>\n//           <Divider />\n//           <Grid item xs={12} style={{ padding: '10px' }}>\n//             <TextField\n//               id='outlined-basic-email'\n//               label='Search'\n//               variant='outlined'\n//               fullWidth\n//             />\n//           </Grid>\n//           <Divider />\n//           <List>\n//             <ListItem button key='RemySharp'>\n//               <ListItemIcon>\n//                 <Avatar\n//                   alt='Remy Sharp'\n//                   src='https://material-ui.com/static/images/avatar/1.jpg'\n//                 />\n//               </ListItemIcon>\n//               <ListItemText primary='Remy Sharp'>Remy Sharp</ListItemText>\n//               <ListItemText secondary='online' align='right'></ListItemText>\n//             </ListItem>\n//             <ListItem button key='Alice'>\n//               <ListItemIcon>\n//                 <Avatar\n//                   alt='Alice'\n//                   src='https://material-ui.com/static/images/avatar/3.jpg'\n//                 />\n//               </ListItemIcon>\n//               <ListItemText primary='Alice'>Alice</ListItemText>\n//             </ListItem>\n//             <ListItem button key='CindyBaker'>\n//               <ListItemIcon>\n//                 <Avatar\n//                   alt='Cindy Baker'\n//                   src='https://material-ui.com/static/images/avatar/2.jpg'\n//                 />\n//               </ListItemIcon>\n//               <ListItemText primary='Cindy Baker'>Cindy Baker</ListItemText>\n//             </ListItem>\n//           </List>\n//         </Grid>\n//         <Grid item xs={9}>\n//           <List className={classes.messageArea}>\n//             <ListItem key='1'>\n//               <Grid container>\n//                 <Grid item xs={12}>\n//                   {/* <ListItem button key='CindyBaker'>\n//                     <ListItemIcon> */}\n//                   <Avatar\n//                     alt='Cindy Baker'\n//                     src='https://material-ui.com/static/images/avatar/2.jpg'\n//                   />\n//                   {/* </ListItemIcon> */}\n//                   {/* <ListItemText primary='Cindy Baker'> */}\n//                   Cindy Baker\n//                   {/* </ListItemText> */}\n//                   {/* </ListItem> */}\n//                   <ListItemText align='right'>\n//                     <Avatar\n//                       alt='Cindy Baker'\n//                       src='https://material-ui.com/static/images/avatar/2.jpg'\n//                     />\n//                     Cindy Baker 09:30\n//                   </ListItemText>\n//                 </Grid>\n//                 <Grid item xs={12}>\n//                   <ListItemText\n//                     align='right'\n//                     secondary=\"Hey man, What's up ?\"\n//                   ></ListItemText>\n//                 </Grid>\n//               </Grid>\n//             </ListItem>\n//             <ListItem key='2'>\n//               <Grid container>\n//                 <Grid item xs={12}>\n//                   <ListItemText\n//                     align='left'\n//                     primary='Hey, Iam Good! What about you ?'\n//                   ></ListItemText>\n//                 </Grid>\n//                 <Grid item xs={12}>\n//                   <ListItemText align='left' secondary='09:31'></ListItemText>\n//                 </Grid>\n//               </Grid>\n//             </ListItem>\n//             <ListItem key='3'>\n//               <Grid container>\n//                 <Grid item xs={12}>\n//                   <ListItemText\n//                     align='right'\n//                     primary=\"Cool. i am good, let's catch up!\"\n//                   ></ListItemText>\n//                 </Grid>\n//                 <Grid item xs={12}>\n//                   <ListItemText align='right' secondary='10:30'></ListItemText>\n//                 </Grid>\n//               </Grid>\n//             </ListItem>\n//           </List>\n//           <Divider />\n//           <Grid container style={{ padding: '20px' }}>\n//             <Grid item xs={11}>\n//               <TextField\n//                 id='outlined-basic-email'\n//                 label='Type Something'\n//                 fullWidth\n//               />\n//             </Grid>\n//             <Grid xs={1} align='right'>\n//               <Fab color='primary' aria-label='add'>\n//                 <SendIcon />\n//               </Fab>\n//             </Grid>\n//           </Grid>\n//         </Grid>\n//       </Grid>\n//     </div>\n//   )\n// }\n\n// export default RoomChat\n","import React, { Component, useEffect, useRef, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, useHistory, withRouter } from 'react-router-dom'\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Grid,\n  IconButton,\n  InputAdornment,\n  Paper,\n  StepLabel,\n  SvgIcon,\n  TextField,\n  Typography,\n  ListItemText,\n  List,\n  ListItem\n} from '@material-ui/core'\nimport {\n  createChatRoom,\n  getAllMessages,\n  getAllRooms,\n  getRoomDetails,\n  addMessage\n} from '../../actions/chatRoomAction'\nimport WebSocketInstance from '../../websocket/socket'\nimport TimeAgo from 'react-timeago'\nimport { makeStyles } from '@material-ui/styles'\nimport SendIcon from '@material-ui/icons/Send'\n\nconst useStyles = makeStyles(theme => ({\n  roomChatDiv: {\n    height: '100%'\n  },\n  textfield: {\n    position: 'absolute',\n    bottom: '0px',\n    width: '100%',\n    backgroundColor: theme.palette.primary.main\n  },\n  chatBoxMessages: {\n    padding: '2px',\n    position: 'relative',\n    overflow: 'hidden',\n    height: '85%',\n    width: '100%'\n  },\n  messageList: {\n    maxHeight: '100%',\n    top: 0,\n    left: 0,\n    right: -theme.spacing(2),\n    position: 'absolute',\n    overflowY: 'scroll',\n    [theme.breakpoints.down('md')]: {\n      right: 0,\n    },\n  }\n}))\n\nconst ChatBox = (props) => {\n  const history = useHistory()\n  const messageBox = useRef()\n  const classes = useStyles()\n  useEffect(() => {\n    console.log('room chat')\n    console.log(props)\n    props.getAllMessages(props.match.params.id)\n  }, [])\n  useEffect(() => {\n    if (messageBox.current) {\n      console.log(messageBox.current.scrollTop)\n      messageBox.current.scrollTop = messageBox.current.scrollHeight\n      console.log(messageBox.current.scrollTop)\n    }\n  }, [messageBox.current, props.messages.length])\n  const { currentRoom } = props\n  return (\n      <Grid className={classes.chatBoxMessages}>\n        <List ref={messageBox} className={classes.messageList}>\n          {props.messages.map(msg => (\n            <ListItem key={msg.id}>\n              <Grid container>\n                <Grid item xs={12}>\n                  <ListItemText\n                    align={msg.user.pk == props.user.pk ? 'right' : 'left'}\n                    disableTypography\n                    secondary={\n                      <div>\n                        <span style={{ fontWeight: 'bolder' }}>\n                          {msg.user.first_name}\n                        </span>{' '}\n                        <span\n                          style={{\n                            fontWeight: 'lighter',\n                            fontSize: 'small'\n                          }}\n                        >\n                          <TimeAgo date={msg.created_on} />\n                        </span>\n                      </div>\n                    }\n                  ></ListItemText>\n                </Grid>\n                <Grid item xs={12}>\n                  <ListItemText\n                    align={msg.user.pk == props.user.pk ? 'right' : 'left'}\n                    primary={msg.message}\n                  ></ListItemText>\n                </Grid>\n              </Grid>\n            </ListItem>\n          ))}\n        </List>\n      </Grid>\n  )\n}\n\nconst mapStateToprops = state => {\n  return {\n    user: state.auth.user,\n    currentRoom: state.room.currentRoom,\n    messages: state.room.messages\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    createChatRoom: (data, handleSuccess) => {\n      return dispatch(createChatRoom(data, handleSuccess))\n    },\n    getAllMessages: (id, callback) => {\n      return dispatch(getAllMessages(id, callback))\n    },\n    addMessage: message => {\n      return dispatch(addMessage(message))\n    }\n  }\n}\n\nexport default withRouter(connect(mapStateToprops, mapDispatchToprops)(ChatBox))\n","import {\n    IconButton,\n    InputAdornment,\n    Modal,\n    SvgIcon,\n    TextField\n  } from '@material-ui/core'\n  import { makeStyles } from '@material-ui/styles'\n  import Fade from '@material-ui/core/Fade'\n  import { connect } from 'react-redux'\n  import SendIcon from '@material-ui/icons/Send'\n  import rooms from '../../views/rooms'\n  import { useState } from 'react'\n  import { updateRoomUsers } from '../../actions/chatRoomAction'\n  import toast, { Toaster } from 'react-hot-toast'\nimport RoomData from '../rooms/roomData'\n  \n  const useStyles = makeStyles(theme => ({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    paper: {\n      backgroundColor: theme.palette.secondary.main,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3)\n    },\n    textField: {}\n  }))\n  \n  const RoomDetailsModal = props => {\n    const classes = useStyles()\n    const { show, onClose, label = 'Room Details', ...restProps } = props\n    return (\n      <Modal\n        aria-labelledby='transition-modal-title'\n        aria-describedby='transition-modal-description'\n        className={classes.modal}\n        open={show}\n        centered\n        onClose={onClose}\n      >\n        <Fade in={show}>\n          <RoomData meeting={props.meeting}/>\n        </Fade>\n      </Modal>\n    )\n  }\n  \n  const mapStateToProps = state => {\n    return {\n      currentRoom: state.room.currentRoom\n    }\n  }\n  \n  const mapDispatchToprops = dispatch => {\n    return {\n      updateRoomUsers: (data, id, handleSuccess) => {\n        return dispatch(updateRoomUsers(data, id, handleSuccess))\n      }\n    }\n  }\n  \n  export default connect(mapStateToProps, mapDispatchToprops)(RoomDetailsModal)\n  "],"sourceRoot":""}