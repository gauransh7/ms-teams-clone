{"version":3,"sources":["components/common/chatRoomCard.js","components/rooms/roomsList.js","components/common/addUser.js","components/homeComponents/roomDetails.js","views/rooms.js","components/rooms/roomData.js","websocket/socket.js","components/common/chatBox.js","components/rooms/roomChat.js","components/common/roomDataModal.js","components/video/videoOffDiv.js","components/video/video.js","components/video/userCard.js","components/video/videoPlayer.js","views/video.js"],"names":["useStyles","makeStyles","theme","Card","backgroundColor","palette","secondary","main","color","contrastText","margin","spacing","width","cursor","justifyContent","roomCardMainDiv","height","display","alignItems","justifyItems","icons","ChatRoomCard","props","history","useHistory","classes","useState","showAddUserModal","setShowAddUserModal","className","onClick","push","room","id","CardActions","Typography","gutterBottom","room_name","invite","Chip","label","created_by","first_name","style","marginInlineStart","IconButton","e","stopPropagation","sharing_id","show","onClose","roomsList","overflow","paddingBottom","background","gridTemplateRows","list","overflowY","maxHeight","window","screen","availHeight","position","breakpoints","down","listHeading","top","primary","marginLeft","listWrapper","webkitScrollbar","webkitScrollbarThumb","withRouter","connect","state","user","auth","roomsCreated","roomsInvited","dispatch","createChatRoom","data","handleSuccess","getAllRooms","useEffect","CardContent","variant","heading","rooms","map","modal","paper","border","boxShadow","shadows","padding","textField","currentRoom","updateRoomUsers","email","setEmail","toast","success","open","centered","in","textfield","onChange","event","target","value","name","autoComplete","placeholder","InputProps","endAdornment","roomDetailsDiv","roomList","title","textAlign","slice","Rooms","gridAutoFlow","roomDataDiv","getRoomDetails","useSelector","maxWidth","subheader","getModifiedDate","created_on","size","all_users","pk","createRoomButton","startIcon","meeting","WebSocketService","stream","token","config","callbacks","this","socketRef","chatroom_url","WebSocket","onopen","console","log","onmessage","socketNewMessage","onerror","onclose","close","action","func","parsedData","JSON","parse","message","Object","keys","length","send","stringify","err","waitForSocketConnection","jsonStr","peer","store","getState","bind","readyState","callback","self","setTimeout","WebSocketInstance","instance","getInstance","roomChatDiv","bottom","chatBoxMessages","messageList","left","right","ChatBox","React","memo","messageBox","useRef","messages","useDispatch","useParams","getAllMessages","current","scrollTop","scrollHeight","ref","msg","container","item","xs","align","disableTypography","fontWeight","fontSize","date","default","chatHeading","addMessage","match","params","Boolean","location","protocol","host","includes","hostname","sendSignal","video","audio","onlyChat","on","payload","setMessage","handleMessageSend","onKeyPress","key","videoOffDiv","objectFit","backgroundSize","VideoOffDiv","Paper","Video","srcObject","playsInline","controls","autoPlay","userDetailDiv","borderRadius","userDiv","UserCard","Grid","refer","muted","dimension","dimensions","numpeers","gridContainer","flexDirection","introLobby","chatRoom","chatRoomMainDiv","chatBox","zIndex","minWidth","chatBoxIntro","actionButtons","desktopButton","mobileButton","videoConstraints","Room","inLobby","setInLobby","pendingRequest","setPendingRequest","peers","setPeers","setWebSocket","videoHeight","setVideoHeight","availWidth","videoWidth","setVideoWidth","userVideo","usersDiv","localstream","mystream","setMystream","myVideoTrack","setMyVideoTrack","setVideo","col","setCol","showRoomDetailModal","setShowRoomDetailModal","setShow","showDetails","setShowDetails","chatBoxOpen","setChatBoxOpen","allUsersBoxOpen","setAllUsersBoxOpen","setAudio","roomExist","setRoomExists","peersRef","anchorAvatarEl","setAnchorAvatarEl","searchUser","setSearchUser","getTracks","track","stop","n","filter","numCol","Math","sqrt","offsetHeight","offsetWidth","ceil","floor","numRow","myuser","navigator","mediaDevices","getUserMedia","then","getVideoTracks","catch","error","presentInUsers","indexOf","t","Button","toast_id","user_id","dismiss","icon","duration","allPeers","users","forEach","some","peerID","userToSignal","callerID","Peer","initiator","trickle","signal","createPeer","peerName","userID","caller","incomingSignal","addPeer","peerObj","find","p","destroy","newPeers","i","shareScreen","getDisplayMedia","screenStream","index","replaceTrack","removeTrack","addTrack","onended","toggleChatBoxOpen","toggleAllUsersBoxOpen","handleVideoToggle","enabled","handleAudioToggle","getAudioTracks","disabled","gridTemplateColumns","content","currentTarget","Menu","anchorEl","marginBottom","MenuItem","chatBoxInput","TextField","InputAdornment","SvgIcon","List","ListItem","ListItemIcon","Avatar","ListItemText","Divider","fullWidth","togglePeerShow","userDimension","setUserDimension","VideoView","Component","logoutUser"],"mappings":"8QAeMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,gBAAiBF,EAAMG,QAAQC,UAAUC,KACzCC,MAAON,EAAMG,QAAQC,UAAUG,aAC/BC,OAAQR,EAAMS,QAAQ,IACtBC,MAAO,MACPC,OAAQ,UACRC,eAAgB,iBAElBC,gBAAiB,CACfC,OAAQ,OACRJ,MAAO,OACPK,QAAS,OACTC,WAAY,SACZC,aAAc,UAEhBC,MAAO,CACLZ,MAAON,EAAMG,QAAQC,UAAUG,kBAwDpBY,EApDM,SAAAC,GACnB,IAAMC,EAAUC,cACVC,EAAUzB,IAChB,EAAgD0B,oBAAS,GAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KAYA,OACE,sBAAKC,UAAWJ,EAAQV,gBAAxB,UACE,cAACZ,EAAA,EAAD,CACE0B,UAAWJ,EAAQtB,KACnB2B,QAAS,kBAAMP,EAAQQ,KAAR,gBAAsBT,EAAMU,KAAKC,MAFlD,SAIE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYL,QAAS,kBAAMF,GAAoB,IAAOQ,cAAY,EAAlE,SACGd,EAAMU,MAAQV,EAAMU,KAAKK,YAE3Bf,EAAMgB,QACL,cAACC,EAAA,EAAD,CAAMC,MAAK,oBAAelB,EAAMU,KAAKS,WAAWC,cAElD,sBAAKC,MAAO,CAAEC,kBAAmB,QAAjC,WACItB,EAAMgB,QACN,cAACO,EAAA,EAAD,CAAYf,QApBxB,SAAwBgB,GACtBA,EAAEC,kBACFnB,GAAoB,IAkBV,SACE,cAAC,IAAD,CAAeC,UAAWJ,EAAQL,UAGtC,cAACyB,EAAA,EAAD,CAAYf,QA7BtB,SAAmBgB,GACjBA,EAAEC,kBACFxB,EAAQQ,KAAR,iBAAuBT,EAAMU,KAAKC,GAAlC,YAAwCX,EAAMU,KAAKgB,cA2B3C,SACE,cAAC,IAAD,CAAYnB,UAAWJ,EAAQL,kBAKtCO,GACC,cAAC,IAAD,CACEK,KAAMV,EAAMU,KACZF,QAAS,SAAAgB,GAAC,OAAIA,EAAEC,mBAChBE,KAAMtB,EACNuB,QAAS,kBAAMtB,GAAoB,UC/DvC5B,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCiD,UAAW,CACTvC,MAAO,MACPK,QAAS,OACTE,aAAc,SACdiC,SAAU,SACVC,cAAenD,EAAMS,QAAQ,GAC7BP,gBAAiBF,EAAMG,QAAQiD,WAC/BC,iBAAkB,cAClBvC,OAAQ,OAEVwC,KAAK,aACHC,UAAW,SACXC,UAAWC,OAAOC,OAAOC,YAAc,IACvCjD,MAAO,OACPK,QAAS,OACTE,aAAc,SACd2C,SAAU,YACT5D,EAAM6D,YAAYC,KAAK,MAAQ,CAC9BN,UAAWC,OAAOC,OAAOC,YAAc,IAG3CI,YAAa,CACXC,IAAK,EACL9D,gBAAiBF,EAAMG,QAAQ8D,QAAQ5D,KACvCK,MAAO,OACPI,OAAQ,MACRoD,WAAY,OAEdC,YAAa,CACXP,SAAU,WACVlD,MAAO,OACPI,OAAQ,MACRoC,SAAU,SACVnC,QAAS,QAEXqD,gBAAiB,CACf1D,MAAO,EACP0C,WAAY,eAGdiB,qBAAsB,CACpBjB,WAAY,eA8CDkB,gBACbC,aApBsB,SAAAC,GACtB,MAAO,CACLC,KAAMD,EAAME,KAAKD,KACjBE,aAAcH,EAAM1C,KAAK6C,aACzBC,aAAcJ,EAAM1C,KAAK8C,iBAIF,SAAAC,GACzB,MAAO,CACLC,eAAgB,SAACC,EAAMC,GACrB,OAAOH,EAASC,YAAeC,EAAMC,KAEvCC,YAAa,WACX,OAAOJ,EAASI,mBAMpBV,EA3CgB,SAAAnD,GACAE,cAChB4D,qBAAU,WACR9D,EAAM6D,gBACL,IACH,IAAM1D,EAAUzB,IAEhB,OACE,eAACG,EAAA,EAAD,CAAM0B,UAAWJ,EAAQ0B,UAAzB,UACE,cAACkC,EAAA,EAAD,CAAa7E,MAAM,YAAYqB,UAAWJ,EAAQwC,YAAlD,SACE,cAAC9B,EAAA,EAAD,CAAYmD,QAAQ,KAApB,SAA0BhE,EAAMiE,YAElC,cAACF,EAAA,EAAD,CAAaxD,UAAWJ,EAAQ4C,YAAhC,SACA,qBAAKxC,UAAWJ,EAAQ+B,KAAxB,SACGlC,EAAMkE,MAAMC,KAAI,SAAAzD,GAAI,OACnB,cAAC,EAAD,CAA4BA,KAAMA,EAAMM,OAAuB,gBAAfhB,EAAMiE,SAAnCvD,EAAKC,mB,yNC/D5BjC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCwF,MAAO,CACLzE,QAAS,OACTC,WAAY,SACZJ,eAAgB,UAElB6E,MAAO,CACLvF,gBAAiBF,EAAMG,QAAQC,UAAUC,KACzCqF,OAAQ,iBACRC,UAAW3F,EAAM4F,QAAQ,GACzBC,QAAS7F,EAAMS,QAAQ,EAAG,EAAG,IAE/BqF,UAAW,OA+EEvB,iBAdS,SAAAC,GACtB,MAAO,CACLuB,YAAavB,EAAM1C,KAAKiE,gBAID,SAAAlB,GACzB,MAAO,CACLmB,gBAAiB,SAACjB,EAAMhD,EAAIiD,GAC1B,OAAOH,EAASmB,YAAgBjB,EAAMhD,EAAIiD,QAKjCT,EA5EM,SAAAnD,GACnB,IAAMG,EAAUzB,IACRiD,EAAiE3B,EAAjE2B,KAAYC,GAAqD5B,EAA3DU,KAA2DV,EAArD4B,SACpB,GADyE5B,EAA5CkB,MAA7B,YAAyElB,EAAzE,GAC0BI,mBAAS,KAAnC,mBAAOyE,EAAP,KAAcC,EAAd,KAQA,SAASlB,IACPmB,IAAMC,QAAQ,cACdF,EAAS,IAMX,OACE,cAAC,IAAD,CACE,kBAAgB,yBAChB,mBAAiB,+BACjBvE,UAAWJ,EAAQiE,MACnBa,KAAMtD,EACNuD,UAAQ,EACRtD,QAASA,EANX,SAQE,cAAC,IAAD,CAAMuD,GAAIxD,EAAV,SACE,sBAAKpB,UAAWJ,EAAQkE,MAAxB,UACA,cAAC,IAAD,IACE,oBAAI1D,GAAG,yBAAP,SAAiCX,EAAMU,KAAKK,YAC5C,qBAAKJ,GAAG,+BAAR,SACE,cAAC,IAAD,CACEzB,MAAM,YACNqB,UAAWJ,EAAQiF,UACnBC,SApBZ,SAA4BC,GAC1BR,EAASQ,EAAMC,OAAOC,QAoBZA,MAAOX,EACPY,KAAK,QACLzB,QAAQ,WACR0B,cAAc,EACdxE,MAAM,GACNyE,YAAY,mBACZC,WAAY,CACVC,aACE,cAAC,IAAD,CAAgBrD,SAAS,MAAzB,SACE,cAAC,IAAD,CAAahC,QA1C/B,WACE,IAAMmD,EAAO,CACX,MAASkB,GAEX7E,EAAM4E,gBAAgBjB,EAAM3D,EAAMU,KAAKC,GAAIiD,IAsC3B,SACE,cAAC,IAAD,UACE,cAAC,IAAD,0B,uHCvElBlF,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCkH,eAAgB,CACdxG,MAAO,OACPI,OAAQ,OAEVqG,SAAS,aACPrG,OAAQ,OACRJ,MAAO,OACPK,QAAS,OACTE,aAAc,UACbjB,EAAM6D,YAAYC,KAAK,MAAQ,CAC9B/C,QAAS,SAGbqG,MAAO,CACLC,UAAW,cAiDA/C,gBACbC,aApBsB,SAAAC,GACtB,MAAO,CACLC,KAAMD,EAAME,KAAKD,KACjBE,aAAcH,EAAM1C,KAAK6C,aACzBC,aAAcJ,EAAM1C,KAAK8C,iBAIF,SAAAC,GACzB,MAAO,CACLC,eAAgB,SAACC,EAAMC,GACrB,OAAOH,EAASC,YAAeC,EAAMC,KAEvCC,YAAa,WACX,OAAOJ,EAASI,mBAMpBV,EA9CkB,SAAAnD,GAClB,IAAMC,EAAUC,cAChB4D,qBAAU,WACR9D,EAAM6D,gBACL,IACH,IAAM1D,EAAUzB,IAEhB,OACE,sBAAK6B,UAAWJ,EAAQ2F,eAAxB,UACE,sBAAKvF,UAAWJ,EAAQ4F,SAAxB,UACE,cAAC,IAAD,CACE9B,QAAQ,aACRC,MAAOlE,EAAMuD,aAAa2C,MAAM,EAAG,KAErC,cAAC,IAAD,CACEjC,QAAQ,eACRC,MAAOlE,EAAMwD,aAAa0C,MAAM,EAAG,QAGvC,cAAC,IAAD,CAAYlC,QAAQ,KAAKzD,UAAWJ,EAAQ6F,MAA5C,SACE,cAAC,IAAD,CAAQxF,QAAS,kBAAMP,EAAQQ,KAAK,WAApC,sC,8HCrCF/B,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCuH,MAAM,aACJxG,QAAS,OACTyG,aAAc,SACdvG,aAAc,SACd4E,QAAS7F,EAAMS,QAAQ,GACvBO,WAAY,SACZ4C,SAAU,WACV9C,OAAQ,QACPd,EAAM6D,YAAYC,KAAK,MAAQ,CAC9B0D,aAAc,YAiCLjD,uBAfS,SAAAC,GACtB,MAAO,CACLC,KAAMD,EAAME,KAAKD,KACjBE,aAAcH,EAAM1C,KAAK6C,aACzBC,aAAcJ,EAAM1C,KAAK8C,iBAIF,SAAAC,GACzB,MAAO,CACLI,YAAa,WACX,OAAOJ,EAASI,mBAIPV,EA5BD,SAAAnD,GACZ8D,qBAAU,WACR9D,EAAM6D,gBACL,IACH,IAAM1D,EAAUzB,IAChB,OACE,eAAC,IAAD,CAAM6B,UAAWJ,EAAQgG,MAAzB,UACE,cAAC,IAAD,CAAWjC,MAAOlE,EAAMuD,aAAcU,QAAQ,eAC9C,cAAC,IAAD,CAAWC,MAAOlE,EAAMwD,aAAcS,QAAQ,wB,gNCH9CvF,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCyH,YAAa,CACX/G,MAAO,OACPK,QAAS,OACTE,aAAc,SACdD,WAAY,cAoHDsD,gBACbC,aAnBsB,SAAAC,GACtB,MAAO,CACLC,KAAMD,EAAME,KAAKD,KACjBsB,YAAavB,EAAM1C,KAAKiE,gBAID,SAAAlB,GACzB,MAAO,CACLC,eAAgB,SAACC,EAAMC,GACrB,OAAOH,EAASC,YAAeC,EAAMC,KAEvC0C,eAAgB,WACd,OAAO7C,EAAS6C,mBAMpBnD,EAjHe,SAAAnD,GACf,IAAMC,EAAUC,cAChB4D,qBAAU,cAEP,IACH,IAAM3D,EAAUzB,IAChB,EAAgD0B,oBAAS,GAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KACMqE,EAAc4B,aAAY,SAAAnD,GAAK,OAAIA,EAAM1C,KAAKiE,eAIpD,OACE,qBAAKpE,UAAWJ,EAAQkG,YAAxB,SACE,eAAC,IAAD,CAAMhF,MAAO,CAAE4E,UAAW,SAAUO,SAAU,OAA9C,UACE,cAAC,IAAD,CAWER,MAAOrB,GAAeA,EAAY5D,UAClC0F,UAAWC,YAAgB/B,EAAYgC,cAOzC,eAAC,IAAD,WACE,cAAC,IAAD,CAAYtF,MAAO,CAAE4E,UAAW,UAAYjC,QAAQ,KAApD,mBAGA,cAAC,IAAD,CACE4C,KAAK,SACL1H,MAAM,UACNgC,MAAK,UAAKyD,EAAYhE,IAAMgE,EAAYxD,WAAW0D,YAGvD,eAAC,IAAD,WACE,cAAC,IAAD,CAAYxD,MAAO,CAAE4E,UAAW,UAAYjC,QAAQ,KAApD,uBAGCW,EAAYhE,IACXgE,EAAYkC,UAAU1C,KAAI,SAAAd,GAAI,OAC5B,cAAC,IAAD,CACEhC,MAAO,CAAEjC,OAAQ,UACjBwH,KAAK,SACL1H,MAAM,YACNgC,MAAK,UAAKmC,EAAKwB,eAIvB,eAAC,IAAD,CAAaxD,MAAO,CAAE7B,eAAgB,UAAtC,UACGmF,EAAYhE,IAAMgE,EAAYxD,WAAW2F,IAAM9G,EAAMqD,KAAKyD,IACzD,cAAC,IAAD,CACE9C,QAAQ,YACR9E,MAAM,YACNqB,UAAWJ,EAAQ4G,iBACnBC,UAAW,cAAC,IAAD,IACXxG,QAAS,kBAAMF,GAAoB,IALrC,sBAUDN,EAAMiH,SACL,cAAC,IAAD,CACEjD,QAAQ,YACR9E,MAAM,YACNqB,UAAWJ,EAAQ4G,iBACnBC,UAAW,cAAC,IAAD,IACXxG,QAnEZ,WACEP,EAAQQ,KAAR,iBAAuBkE,EAAYhE,GAAnC,YAAyCgE,EAAYjD,cA6D7C,0BAWDrB,GACC,cAAC,IAAD,CACEK,KAAMiE,EACNhD,KAAMtB,EACNuB,QAAS,kBAAMtB,GAAoB,mB,oEC1H3C4G,E,WAcJ,aAAgB,yBAZhBC,OAAS,KAYM,KAXfC,MAAQ,KAWO,KAVfC,OAAU,KAUK,KATfC,UAAY,GAUVC,KAAKC,UAAY,K,2CAGnB,SAASC,GAAe,IAAD,OACrBF,KAAKC,UAAY,IAAIE,UAAUD,GAC/BF,KAAKC,UAAUG,OAAS,WACtBC,QAAQC,IAAI,mBAEdN,KAAKC,UAAUM,UAAY,SAAAtG,GACzB,EAAKuG,iBAAiBvG,EAAEmC,OAE1B4D,KAAKC,UAAUQ,QAAU,SAAAxG,GACvBoG,QAAQC,IAAIrG,IAEd+F,KAAKC,UAAUS,QAAU,WACvBL,QAAQC,IAAI,oC,mBAIhB,WACEN,KAAKC,WAAaD,KAAKC,UAAUU,U,gBAGnC,SAAIC,EAAQC,GACVb,KAAKD,UAAUa,GAAUC,I,8BAG3B,SAAkBzE,GAChB,IAAM0E,EAAaC,KAAKC,MAAM5E,GAE1BwE,GADeE,EAAU,KAChBA,EAAU,QACnBG,EAAUH,EAAU,QACiB,GAAtCI,OAAOC,KAAKnB,KAAKD,WAAWqB,QAG/BpB,KAAKD,UAAUa,GAAQK,K,sBAGzB,WACE,OAAOjB,KAAKJ,S,yBAGd,SAAaxD,GACX,IACE4D,KAAKC,UAAUoB,KAAKN,KAAKO,UAAL,eAAoBlF,KACxC,MAAOmF,GACPlB,QAAQC,IAAIiB,EAAIN,Y,wBAIpB,SAAWL,EAAQK,GACjB,IACEjB,KAAKwB,wBACH,WACE,IAAIC,EAAUV,KAAKO,UAAU,CAC3BI,KAAMC,IAAMC,WAAW7F,KAAKD,KAC5B8E,OAAQA,EACRK,QAASA,IAGXjB,KAAKC,UAAUoB,KAAKI,IACpBI,KAAK7B,MACP,KAEF,MAAOuB,GACPlB,QAAQC,IAAIiB,EAAIN,Y,mBAIpB,WACE,OAAOjB,KAAKC,UAAU6B,a,qCAGxB,SAAyBC,GACvB,IAAIC,EAAOhC,KACXiC,YAAW,WAEyB,IAA9BC,EAAkBrG,QAIpBmG,EAAKR,wBAAwBO,GAH7BA,MAKD,Q,0BA3FL,WAIE,OAHKpC,EAAiBwC,WACpBxC,EAAiBwC,SAAW,IAAIxC,GAE3BA,EAAiBwC,a,KAXtBxC,EACGwC,SAAW,KAqGpB,IAAMD,EAAoBvC,EAAiByC,cAE5BF,O,kJClGT/K,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCgL,YAAa,CACXlK,OAAQ,QAEV0F,UAAW,CACT5C,SAAU,WACVqH,OAAQ,MACRvK,MAAO,OACPR,gBAAiBF,EAAMG,QAAQ8D,QAAQ5D,MAEzC6K,gBAAiB,CACfrF,QAAS,MACTjC,SAAU,WACVV,SAAU,SACVpC,OAAQ,MACRJ,MAAO,QAETyK,YAAY,aACV3H,UAAW,OACXQ,IAAK,EACLoH,KAAM,EACNC,OAAQrL,EAAMS,QAAQ,GACtBmD,SAAU,WACVL,UAAW,UACVvD,EAAM6D,YAAYC,KAAK,MAAQ,CAC9BuH,MAAO,QAKPC,EAAUC,IAAMC,MAAK,WACzB,IAAMC,EAAaC,mBACbnK,EAAUzB,IACV2E,EAAOkD,aAAY,SAAAnD,GAAK,OAAIA,EAAME,KAAKD,QACvCkH,EAAWhE,aAAY,SAAAnD,GAAK,OAAIA,EAAM1C,KAAK6J,YAC3C9G,EAAW+G,cACT7J,EAAO8J,cAAP9J,GASR,OARAmD,qBAAU,WACRL,EAASiH,YAAe/J,MACvB,IACHmD,qBAAU,WACJuG,EAAWM,UACbN,EAAWM,QAAQC,UAAYP,EAAWM,QAAQE,gBAEnD,CAACR,EAAWM,QAASJ,EAAS5B,SAE/B,cAAC,IAAD,CAAMpI,UAAWJ,EAAQ2J,gBAAzB,SACE,cAAC,IAAD,CAAMgB,IAAKT,EAAY9J,UAAWJ,EAAQ4J,YAA1C,SACGQ,EAASpG,KAAI,SAAA4G,GAAG,OACf,cAAC,IAAD,UACE,eAAC,IAAD,CAAMC,WAAS,EAAf,UACE,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,IAAD,CACEC,MAAOJ,EAAI1H,KAAKyD,IAAMzD,EAAKyD,GAAK,QAAU,OAC1CsE,mBAAiB,EACjBpM,UACE,gCACE,sBAAMqC,MAAO,CAAEgK,WAAY,UAA3B,SACGN,EAAI1H,KAAKjC,aACJ,IACR,sBACEC,MAAO,CACLgK,WAAY,UACZC,SAAU,SAHd,SAME,cAAC,IAAD,CAASC,KAAMR,EAAIpE,sBAM7B,cAAC,IAAD,CAAMsE,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,IAAD,CACEC,MAAOJ,EAAI1H,KAAKyD,IAAMzD,EAAKyD,GAAK,QAAU,OAC1CjE,QAASkI,EAAIvC,gBA1BNuC,EAAIpK,cAqCduJ,O,uMCxETxL,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCgL,YAAY,aACVpH,SAAU,WACV9C,OAAQ,MACRZ,gBAAiBF,EAAMG,QAAQiD,WAAWwJ,SACzC5M,EAAM6D,YAAYC,KAAK,MAAQ,CAC9BF,SAAU,WACVlD,MAAO,OACPuK,OAAQ,IAGZzE,UAAW,CACT5C,SAAU,WACVqH,OAAQ,MACRvK,MAAO,OACPR,gBAAiBF,EAAMG,QAAQ8D,QAAQ5D,MAEzCwM,YAAa,CACX7I,IAAK,MACL9D,gBAAiBF,EAAMG,QAAQ8D,QAAQ5D,MAEzC6K,gBAAgB,aACdrF,QAAS,MACTjC,SAAU,WACVV,SAAU,SACVpC,OAAQ,MACRJ,MAAO,QACNV,EAAM6D,YAAYC,KAAK,MAAQ,CAC9BhD,OAAQ,QAGZqK,YAAa,CACX3H,UAAW,OACXQ,IAAK,EACLoH,KAAM,EACNC,OAAQrL,EAAMS,QAAQ,GACtBmD,SAAU,WACVL,UAAW,cA0GAe,gBACbC,aAvBsB,SAAAC,GACtB,MAAO,CACLC,KAAMD,EAAME,KAAKD,KACjBsB,YAAavB,EAAM1C,KAAKiE,YACxB4F,SAAUnH,EAAM1C,KAAK6J,aAIE,SAAA9G,GACzB,MAAO,CACLC,eAAgB,SAACC,EAAMC,GACrB,OAAOH,EAASC,YAAeC,EAAMC,KAEvC8G,eAAgB,SAAC/J,EAAI2I,GACnB,OAAO7F,EAASiH,YAAe/J,EAAI2I,KAErCoC,WAAY,SAAAlD,GACV,OAAO/E,EAASiI,YAAWlD,QAM/BrF,EAvGe,SAAAnD,GACf8D,qBAAU,WAER,OADA9D,EAAM0K,eAAe1K,EAAM2L,MAAMC,OAAOjL,IACjC,WACL8I,IAAkBvB,WAEnB,IACH,IAAQvD,EAAgB3E,EAAhB2E,YACRb,qBAAU,WACJ+H,QAAQpC,MAAsBA,IAAkBjC,WAClDiC,IAAkBvB,QAEpBuB,IAAkBtG,QAAlB,UACiC,SAA5Bd,OAAOyJ,SAASC,SAAsB,KAAO,MADlD,cAEI1J,OAAOyJ,SAASE,KAAKC,SAAS,cAC1B,iBACA5J,OAAOyJ,SAASI,SAJxB,oBAKclM,EAAM2E,YAAYjD,aAGhC+H,IAAkB0C,WAAW,YAAa,CACxCC,OAAO,EACPC,OAAO,EACPC,UAAU,IAEZ7C,IAAkB8C,GAAG,oBAAoB,SAAAC,GACvCA,EAAQnJ,KAAOiF,KAAKC,MAAMiE,EAAQnJ,MAClCrD,EAAM0L,WAAWc,QAElB,CAAC7H,EAAYhE,KAChB,IAAMR,EAAUzB,IAChB,EAA8B0B,mBAAS,IAAvC,mBAAOoI,EAAP,KAAgBiE,EAAhB,KACA,SAASC,IACQ,IAAXlE,GAAeiB,IAAkB0C,WAAW,eAAgB3D,GAChEiE,EAAW,IAab,OACE,eAAC,IAAD,CAAMlM,UAAWJ,EAAQyJ,YAAzB,UACE,cAAC,IAAD,CAAa1K,MAAM,YAAYqB,UAAWJ,EAAQsL,YAAlD,SACE,cAAC,IAAD,CAAYzH,QAAQ,KAApB,oBAEF,cAAC,IAAD,IACA,cAAC,IAAD,CACE9E,MAAM,YACNqB,UAAWJ,EAAQiF,UACnBC,SAbN,SAA8BC,GAC5BmH,EAAWnH,EAAMC,OAAOC,QAapBmH,WApBN,SAAyBrH,GACL,UAAdA,EAAMsH,KACRF,KAmBElH,MAAOgD,EACP/C,KAAK,UACLzB,QAAQ,WACR0B,cAAc,EACdxE,MAAM,GACNyE,YAAY,iBACZC,WAAY,CACVC,aACE,cAAC,IAAD,CAAgBrD,SAAS,MAAzB,SACE,cAAC,IAAD,CAAYhC,QAASkM,EAArB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,qB,qIC7HZhO,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCwF,MAAO,CACLzE,QAAS,OACTC,WAAY,SACZJ,eAAgB,UAElB6E,MAAO,CACLvF,gBAAiBF,EAAMG,QAAQC,UAAUC,KACzCqF,OAAQ,iBACRC,UAAW3F,EAAM4F,QAAQ,GACzBC,QAAS7F,EAAMS,QAAQ,EAAG,EAAG,IAE/BqF,UAAW,OAoCEvB,iBAdS,SAAAC,GACtB,MAAO,CACLuB,YAAavB,EAAM1C,KAAKiE,gBAID,SAAAlB,GACzB,MAAO,CACLmB,gBAAiB,SAACjB,EAAMhD,EAAIiD,GAC1B,OAAOH,EAASmB,YAAgBjB,EAAMhD,EAAIiD,QAKjCT,EAjCU,SAAAnD,GACvB,IAAMG,EAAUzB,IACRiD,EAAwD3B,EAAxD2B,KAAMC,EAAkD5B,EAAlD4B,QAAkD5B,EAAzCkB,MAAvB,YAAgElB,EAAhE,GACA,OACE,cAAC,IAAD,CACE,kBAAgB,yBAChB,mBAAiB,+BACjBO,UAAWJ,EAAQiE,MACnBa,KAAMtD,EACNuD,UAAQ,EACRtD,QAASA,EANX,SAQE,cAAC,IAAD,CAAMuD,GAAIxD,EAAV,SACE,cAAC,IAAD,CAAUsF,QAASjH,EAAMiH,kB,qlBCzB3BvI,GAAYC,cAAW,SAAAC,GAAK,MAAK,CACrCiO,YAAa,CACX/K,SAAU,SACVgL,UAAW,OACXC,eAAgB,QAChBjO,gBAAiBF,EAAMG,QAAQC,UAAUC,KACzCC,MAAON,EAAMG,QAAQC,UAAUG,aAC/BQ,QAAS,OACTC,WAAY,SACZC,aAAc,cAwBHmN,GArBK,SAAAhN,GAClB,IAAMG,EAAUzB,KAGhB,OACE,eAACuO,GAAA,EAAD,CACE1M,UAAWJ,EAAQ0M,YACnBxL,MAAO,CACL/B,MAAOU,EAAMV,MACbI,OAAQM,EAAMN,OACdC,QAASK,EAAMoM,MAAQ,OAAS,IALpC,SAQE,iCACE,eAACvL,GAAA,EAAD,CAAYmD,QAAQ,KAApB,SAA0BhE,EAAMyF,OAC/BzF,EAAMqM,MAAQ,eAAC,IAAD,IAAc,eAAC,IAAD,U,mBClC/B3N,GAAYC,cAAW,SAAAC,GAAK,MAAK,CACrCwN,MAAO,CACLW,eAAgB,QAChBD,UAAW,OACXhL,SAAU,cAGDoL,GAAQ,SAAAlN,GACnB,IAAM8K,EAAMR,mBACNnK,EAAUzB,KAShB,OAPAoF,qBAAU,WACR9D,EAAMiJ,MACJjJ,EAAMiJ,KAAKsD,GAAG,UAAU,SAAApF,GACtB2D,EAAIH,QAAQwC,UAAYhG,OAE3B,IAGD,wBACEiG,aAAW,EACX9N,MAAOU,EAAMV,MACbI,OAAQM,EAAMN,OACd2N,UAAU,EACVC,UAAQ,EACRjM,MAAO,CAAE1B,QAASK,EAAMoM,MAAQ,QAAU,QAC1C7L,UAAWJ,EAAQiM,MACnBtB,IAAKA,KCdLpM,GAAYC,cAAW,SAAAC,GAAK,MAAK,CACrCwN,MAAO,CACLW,eAAgB,QAChBD,UAAW,OACXhL,SAAU,UAEZyL,cAAe,CACb/K,SAAU,WACVI,IAAK,SAEL1D,MAAO,QACPJ,gBAAiB,qBAIjBY,OAAQ,SACR8N,aAAc,SAEd/I,QAAS,iBAEXgJ,QAAS,CACPxH,UAAW,SACXzD,SAAU,WACViC,QAAS7F,EAAMS,QAAQ,GACvBD,OAAQR,EAAMS,QAAQ,GACtBM,QAAS,OACTH,eAAgB,cA+DLkO,GA5DE,SAAA1N,GACf,IAAMG,EAAUzB,KAGhB,OACE,eAACiP,EAAA,EAAD,CACE3C,WAAS,EACTC,MAAI,EACJC,GAAI,GAGJ3K,UAAWJ,EAAQsN,QACnBpM,MAAO,CAAC,QAAYrB,EAAM2B,KAAO,GAAK,QAPxC,SASE,gBAAC9C,GAAA,EAAD,WACGmB,EAAM4N,MACL,wBACEtO,MAAOU,EAAMV,MACbI,OAAQM,EAAMN,OACd0N,aAAW,EACXS,OAAK,EACLR,UAAU,EACVhM,MAAO,CAAE1B,QAASK,EAAMoM,MAAQ,QAAU,QAC1CkB,UAAQ,EACR/M,UAAWJ,EAAQiM,MACnBtB,IAAK9K,EAAM4N,QAGb,eAAC,GAAD,CACE3E,KAAMjJ,EAAMiJ,KAAKA,KACjBmD,MAAOpM,EAAMoM,MACb0B,UAAW9N,EAAM+N,WACjBzO,MAAOU,EAAMV,MACbI,OAAQM,EAAMN,OACdsO,SAAUhO,EAAMgO,WAGpB,eAAC,GAAD,CACEvI,KAAMzF,EAAMyF,KACZ4G,MAAOrM,EAAMqM,MACbD,MAAOpM,EAAMoM,MACb0B,UAAW9N,EAAM+N,WACjBzO,MAAOU,EAAMV,MACbI,OAAQM,EAAMN,OACdsO,SAAUhO,EAAMgO,WAElB,sBACE3M,MAAO,CAAE1B,QAASK,EAAMoM,MAAQ,QAAU,QAC1C7L,UAAWJ,EAAQoN,cAFrB,SAIE,gBAAC1M,GAAA,EAAD,CAAYmD,QAAQ,KAAKlD,cAAY,EAArC,UACGd,EAAMyF,KADT,IACgBzF,EAAMqM,MAAQ,eAAC,IAAD,IAAc,eAAC,IAAD,e,wGCtChD3N,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCwN,MAAO,CAILW,eAAgB,QAChBD,UAAW,OACXhL,SAAU,UAEZmM,cAAc,aACZzO,eAAgB,UACfZ,EAAM6D,YAAYC,KAAK,MAAQ,CAC9BwL,cAAe,WAGnBC,WAAY,CACVxO,QAAS,OACTyG,aAAc,SACdxG,WAAY,SACZJ,eAAgB,UAElB6E,MAAO,CACL1E,QAAS,OACTH,eAAgB,eAChBI,WAAY,SAEZkC,SAAU,SACVpC,OAAQ,OACRJ,MAAO,OACPiF,UAAW,QAKbgJ,cAAe,CACb/K,SAAU,YAGZiL,QAAS,CACPxH,UAAW,SACXzD,SAAU,WACViC,QAAS7F,EAAMS,QAAQ,GACvBD,OAAQR,EAAMS,QAAQ,IAExB+O,SAAU,CACR1O,OAAQ,QAEV2O,gBAAiB,CACf1O,QAAS,OACTyG,aAAc,SACd9G,MAAO,OACPI,OAAQ,OACR8C,SAAU,YAEZ8L,QAAQ,aACN9L,SAAU,WACV1D,gBAAiBF,EAAMG,QAAQC,UAAUC,KACzCsP,OAAQ,EAERC,SAAU,OACVpM,UAAW,QACVxD,EAAM6D,YAAYC,KAAK,MAAQ,CAC9BF,SAAU,WACVI,IAAK,EACLiH,OAAQ,EACRI,MAAO,EACPD,KAAM,EACN1K,MAAO,OACPI,OAAQ,SAGZ+O,aAAc,CACZhK,QAAS,OAEXqF,gBAAiB,CACfrF,QAAS,MACTjC,SAAU,WACVV,SAAU,SACVpC,OAAQ,MACRJ,MAAO,QAETyK,YAAa,CACX3H,UAAW,OACXQ,IAAK,EACLoH,KAAM,EACNC,OAAQrL,EAAMS,QAAQ,GACtBmD,SAAU,WACVL,UAAW,UAEbuM,cAAe,CACblM,SAAU,WACVqH,OAAQ,EACRlK,QAAS,OACTH,eAAgB,SAChB+E,UAAW,OACX6B,aAAc,SACdmI,OAAQ,EAKRtE,MAAO,EACPD,KAAM,GASR2E,cAAc,eACX/P,EAAM6D,YAAYC,KAAK,MAAQ,CAC9B/C,QAAS,SAGbiP,aAAa,aACXjP,QAAS,QACRf,EAAM6D,YAAYC,KAAK,MAAQ,CAC9B/C,QAAS,UAGbyF,UAAW,CACT5C,SAAU,WACVqH,OAAQ,MACRvK,MAAO,OACPR,gBAAiBF,EAAMG,QAAQ8D,QAAQ5D,UAIrC4P,GAAmB,GAKnBC,GAAO3E,IAAMC,MAAK,SAAApK,GACtB,IAAMC,EAAUC,cACVyE,EAAc4B,aAAY,SAAAnD,GAAK,OAAIA,EAAM1C,KAAKiE,eACpD,EAA8BvE,oBAAS,GAAvC,mBAAO2O,EAAP,KAAgBC,EAAhB,KACA,EAA4C5O,oBAAS,GAArD,mBAAO6O,EAAP,KAAuBC,EAAvB,KACA,EAA8B9O,qBAA9B,mBAAOoI,EAAP,KAAgBiE,EAAhB,KAEA,GADclG,aAAY,SAAAnD,GAAK,OAAIA,EAAME,KAAK8D,SACpBhH,mBAAS,KAAnC,mBAAO+O,EAAP,KAAcC,EAAd,KACA,EAA8BhP,mBAAS,IAAvC,mBACA,GADA,UACsCA,mBAAS,KAA/C,oBACA,IADA,YACkCA,mBAAS,KAA3C,qBAAkBiP,IAAlB,aAEI,IADY/E,mBACgBlK,mBAAS,MAAzC,qBAAK0N,GAAL,MACI,IADJ,MACoC1N,mBAASiC,OAAOC,OAAOC,YAAc,MAAzE,qBAAK+M,GAAL,MAAkBC,GAAlB,MACI,GAA8BnP,mBAASiC,OAAOC,OAAOkN,WAAa,KAAtE,qBAAKC,GAAL,MAAiBC,GAAjB,MACMC,GAAYrF,mBACZD,GAAaC,mBAEbsF,GAAWtF,mBACbuF,GAAcvF,mBAClB,GAAgClK,qBAAhC,qBAAO0P,GAAP,MAAiBC,GAAjB,MACA,GAAwC3P,mBAAS,MAAjD,qBAAO4P,GAAP,MAAqBC,GAArB,MACA,GAA0B7P,oBAAS,GAAnC,qBAAOgM,GAAP,MAAc8D,GAAd,MACA,GAAsB9P,mBAAS,GAA/B,qBAAO+P,GAAP,MAAYC,GAAZ,MACA,GAAsDhQ,oBAAS,GAA/D,qBAAOiQ,GAAP,MAA4BC,GAA5B,MACA,GAAwBlQ,oBAAS,GAAjC,qBAAOuB,GAAP,MAAa4O,GAAb,MACA,GAAsCnQ,oBAAS,GAA/C,qBAAOoQ,GAAP,MAAoBC,GAApB,MACA,GAAsCrQ,oBAAS,GAA/C,qBAAOsQ,GAAP,MAAoBC,GAApB,MACA,GAA8CvQ,oBAAS,GAAvD,qBAAOwQ,GAAP,MAAwBC,GAAxB,MACA,GAA0BzQ,oBAAS,GAAnC,qBAAOiM,GAAP,MAAcyE,GAAd,MACA,GAAmC1Q,oBAAS,GAA5C,qBAAO2Q,GAAP,MAAkBC,GAAlB,MACMC,GAAW3G,iBAAO,IAClBnK,GAAUzB,KAChB,GAA4C0B,mBAAS,MAArD,qBAAO8Q,GAAP,MAAuBC,GAAvB,MACA,GAAoC/Q,mBAAS,IAA7C,qBAAOgR,GAAP,MAAmBC,GAAnB,MAEAvN,qBAAU,WAER,OADA9D,EAAM0K,eAAe1K,EAAM2L,MAAMC,OAAOjL,IACjC,WACUkP,GAAYlF,QAAQ2G,YAC5BnN,KAAI,SAAAoN,GACTA,EAAMC,UAER3B,GAAYlF,QAAQ2G,YAAY,GAAGE,OACnC/H,IAAkBvB,WAEnB,IAEHpE,qBAAU,WACJuG,GAAWM,UACbN,GAAWM,QAAQC,UAAYP,GAAWM,QAAQE,gBAEnD,CAACR,GAAWM,QAAS3K,EAAMuK,SAAS5B,SAEvC7E,qBAAU,WACR,GAAI8L,GAASjF,QAAS,CAKpB,IAAI8G,EAAI,EACJ9P,IACF8P,IAEFA,GAAKR,GAAStG,QAAQ+G,QAAO,SAAAzI,GAAI,OAAkB,IAAdA,EAAKtH,QAAegH,OAEvD8H,GADO,GAALgB,GAKJ,IAAIE,EAASC,KAAKC,KAAKJ,GAErBE,EADE/B,GAASjF,QAAQmH,aAAelC,GAASjF,QAAQoH,YAC1CH,KAAKI,KAAKL,GAEVC,KAAKK,MAAMN,GAEtBvB,GAAOuB,GACP,IAAMO,EAASN,KAAKI,KAAKP,EAAIE,GAC7BpC,GAAeK,GAASjF,QAAQmH,cAAgB,IAAMI,IACtDxC,GAAcE,GAASjF,QAAQoH,aAAe,IAAMJ,OAErD,CACD/B,GAASjF,QACTwE,EACAxN,GACA+O,GACAE,GACAK,GAAStG,QAAQhC,SAGnB7E,qBAAU,WACR9D,EAAMsG,eAAetG,EAAM2L,MAAMC,OAAOjL,IAAI,WACtCgE,GAAeA,EAAYxD,WAAW2F,IAAM9G,EAAMmS,OAAOrL,KAC3DsL,UAAUC,aACPC,aAAa,CAAElG,MAAO,CAAEyC,qBAAoBxC,OAAO,IACnDkG,MAAK,SAAApL,GACJwI,GAAUhF,QAAQwC,UAAYhG,EAC9B0I,GAAYlF,QAAUxD,EACtB8I,GAAgB9I,EAAOqL,iBAAiB,IACxCzC,GAAY5I,MAEbsL,OAAM,SAAA3J,GACL/D,IAAM2N,MAAM,mDAEhB1D,GAAW,IAEbgC,IAAc,QAEf,CAACrM,EAAYhE,KAEhBmD,qBAAU,WACJiN,KACEhC,EACFqD,UAAUC,aACPC,aAAa,CAAElG,MAAO,CAAEyC,qBAAoBxC,OAAO,IACnDkG,MAAK,SAAApL,GACJwI,GAAUhF,QAAQwC,UAAYhG,EAC9B0I,GAAYlF,QAAUxD,EACtB8I,GAAgB9I,EAAOqL,iBAAiB,IACxCzC,GAAY5I,MAEbsL,OAAM,SAAA3J,GACL/D,IAAM2N,MAAM,oDAGZ7G,QAAQpC,MAAsBA,IAAkBjC,WAClDiC,IAAkBvB,QAEpBuB,IAAkBtG,QAAlB,UACiC,SAA5Bd,OAAOyJ,SAASC,SAAsB,KAAO,MADlD,cAEI1J,OAAOyJ,SAASE,KAAKC,SAAS,cAC1B,iBACA5J,OAAOyJ,SAASI,SAJxB,oBAKclM,EAAM2E,YAAYjD,aAEhC2N,GAAa5F,KACbA,IAAkB0C,WAAW,YAAa,CACxCC,SACAC,SACAC,UAAU,IAEZ7C,IAAkB8C,GAAG,kBAAkB,SAAAlJ,GACrC,IAAIsP,GAC+C,GAAjD3S,EAAM2E,YAAYkC,UAAU+L,QAAQvP,EAAK1C,IACvC0C,EAAK1C,IAAMX,EAAM2E,YAAYxD,WAAW2F,IAAM6L,EAChDlJ,IAAkB0C,WAAW,gBAAiB9I,EAAK1C,IAEnDX,EAAM2E,YAAYxD,WAAW2F,IAAM9G,EAAMmS,OAAOrL,IAChDnC,EAAYxD,WAAW2F,IAAMzD,EAAK1C,IAElCoE,aACE,SAAA8N,GAAC,OACC,iCACGxP,EAAKwB,MADR,iBAC6B,IAC3B,eAACiO,EAAA,EAAD,CACE5T,MAAM,UACNsB,QAAS,kBAyLAuS,EAzLuBF,EAAElS,GAyLfqS,EAzLmB3P,EAAK1C,GA0L3D8I,IAAkB0C,WAAW,gBAAiB6G,QAC9CjO,IAAMkO,QAAQF,GAFhB,IAA2BA,EAAUC,GA3LrB,oBAMA,eAACF,EAAA,EAAD,CACE5T,MAAM,UACNsB,QAAS,kBAwLAuS,EAxLuBF,EAAElS,GAwLfqS,EAxLmB3P,EAAK1C,GAyL3D8I,IAAkB0C,WAAW,gBAAiB6G,QAC9CjO,IAAMkO,QAAQF,GAFhB,IAA2BA,EAAUC,GA1LrB,0BAQJ,CACEE,KAAM,eACNC,SAAU,SAKlB1J,IAAkB8C,GAAG,uBAAuB,SAAAC,GACtCxM,EAAMmS,OAAOrL,IAAM0F,EAAQ7L,KAE7BoE,YAAM,8BAA+B,CAAEmO,KAAO,iBAC9CjT,EAAQQ,KAAK,SAGjBgJ,IAAkB8C,GAAG,aAAa,SAAAC,GAKhC,GAJsB,GAAlByC,IACFC,GAAkB,GAClBS,GAAUhF,QAAQwC,UAAY0C,GAAYlF,SAExC6B,EAAQ7L,IAAMX,EAAMmS,OAAOrL,GAAI,CACjC,IAAMsM,EAAW,GACjB5G,EAAQ6G,MAAMC,SAAQ,SAAAjQ,GACpB,GAAIA,EAAK,KAAOrD,EAAMmS,OAAOrL,KACtB+E,QAAQoF,GAAStG,QAAQ4I,MAAK,SAAA/R,GAAC,OAAIA,EAAEgS,QAAUnQ,EAAK,OAAM,CAC7D,IAAM4F,EA+JtB,SAAqBwK,EAAcC,EAAUvM,GAC3C,IAAM8B,EAAO,IAAI0K,IAAK,CACpBC,WAAW,EACXC,SAAS,EACT1M,WAWF,OARA8B,EAAKsD,GAAG,UAAU,SAAAuH,GAChBrK,IAAkB0C,WAAW,iBAAkB,CAC7CsH,eACAC,WACAI,cAIG7K,EA9KoB8K,CACX1Q,EAAK,GACLrD,EAAMmS,OAAOrL,GACb+I,GAAYlF,SAEdsG,GAAStG,QAAQlK,KAAK,CACpB+S,OAAQnQ,EAAK,GACb2Q,SAAU3Q,EAAK,GACf+I,MAAO/I,EAAK,GACZgJ,MAAOhJ,EAAK,GACZ1B,MAAM,EACNsH,SAEFmK,EAAS3S,KAAK,CACZ+S,OAAQnQ,EAAK,GACb2Q,SAAU3Q,EAAK,GACf+I,MAAO/I,EAAK,GACZgJ,MAAOhJ,EAAK,GACZ1B,MAAM,EACNsH,aAKRmG,EAASgE,OAIb3J,IAAkB8C,GAAG,eAAe,SAAAC,GAClC,GAAIA,EAAQyH,SAAWjU,EAAMmS,OAAOrL,KAE/B+E,QACCoF,GAAStG,QAAQ4I,MAAK,SAAA/R,GAAC,OAAIA,EAAEgS,QAAUhH,EAAQ0H,OAAO,OAExD,CACA,IAAMjL,EA8IlB,SAAkBkL,EAAgBD,EAAQ/M,GACxC,IAAM8B,EAAO,IAAI0K,IAAK,CACpBC,WAAW,EACXC,SAAS,EACT1M,WAEEuM,EAAWQ,EAAO,GAOtB,OANAjL,EAAKsD,GAAG,UAAU,SAAAuH,GAChBrK,IAAkB0C,WAAW,mBAAoB,CAAE2H,SAAQJ,gBAG7DzK,EAAK6K,OAAOK,GAELlL,EA3JgBmL,CACX5H,EAAQsH,OACRtH,EAAQ0H,OACRrE,GAAYlF,SAEd5F,YAAM,GAAD,OAAIyH,EAAQ0H,OAAO,GAAnB,qBAA0C,CAAEhB,KAAM,iBACvDjC,GAAStG,QAAQlK,KAAK,CACpB+S,OAAQhH,EAAQ0H,OAAO,GACvBF,SAAUxH,EAAQ0H,OAAO,GACzB9H,MAAOI,EAAQ0H,OAAO,GACtB7H,MAAOG,EAAQ0H,OAAO,GACtBvS,MAAM,EACNsH,SAGF,IAAIoL,EAAU,CACZb,OAAQhH,EAAQ0H,OAAO,GACvBF,SAAUxH,EAAQ0H,OAAO,GACzB9H,MAAOI,EAAQ0H,OAAO,GACtB7H,MAAOG,EAAQ0H,OAAO,GACtBvS,MAAM,EACNsH,QAGFmG,EAAS,GAAD,mBAAKD,GAAL,CAAYkF,SAM1B5K,IAAkB8C,GAAG,6BAA6B,SAAAC,GAC5CA,EAAQyH,SAAWjU,EAAMmS,OAAOrL,IACrBmK,GAAStG,QAAQ2J,MAAK,SAAAC,GAAC,OAAIA,EAAEf,SAAWhH,EAAQ7L,MACxDsI,KAAK6K,OAAOtH,EAAQsH,WAI7BrK,IAAkB8C,GAAG,aAAa,SAAA5L,GAChC,IAAM0T,EAAUpD,GAAStG,QAAQ2J,MAAK,SAAAC,GAAC,OAAIA,EAAEf,SAAW7S,KACpD0T,IACFtP,YAAM,GAAD,OAAIsP,EAAQL,SAAZ,UAA8B,CAAEd,KAAM,iBAE3CmB,EAAQpL,KAAKuL,WAEf,IAAMpB,EAAWnC,GAAStG,QAAQ+G,QAAO,SAAA6C,GAAC,OAAIA,EAAEf,SAAW7S,KAC3DsQ,GAAStG,QAAUyI,EACnBhE,EAASgE,MAGX3J,IAAkB8C,GAAG,oBAAoB,SAAAC,GAMvCA,EAAQnJ,KAAOiF,KAAKC,MAAMiE,EAAQnJ,MAEhCrD,EAAMmS,OAAO/Q,YAAcoL,EAAQnJ,KAAKjC,YACvCsP,IAED3L,YAAM,GAAD,OAAIyH,EAAQnJ,KAAKjC,WAAjB,cAAiCoL,EAAQhE,SAAW,CACvD0K,KAAM,iBAGVlT,EAAM0L,WAAWc,MAGnB/C,IAAkB8C,GAAG,gBAAgB,SAAAC,GACnC,GAAIA,EAAQ7L,IAAMX,EAAMmS,OAAOrL,GAC7BoJ,GAAS1D,EAAQhH,WACZ,CACL,IAAIiP,EAAWxD,GAAStG,QACxB,IAAK,IAAI+J,KAAKD,EACZ,GAAIA,EAASC,GAAGlB,QAAUhH,EAAQ7L,GAAI,CACpC8T,EAASC,GAAGtI,MAAQI,EAAQhH,MAC5B,MAGJ4J,EAAS,YAAIqF,IACbxD,GAAStG,QAAU8J,MAIvBhL,IAAkB8C,GAAG,gBAAgB,SAAAC,GACnC,GAAIA,EAAQ7L,IAAMX,EAAMmS,OAAOrL,GAC7BgK,GAAStE,EAAQhH,WACZ,CACL,IAAIiP,EAAWxD,GAAStG,QACxB,IAAK,IAAI+J,KAAKD,EACZ,GAAIA,EAASC,GAAGlB,QAAUhH,EAAQ7L,GAAI,CACpC8T,EAASC,GAAGrI,MAAQG,EAAQhH,MAC5B,MAGJ4J,EAAS,YAAIqF,IACbxD,GAAStG,QAAU8J,UAK1B,CAAC1D,GAAWhC,IA0Df,SAAS4F,KACP1E,GAAgBJ,GAAYlF,QAAQ6H,iBAAiB,IACrDJ,UAAUC,aACPuC,gBAAgB,CAAExI,MAAO,CAAE7M,OAAQ,UAAY8M,MAAO,SACtDkG,MAAK,SAAAsC,GACJ,IAAK,IAAIC,EAAQ,EAAGA,EAAQ7D,GAAStG,QAAQhC,OAAQmM,IACnD7D,GAAStG,QAAQmK,GAAO7L,KAAK8L,aAC3BlF,GAAYlF,QAAQ6H,iBAAiB,GACrCqC,EAAarC,iBAAiB,GAC9B3C,GAAYlF,SAGhByE,EAAS,YAAI6B,GAAStG,UACtBkF,GAAYlF,QAAQqK,YAAYnF,GAAYlF,QAAQ6H,iBAAiB,IACrE3C,GAAYlF,QAAQsK,SAASJ,EAAarC,iBAAiB,IAC3DqC,EAAarC,iBAAiB,GAAG0C,QAAU,WACzC,IAAK,IAAIJ,EAAQ,EAAGA,EAAQ7D,GAAStG,QAAQhC,OAAQmM,IACnD7D,GAAStG,QAAQmK,GAAO7L,KAAK8L,aAC3BlF,GAAYlF,QAAQ6H,iBAAiB,GACrCxC,GACAH,GAAYlF,SAGhByE,EAAS,YAAI6B,GAAStG,UACtBkF,GAAYlF,QAAQqK,YAClBnF,GAAYlF,QAAQ6H,iBAAiB,IAEvC3C,GAAYlF,QAAQsK,SAASjF,QAKrC,SAAStD,KACO,IAAXlE,GAAeiB,IAAkB0C,WAAW,eAAgB3D,GAC/DiE,EAAW,IAyBb,SAAS0I,KACPtE,IAAmB,GACnBF,IAAgBD,IAGlB,SAAS0E,KACPzE,IAAe,GACfE,IAAoBD,IAoBtB,SAASyE,KACPxF,GAAYlF,QAAQ6H,iBAAiB,GAAG8C,SAAWzF,GAAYlF,QAAQ6H,iBAAiB,GACrF8C,QACCvG,EACFmB,IAAU9D,IAEV3C,IAAkB0C,WAAW,gBAGjC,SAASoJ,KACP1F,GAAYlF,QAAQ6K,iBAAiB,GAAGF,SAAWzF,GAAYlF,QAAQ6K,iBAAiB,GACrFF,QAECvG,EACF+B,IAAUzE,IAEV5C,IAAkB0C,WAAW,gBAUjC,OAAO4E,GACJhC,GAAYE,EAuPX,iCACE,uBAAK1O,UAAWJ,GAAQgO,WAAxB,UACE,eAAC,GAAD,CAEE/B,MAAOA,GACPC,MAAOA,GACP0B,WAAYD,GAAY8D,KAAKC,KAAK,EAAIZ,GAAStG,QAAQhC,QACvDrJ,MAAOmQ,GACP9N,KAAMA,GACNjC,OAAQ4P,GACR1B,MAAO+B,GACPlK,KAAMzF,EAAMmS,OAAO/Q,WACnB4M,SAAUiD,GAAStG,QAAQhC,QATtB3I,EAAMmS,OAAOrL,IAWpB,iCACE,eAACgM,EAAA,EAAD,CAAQ2C,SAAUxG,EAAgBzO,QAAS6U,GAA3C,SACGjJ,GAAQ,eAAC,IAAD,IAAmB,eAAC,IAAD,MAE9B,eAAC0G,EAAA,EAAD,CAAQ2C,SAAUxG,EAAgBzO,QAAS+U,GAA3C,SACGlJ,GAAQ,eAAC,IAAD,IAAc,eAAC,IAAD,MAEzB,eAACyG,EAAA,EAAD,CAAQtS,QAxTlB,WACKR,EAAMmS,OAAOrL,IAAMnC,EAAYxD,WAAW2F,IAAI/B,IAAMC,QAAQ,2CAC/DkK,GAAkB,GAClBF,GAAW,IAqT8ByG,SAAUxG,EAA3C,6BAKJ,eAAC,KAAD,CAAUhI,SAAS,OAhRrB,uBAAK1G,UAAWJ,GAAQiO,SAAxB,UACE,eAAC,IAAD,IACA,uBAAK7N,UAAWJ,GAAQkO,gBAAxB,UACE,gBAACV,EAAA,EAAD,CAEE3C,WAAS,EACT3L,QAAS,EACTkB,UAAWJ,GAAQkE,MACnByG,IAAK8E,GACLvO,MAAO,CACLqU,oBAAoB,UAAD,OAAYvF,GAAZ,SACnB3N,SAAUgO,GAAc,WAAa,IARzC,UAWE,gBAAC7C,EAAA,EAAD,CAAMpN,UAAWJ,GAAQuO,cAAzB,UACE,eAACoE,EAAA,EAAD,CAAQtS,QAAS6U,GAAjB,SACGjJ,GAAQ,eAAC,IAAD,IAAmB,eAAC,IAAD,MAE9B,eAAC0G,EAAA,EAAD,CAAQtS,QAAS+U,GAAjB,SACGlJ,GAAQ,eAAC,IAAD,IAAc,eAAC,IAAD,MAEzB,eAACyG,EAAA,EAAD,CAAQtS,QAAS2U,GAAjB,SACE,eAAC,IAAD,MAEF,eAACrC,EAAA,EAAD,CACEvS,UAAWJ,GAAQwO,cACnBnO,QAAS4U,GAFX,SAIE,eAAC,KAAD,MAEF,eAACtC,EAAA,EAAD,CACEzR,MAAO,CAAEvC,gBAAiB,OAC1B0B,QAzCd,YACiBsP,IAAYA,GAASwB,aAC7BnN,KAAI,SAAAoN,GACTA,EAAMC,UAERvR,EAAQQ,KAAR,gBAAsBkE,EAAYhE,MAkCxB,SAIE,eAAC,IAAD,MAEF,eAACmS,EAAA,EAAD,CAAQvS,UAAWJ,GAAQwO,cAAenO,QAASmU,GAAnD,SACE,eAAC,KAAD,MAEF,eAAC7B,EAAA,EAAD,CACEvS,UAAWJ,GAAQwO,cACnBnO,QAAS,kBAAM8P,IAAuB,IAFxC,SAIE,eAAC,IAAD,MAEF,eAACwC,EAAA,EAAD,CACE,gBAAc,kBACd6C,QAAQ,SAMRpV,UAAWJ,GAAQyO,aAEnBpO,QAjOe,SAAA8E,GAC3B6L,GAAkB7L,EAAMsQ,gBAiOZ5O,UAAW,eAAC,KAAD,MAEb,gBAAC6O,EAAA,EAAD,CACElV,GAAG,kBACHmV,SAAU5E,GAEVjM,KAAM4G,QAAQqF,IACdtP,QArOe,WAC3BuP,GAAkB,OAqON9P,MAAO,CAAE0U,aAAc,QANzB,UASE,eAACC,EAAA,EAAD,CAAUxV,QAAS4U,GAAnB,0BAGA,eAACY,EAAA,EAAD,CAAUxV,QAASmU,GAAnB,0BACA,eAACqB,EAAA,EAAD,CAAUxV,QAAS,kBAAM8P,IAAuB,IAAhD,gCAKHD,IACC,eAAC,IAAD,CACE1O,KAAM0O,GACNpJ,SAAS,EACTrF,QAAS,kBAAM0O,IAAuB,MAGzCE,IAAe,eAAC,KAAD,CAAUvJ,SAAS,IACnC,eAAC,GAAD,CAEEmF,MAAOA,GACPC,MAAOA,GACP0B,WAAYD,GAAY8D,KAAKC,KAAK,EAAIZ,GAAStG,QAAQhC,QACvDrJ,MAAOmQ,GACP/P,OAAQ4P,GACR3N,KAAMA,GACNiM,MAAO+B,GACPlK,KAAMzF,EAAMmS,OAAO/Q,WACnB4M,SAAUiD,GAAStG,QAAQhC,QATtB3I,EAAMmS,OAAOrL,GAAK,KAuBxBmK,GAAStG,QAAQxG,KAAI,SAAA8E,GACpB,OACE,eAAC,GAAD,CAEEmD,MAAOnD,EAAKmD,MACZC,MAAOpD,EAAKoD,MACZ0B,WACED,GAAY8D,KAAKC,KAAK,EAAIZ,GAAStG,QAAQhC,QAE7CrJ,MAAOmQ,GACP/P,OAAQ4P,GACR1B,MAAO,KACPjM,KAAMsH,EAAKtH,KACXsH,KAAMA,EACNxD,KAAMwD,EAAK+K,SACXhG,SAAUiD,GAAStG,QAAQhC,QAZtBM,EAAKuK,cAiBjB9C,GACC,gBAAC/C,EAAA,EAAD,CAAMpN,UAAWJ,GAAQmO,QAAzB,UACE,eAACX,EAAA,EAAD,CAAMpN,UAAWJ,GAAQsO,aAAzB,SACE,eAAClN,EAAA,EAAD,UACE,eAAC,IAAD,CAAef,QAAS2U,SAG5B,eAAC,KAAD,IACA,eAACxH,EAAA,EAAD,CAAMpN,UAAWJ,GAAQ8V,aAAzB,SACE,eAACC,EAAA,EAAD,CACEhX,MAAM,YACNqB,UAAWJ,GAAQiF,UACnBC,SAnNhB,SAA8BC,GAC5BmH,EAAWnH,EAAMC,OAAOC,QAmNVmH,WA1NhB,SAAyBrH,GACN,UAAdA,EAAMsH,KACPF,MAyNYlH,MAAOgD,EACP/C,KAAK,UACLzB,QAAQ,WACR0B,cAAc,EACdxE,MAAM,GACNyE,YAAY,iBACZC,WAAY,CACVC,aACE,eAACsQ,EAAA,EAAD,CAAgB3T,SAAS,MAAzB,SACE,eAACjB,EAAA,EAAD,CAAYf,QAASkM,GAArB,SACE,eAAC0J,EAAA,EAAD,UACE,eAAC,IAAD,kBAUhB,GAEDxF,GACC,gBAACjD,EAAA,EAAD,CAAMpN,UAAWJ,GAAQmO,QAAzB,UACE,eAACX,EAAA,EAAD,CAAMpN,UAAWJ,GAAQsO,aAAzB,SACE,eAAClN,EAAA,EAAD,UACE,eAAC,IAAD,CAAef,QAAS4U,SAG5B,gBAACzH,EAAA,EAAD,WACE,eAAC0I,EAAA,EAAD,UACE,gBAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAQtX,MAAM,UAAd,SACGc,EAAMmS,OAAO/Q,WAAW,OAG7B,eAACqV,EAAA,EAAD,CACE5T,QAAS7C,EAAMmS,OAAO/Q,aAExB,eAACG,EAAA,EAAD,CAAYf,QAAS6U,GAArB,SACGjJ,GAAQ,eAAC,IAAD,IAAmB,eAAC,IAAD,MAE9B,eAAC7K,EAAA,EAAD,CAAYf,QAAS+U,GAArB,SACGlJ,GAAQ,eAAC,IAAD,IAAc,eAAC,IAAD,MAEzB,eAAC9K,EAAA,EAAD,CAAYf,QAAS,WAnOjCmB,GACF4O,IAAQ,IAERA,IAAQ,GACJZ,GAAUhF,UACZgF,GAAUhF,QAAQwC,UAAY0C,GAAYlF,WA8N9B,SACGhJ,GAAO,eAAC,KAAD,IAAiB,eAAC,KAAD,QAhBf,eAoBhB,eAAC+U,EAAA,EAAD,IACA,eAAC/I,EAAA,EAAD,CAAM1C,MAAI,EAACC,GAAI,GAAI7J,MAAO,CAAEoD,QAAS,QAArC,SACE,eAACyR,EAAA,EAAD,CACEvV,GAAG,uBACHO,MAAM,SACNuE,KAAM2L,GACN5L,MAAO4L,GACP/L,SA3WO,SAAA7D,GACvB6P,GAAc7P,EAAE+D,OAAOC,QA2WPxB,QAAQ,WACR2S,WAAS,MAGb,eAACD,EAAA,EAAD,IACA,eAACL,EAAA,EAAD,UACGpF,GAAStG,QAAQxG,KAAI,SAAA8E,GACpB,OACE,gBAACqN,EAAA,EAAD,CAAUjV,MAAO,CAAC1B,QAASsJ,EAAK+K,SAAS/H,SAASmF,IAAc,GAAK,QAArE,UACE,eAACmF,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAQtX,MAAM,UAAd,SAAyB+J,EAAK+K,SAAS,OAEzC,eAACyC,EAAA,EAAD,CAAc5T,QAASoG,EAAK+K,SAA5B,wBAGA,eAACzS,EAAA,EAAD,CAAYkU,UAAQ,EAApB,SACGxM,EAAKmD,MACJ,eAAC,IAAD,CAAcqJ,UAAQ,IAEtB,eAAC,IAAD,CAAiBA,UAAQ,MAG7B,eAAClU,EAAA,EAAD,CAAYkU,UAAQ,EAApB,SACGxM,EAAKoD,MACJ,eAAC,IAAD,CAASoJ,UAAQ,IAEjB,eAAC,IAAD,CAAYA,UAAQ,MAGxB,eAAClU,EAAA,EAAD,CAAYf,QAAS,kBA1S3C,SAAyByI,GACvB,IAAIwL,EAAWxD,GAAStG,QACxB,IAAK,IAAI+J,KAAKD,EACZ,GAAIA,EAASC,GAAGlB,QAAUvK,EAAKuK,OAAQ,CACrCiB,EAASC,GAAG/S,MAAQ8S,EAASC,GAAG/S,KAChC,MAGJyN,EAAS,YAAIqF,IACbxD,GAAStG,QAAU8J,EAiS4BmC,CAAe3N,IAA1C,SACGA,EAAKtH,KAAO,eAAC,KAAD,IAAiB,eAAC,KAAD,QAtBgD,wBA+B5F,SAmCR,wDA8BWuB,eAAWC,aA1BF,SAAAC,GACtB,MAAO,CACL+O,OAAQ/O,EAAME,KAAKD,KACnBsB,YAAavB,EAAM1C,KAAKiE,YACxByC,MAAOhE,EAAME,KAAK8D,MAClBmD,SAAUnH,EAAM1C,KAAK6J,SACrBsM,cAAezT,EAAM1C,KAAKmW,kBAIH,SAAApT,GACzB,MAAO,CACL6C,eAAgB,SAAC3F,EAAIiD,GACnB,OAAOH,EAAS6C,YAAe3F,EAAIiD,KAErC8G,eAAgB,SAAC/J,EAAI2I,GACnB,OAAO7F,EAASiH,YAAe/J,EAAI2I,KAErCoC,WAAY,SAAAlD,GACV,OAAO/E,EAASiI,YAAWlD,KAE7BsO,iBAAkB,SAAAhJ,GAChB,OAAOrK,EAASqT,YAAiBhJ,QAIb3K,CAA6C2L,KCj+BjEiI,G,4JACJ,WACE,OACE,sBAAK1V,MAAO,CAAC3B,OAAO,QAASa,UAAU,YAAvC,SACE,eAAC,GAAD,U,GAJgByW,aAuBT7T,uBAbS,SAAAC,GACtB,MAAO,CACLC,KAAMD,EAAME,KAAKD,SAIM,SAAAI,GACzB,MAAO,CACLwT,WAAY,WACV,OAAOxT,EAASwT,mBAIP9T,CAA6C4T","file":"static/js/6.9797decc.chunk.js","sourcesContent":["import {\n  Card,\n  CardActions,\n  Chip,\n  IconButton,\n  Typography\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport React, { Component, useEffect, useState } from 'react'\nimport AddUserModal from './addUser'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport LaunchIcon from '@material-ui/icons/Launch'\nimport PersonAddIcon from '@material-ui/icons/PersonAdd'\n\nconst useStyles = makeStyles(theme => ({\n  Card: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    margin: theme.spacing(0.4),\n    width: '80%',\n    cursor: 'pointer',\n    justifyContent: 'space-between'\n  },\n  roomCardMainDiv: {\n    height: '100%',\n    width: '100%',\n    display: 'grid',\n    alignItems: 'center',\n    justifyItems: 'center'\n  },\n  icons: {\n    color: theme.palette.secondary.contrastText,\n  }\n}))\n\nconst ChatRoomCard = props => {\n  const history = useHistory()\n  const classes = useStyles()\n  const [showAddUserModal, setShowAddUserModal] = useState(false)\n\n  function openRoom (e) {\n    e.stopPropagation()\n    history.push(`/video/${props.room.id}/${props.room.sharing_id}`)\n  }\n\n  function handleAddUser (e) {\n    e.stopPropagation()\n    setShowAddUserModal(true)\n  }\n\n  return (\n    <div className={classes.roomCardMainDiv}>\n      <Card\n        className={classes.Card}\n        onClick={() => history.push(`/room/${props.room.id}`)}\n      >\n        <CardActions>\n          <Typography onClick={() => setShowAddUserModal(true)} gutterBottom>\n            {props.room && props.room.room_name}\n          </Typography>\n          {props.invite && (\n            <Chip label={`creater : ${props.room.created_by.first_name}`} />\n          )}\n          <div style={{ marginInlineStart: 'auto' }}>\n            {!props.invite && (\n              <IconButton onClick={handleAddUser}>\n                <PersonAddIcon className={classes.icons} />\n              </IconButton>\n            )}\n            <IconButton onClick={openRoom}>\n              <LaunchIcon className={classes.icons} />\n            </IconButton>\n          </div>\n        </CardActions>\n      </Card>\n      {showAddUserModal && (\n        <AddUserModal\n          room={props.room}\n          onClick={e => e.stopPropagation()}\n          show={showAddUserModal}\n          onClose={() => setShowAddUserModal(false)}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default ChatRoomCard\n","import React, { Component, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory, withRouter } from 'react-router-dom'\nimport {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Grid,\n  Paper,\n  StepLabel,\n  TextField,\n  Typography\n} from '@material-ui/core'\nimport { createChatRoom, getAllRooms } from '../../actions/chatRoomAction'\nimport ChatRoomCard from '../common/chatRoomCard'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles(theme => ({\n  roomsList: {\n    width: '80%',\n    display: 'grid',\n    justifyItems: 'center',\n    overflow: 'hidden',\n    paddingBottom: theme.spacing(1),\n    backgroundColor: theme.palette.background,\n    gridTemplateRows: 'min-content',\n    height: '80%'\n  },\n  list: {\n    overflowY: 'scroll',\n    maxHeight: window.screen.availHeight / 1.3,\n    width: '100%',\n    display: 'grid',\n    justifyItems: 'center',\n    position: 'absolute',\n    [theme.breakpoints.down('xs')]: {\n      maxHeight: window.screen.availHeight / 2,\n    }\n  },\n  listHeading: {\n    top: 0,\n    backgroundColor: theme.palette.primary.main,\n    width: '100%',\n    height: '50%',\n    marginLeft: '10%'\n  },\n  listWrapper: {\n    position: 'relative',\n    width: '100%',\n    height: '90%',\n    overflow: 'hidden',\n    display: 'grid'\n  },\n  webkitScrollbar: {\n    width: 0 /* Remove scrollbar space */,\n    background: 'transparent' /* Optional: just make scrollbar invisible */\n  },\n  /* Optional: show position indicator in red */\n  webkitScrollbarThumb: {\n    background: '#FF0000'\n  }\n}))\n\nconst RoomsList = props => {\n  const history = useHistory()\n  useEffect(() => {\n    props.getAllRooms()\n  }, [])\n  const classes = useStyles()\n\n  return (\n    <Card className={classes.roomsList}>\n      <CardContent color='secondary' className={classes.listHeading}>\n        <Typography variant='h5'>{props.heading}</Typography>\n      </CardContent>\n      <CardContent className={classes.listWrapper}>\n      <div className={classes.list}>\n        {props.rooms.map(room => (\n          <ChatRoomCard key={room.id} room={room} invite={props.heading==\"Your Invites\"} />\n        ))}\n      </div>\n      </CardContent>\n    </Card>\n  )\n}\n\nconst mapStateToprops = state => {\n  return {\n    user: state.auth.user,\n    roomsCreated: state.room.roomsCreated,\n    roomsInvited: state.room.roomsInvited\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    createChatRoom: (data, handleSuccess) => {\n      return dispatch(createChatRoom(data, handleSuccess))\n    },\n    getAllRooms: () => {\n      return dispatch(getAllRooms())\n    }\n  }\n}\n\nexport default withRouter(\n  connect(mapStateToprops, mapDispatchToprops)(RoomsList)\n)\n","import {\n  IconButton,\n  InputAdornment,\n  Modal,\n  SvgIcon,\n  TextField\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport Fade from '@material-ui/core/Fade'\nimport { connect } from 'react-redux'\nimport SendIcon from '@material-ui/icons/Send'\nimport rooms from '../../views/rooms'\nimport { useState } from 'react'\nimport { updateRoomUsers } from '../../actions/chatRoomAction'\nimport toast, { Toaster } from 'react-hot-toast'\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: theme.palette.secondary.main,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  textField: {}\n}))\n\nconst AddUserModal = props => {\n  const classes = useStyles()\n  const { show, room, onClose, label = 'Add Participant', ...restProps } = props\n  const [email, setEmail] = useState('')\n  function handleEmailSend () {\n    const data = {\n      \"email\": email\n    }\n    props.updateRoomUsers(data, props.room.id, handleSuccess)\n  }\n\n  function handleSuccess () {\n    toast.success('Added user')\n    setEmail('')\n  }\n\n  function handleEmailChange (event) {\n    setEmail(event.target.value)\n  }\n  return (\n    <Modal\n      aria-labelledby='transition-modal-title'\n      aria-describedby='transition-modal-description'\n      className={classes.modal}\n      open={show}\n      centered\n      onClose={onClose}\n    >\n      <Fade in={show}>\n        <div className={classes.paper}>\n        <Toaster />\n          <h2 id='transition-modal-title'>{props.room.room_name}</h2>\n          <div id='transition-modal-description'>\n            <TextField\n              color='secondary'\n              className={classes.textfield}\n              onChange={handleEmailChange}\n              value={email}\n              name='email'\n              variant='outlined'\n              autoComplete={false}\n              label=''\n              placeholder='Enter user email'\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position='end'>\n                    <IconButton  onClick={handleEmailSend}>\n                      <SvgIcon>\n                        <SendIcon />\n                      </SvgIcon>\n                    </IconButton>\n                  </InputAdornment>\n                )\n              }}\n            />\n          </div>\n        </div>\n      </Fade>\n    </Modal>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentRoom: state.room.currentRoom\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    updateRoomUsers: (data, id, handleSuccess) => {\n      return dispatch(updateRoomUsers(data, id, handleSuccess))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToprops)(AddUserModal)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory, withRouter } from 'react-router-dom'\nimport { Button, Typography } from '@material-ui/core'\nimport { createChatRoom, getAllRooms } from '../../actions/chatRoomAction'\nimport { makeStyles } from '@material-ui/styles'\nimport RoomsList from '../rooms/roomsList'\n\nconst useStyles = makeStyles(theme => ({\n  roomDetailsDiv: {\n    width: '100%',\n    height: '60%'\n  },\n  roomList: {\n    height: '100%',\n    width: '100%',\n    display: 'grid',\n    justifyItems: 'center',\n    [theme.breakpoints.down('xs')]: {\n      display: 'none'\n    }\n  },\n  title: {\n    textAlign: 'center'\n  }\n}))\n\nconst RoomDetails = props => {\n  const history = useHistory()\n  useEffect(() => {\n    props.getAllRooms()\n  }, [])\n  const classes = useStyles()\n\n  return (\n    <div className={classes.roomDetailsDiv}>\n      <div className={classes.roomList}>\n        <RoomsList\n          heading='Your rooms'\n          rooms={props.roomsCreated.slice(0, 2)}\n        />\n        <RoomsList\n          heading='Your Invites'\n          rooms={props.roomsInvited.slice(0, 2)}\n        />\n      </div>\n      <Typography variant='h6' className={classes.title}>\n        <Button onClick={() => history.push('/rooms')}>View All Rooms</Button>\n      </Typography>\n    </div>\n  )\n}\n\nconst mapStateToprops = state => {\n  return {\n    user: state.auth.user,\n    roomsCreated: state.room.roomsCreated,\n    roomsInvited: state.room.roomsInvited\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    createChatRoom: (data, handleSuccess) => {\n      return dispatch(createChatRoom(data, handleSuccess))\n    },\n    getAllRooms: () => {\n      return dispatch(getAllRooms())\n    }\n  }\n}\n\nexport default withRouter(\n  connect(mapStateToprops, mapDispatchToprops)(RoomDetails)\n)\n","import { Button, Card, Grid, Link, Paper } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport React, { Component, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect, useHistory } from 'react-router'\nimport { logoutUser } from '../actions/authAction'\nimport { getAllRooms } from '../actions/chatRoomAction'\nimport RoomDetails from '../components/homeComponents/roomDetails'\nimport RoomsList from '../components/rooms/roomsList'\n\nconst useStyles = makeStyles(theme => ({\n  Rooms: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    justifyItems: 'center',\n    padding: theme.spacing(2),\n    alignItems: 'center',\n    position: 'relative',\n    height: '100%',\n    [theme.breakpoints.down('xs')]: {\n      gridAutoFlow: 'row'\n    }\n  }\n}))\n\nconst Rooms = props => {\n  useEffect(() => {\n    props.getAllRooms()\n  }, [])\n  const classes = useStyles()\n  return (\n    <Grid className={classes.Rooms}>\n      <RoomsList rooms={props.roomsCreated} heading='Your Rooms' />\n      <RoomsList rooms={props.roomsInvited} heading='Your Invites' />\n    </Grid>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user,\n    roomsCreated: state.room.roomsCreated,\n    roomsInvited: state.room.roomsInvited\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllRooms: () => {\n      return dispatch(getAllRooms())\n    }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Rooms)\n","import React, { Component, useEffect, useState } from 'react'\nimport { connect, useSelector } from 'react-redux'\nimport { Link, useHistory, withRouter } from 'react-router-dom'\nimport {\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  Paper,\n  StepLabel,\n  TextField,\n  Typography,\n  ListItemText,\n  List,\n  ListItem,\n  Chip,\n  CardHeader,\n  CardActions\n} from '@material-ui/core'\nimport AddUserModal from '../common/addUser'\nimport {\n  createChatRoom,\n  getAllRooms,\n  getRoomDetails\n} from '../../actions/chatRoomAction'\nimport { makeStyles } from '@material-ui/styles'\nimport VideoCallIcon from '@material-ui/icons/VideoCall'\nimport PersonAddIcon from '@material-ui/icons/PersonAdd'\nimport { getModifiedDate } from '../../helpers/helperFunctions'\n\nconst useStyles = makeStyles(theme => ({\n  roomDataDiv: {\n    width: '100%',\n    display: 'grid',\n    justifyItems: 'center',\n    alignItems: 'center'\n  }\n}))\n\nconst RoomData = props => {\n  const history = useHistory()\n  useEffect(() => {\n    // props.getRoomDetails()\n  }, [])\n  const classes = useStyles()\n  const [showAddUserModal, setShowAddUserModal] = useState(false)\n  const currentRoom = useSelector(state => state.room.currentRoom)\n  function openRoom () {\n    history.push(`/video/${currentRoom.id}/${currentRoom.sharing_id}`)\n  }\n  return (\n    <div className={classes.roomDataDiv}>\n      <Card style={{ textAlign: 'center', maxWidth: '60%' }}>\n        <CardHeader\n          // avatar={\n          //   <Avatar aria-label=\"recipe\" className={classes.avatar}>\n          //     R\n          //   </Avatar>\n          // }\n          // action={\n          //   <IconButton aria-label=\"settings\">\n          //     <MoreVertIcon />\n          //   </IconButton>\n          // }\n          title={currentRoom && currentRoom.room_name}\n          subheader={getModifiedDate(currentRoom.created_on)}\n        />\n        {/* <CardHeader color='secondary' className={classes.roomName}>\n          <Typography style={{ textAlign: 'center' }} variant='h4'>\n            {currentRoom && currentRoom.room_name}\n          </Typography>\n        </CardHeader> */}\n        <CardContent>\n          <Typography style={{ textAlign: 'center' }} variant='h5'>\n            Admin\n          </Typography>\n          <Chip\n            size='medium'\n            color='default'\n            label={`${currentRoom.id && currentRoom.created_by.email}`}\n          />\n        </CardContent>\n        <CardContent>\n          <Typography style={{ textAlign: 'center' }} variant='h5'>\n            All Users\n          </Typography>\n          {currentRoom.id &&\n            currentRoom.all_users.map(user => (\n              <Chip\n                style={{ margin: '0.2rem' }}\n                size='medium'\n                color='secondary'\n                label={`${user.email}`}\n              />\n            ))}\n        </CardContent>\n        <CardActions style={{ justifyContent: 'center' }}>\n          {currentRoom.id && currentRoom.created_by.pk == props.user.pk && (\n            <Button\n              variant='contained'\n              color='secondary'\n              className={classes.createRoomButton}\n              startIcon={<PersonAddIcon />}\n              onClick={() => setShowAddUserModal(true)}\n            >\n              Add User\n            </Button>\n          )}\n          {props.meeting && (\n            <Button\n              variant='contained'\n              color='secondary'\n              className={classes.createRoomButton}\n              startIcon={<VideoCallIcon />}\n              onClick={openRoom}\n            >\n              Join Meeting\n            </Button>\n          )}\n          {/* </ListItem> */}\n          {showAddUserModal && (\n            <AddUserModal\n              room={currentRoom}\n              show={showAddUserModal}\n              onClose={() => setShowAddUserModal(false)}\n            />\n          )}\n        </CardActions>\n      </Card>\n    </div>\n  )\n}\n\nconst mapStateToprops = state => {\n  return {\n    user: state.auth.user,\n    currentRoom: state.room.currentRoom\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    createChatRoom: (data, handleSuccess) => {\n      return dispatch(createChatRoom(data, handleSuccess))\n    },\n    getRoomDetails: () => {\n      return dispatch(getRoomDetails())\n    }\n  }\n}\n\nexport default withRouter(\n  connect(mapStateToprops, mapDispatchToprops)(RoomData)\n)\n","import store from '../store'\n\nclass WebSocketService {\n  static instance = null\n  stream = null\n  token = null\n  config  = null\n  callbacks = {}\n\n  static getInstance () {\n    if (!WebSocketService.instance) {\n      WebSocketService.instance = new WebSocketService()\n    }\n    return WebSocketService.instance\n  }\n\n  constructor () {\n    this.socketRef = null\n  }\n\n  connect (chatroom_url) {\n    this.socketRef = new WebSocket(chatroom_url)\n    this.socketRef.onopen = () => {\n      console.log('websocket open')\n    }\n    this.socketRef.onmessage = e => {\n      this.socketNewMessage(e.data)\n    }\n    this.socketRef.onerror = e => {\n      console.log(e)\n    }\n    this.socketRef.onclose = () => {\n      console.log('websockets closed lets reopen')\n    }\n  }\n\n  close () {\n    this.socketRef && this.socketRef.close()\n  }\n\n  on (action, func) {\n    this.callbacks[action] = func;\n  }\n\n  socketNewMessage (data) {\n    const parsedData = JSON.parse(data)\n    var peerusername = parsedData['peer']\n    var action = parsedData['action']\n    var message = parsedData['message']\n    if(Object.keys(this.callbacks).length == 0){\n        return;\n    }\n    this.callbacks[action](message);\n  }\n\n  getSteam () {\n    return this.stream;\n  }\n\n  sendMessage (data) {\n    try {\n      this.socketRef.send(JSON.stringify({ ...data }))\n    } catch (err) {\n      console.log(err.message)\n    }\n  }\n\n  sendSignal(action, message) {\n    try {\n      this.waitForSocketConnection(\n        function () {\n          var jsonStr = JSON.stringify({\n            peer: store.getState().auth.user,\n            action: action,\n            message: message\n          })\n      \n          this.socketRef.send(jsonStr)\n        }.bind(this),\n        1000\n      );\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  state () {\n    return this.socketRef.readyState\n  }\n\n  waitForSocketConnection (callback) {\n    var self = this\n    setTimeout(function () {\n      // Check if websocket state is OPEN\n      if (WebSocketInstance.state() === 1) {\n        callback()\n        return\n      } else {\n        self.waitForSocketConnection(callback)\n      }\n    }, 100) // wait 100 milisecond for the connection...\n  }\n}\n\nconst WebSocketInstance = WebSocketService.getInstance()\n\nexport default WebSocketInstance\n","import React, { useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport { Grid, ListItemText, List, ListItem } from '@material-ui/core'\nimport { getAllMessages } from '../../actions/chatRoomAction'\nimport TimeAgo from 'react-timeago'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles(theme => ({\n  roomChatDiv: {\n    height: '100%'\n  },\n  textfield: {\n    position: 'absolute',\n    bottom: '0px',\n    width: '100%',\n    backgroundColor: theme.palette.primary.main\n  },\n  chatBoxMessages: {\n    padding: '2px',\n    position: 'relative',\n    overflow: 'hidden',\n    height: '85%',\n    width: '100%'\n  },\n  messageList: {\n    maxHeight: '100%',\n    top: 0,\n    left: 0,\n    right: -theme.spacing(2),\n    position: 'absolute',\n    overflowY: 'scroll',\n    [theme.breakpoints.down('md')]: {\n      right: 0\n    }\n  }\n}))\n\nconst ChatBox = React.memo(() => {\n  const messageBox = useRef()\n  const classes = useStyles()\n  const user = useSelector(state => state.auth.user)\n  const messages = useSelector(state => state.room.messages)\n  const dispatch = useDispatch()\n  const { id } = useParams()\n  useEffect(() => {\n    dispatch(getAllMessages(id))\n  }, [])\n  useEffect(() => {\n    if (messageBox.current) {\n      messageBox.current.scrollTop = messageBox.current.scrollHeight\n    }\n  }, [messageBox.current, messages.length])\n  return (\n    <Grid className={classes.chatBoxMessages}>\n      <List ref={messageBox} className={classes.messageList}>\n        {messages.map(msg => (\n          <ListItem key={msg.id}>\n            <Grid container>\n              <Grid item xs={12}>\n                <ListItemText\n                  align={msg.user.pk == user.pk ? 'right' : 'left'}\n                  disableTypography\n                  secondary={\n                    <div>\n                      <span style={{ fontWeight: 'bolder' }}>\n                        {msg.user.first_name}\n                      </span>{' '}\n                      <span\n                        style={{\n                          fontWeight: 'lighter',\n                          fontSize: 'small'\n                        }}\n                      >\n                        <TimeAgo date={msg.created_on} />\n                      </span>\n                    </div>\n                  }\n                ></ListItemText>\n              </Grid>\n              <Grid item xs={12}>\n                <ListItemText\n                  align={msg.user.pk == user.pk ? 'right' : 'left'}\n                  primary={msg.message}\n                ></ListItemText>\n              </Grid>\n            </Grid>\n          </ListItem>\n        ))}\n      </List>\n    </Grid>\n  )\n})\n\nexport default ChatBox\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport {\n  Card,\n  CardContent,\n  IconButton,\n  InputAdornment,\n  SvgIcon,\n  TextField,\n  Typography\n} from '@material-ui/core'\nimport {\n  createChatRoom,\n  getAllMessages,\n  addMessage\n} from '../../actions/chatRoomAction'\nimport WebSocketInstance from '../../websocket/socket'\nimport { makeStyles } from '@material-ui/styles'\nimport SendIcon from '@material-ui/icons/Send'\nimport ChatBox from '../common/chatBox'\n\nconst useStyles = makeStyles(theme => ({\n  roomChatDiv: {\n    position: 'relative',\n    height: '90%',\n    backgroundColor: theme.palette.background.default,\n    [theme.breakpoints.down('md')]: {\n      position: 'absolute',\n      width: '100%',\n      bottom: 0\n    }\n  },\n  textfield: {\n    position: 'absolute',\n    bottom: '0px',\n    width: '100%',\n    backgroundColor: theme.palette.primary.main\n  },\n  chatHeading: {\n    top: '0px',\n    backgroundColor: theme.palette.primary.main\n  },\n  chatBoxMessages: {\n    padding: '2px',\n    position: 'relative',\n    overflow: 'hidden',\n    height: '82%',\n    width: '100%',\n    [theme.breakpoints.down('xs')]: {\n      height: '75%'\n    }\n  },\n  messageList: {\n    maxHeight: '100%',\n    top: 0,\n    left: 0,\n    right: -theme.spacing(2),\n    position: 'absolute',\n    overflowY: 'scroll'\n  }\n}))\n\nconst RoomChat = props => {\n  useEffect(() => {\n    props.getAllMessages(props.match.params.id)\n    return () => {\n      WebSocketInstance.close()\n    }\n  }, [])\n  const { currentRoom } = props\n  useEffect(() => {\n    if (Boolean(WebSocketInstance) && WebSocketInstance.socketRef) {\n      WebSocketInstance.close()\n    }\n    WebSocketInstance.connect(\n      `${window.location.protocol == 'http:' ? 'ws' : 'wss'}://${\n        window.location.host.includes('localhost:')\n          ? 'localhost:8000'\n          : window.location.hostname\n      }/ws/chat/${props.currentRoom.sharing_id}`\n    )\n    //   setWebSocket(WebSocketInstance)\n    WebSocketInstance.sendSignal('join room', {\n      video: false,\n      audio: false,\n      onlyChat: true\n    })\n    WebSocketInstance.on('message received', payload => {\n      payload.user = JSON.parse(payload.user)\n      props.addMessage(payload)\n    })\n  }, [currentRoom.id])\n  const classes = useStyles()\n  const [message, setMessage] = useState('')\n  function handleMessageSend () {\n    if (message != '') WebSocketInstance.sendSignal('send_message', message)\n    setMessage('')\n  }\n\n  function handleKeyPress (event) {\n    if (event.key === 'Enter') {\n      handleMessageSend()\n    }\n  }\n\n  function handleMessageChange (event) {\n    setMessage(event.target.value)\n  }\n\n  return (\n    <Card className={classes.roomChatDiv}>\n      <CardContent color='secondary' className={classes.chatHeading}>\n        <Typography variant='h5'>Chat</Typography>\n      </CardContent>\n      <ChatBox />\n      <TextField\n        color='secondary'\n        className={classes.textfield}\n        onChange={handleMessageChange}\n        onKeyPress={handleKeyPress}\n        value={message}\n        name='message'\n        variant='outlined'\n        autoComplete={false}\n        label=''\n        placeholder='Enter your msg'\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position='end'>\n              <IconButton onClick={handleMessageSend}>\n                <SvgIcon>\n                  <SendIcon />\n                </SvgIcon>\n              </IconButton>\n            </InputAdornment>\n          )\n        }}\n      />\n    </Card>\n  )\n}\n\nconst mapStateToprops = state => {\n  return {\n    user: state.auth.user,\n    currentRoom: state.room.currentRoom,\n    messages: state.room.messages\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    createChatRoom: (data, handleSuccess) => {\n      return dispatch(createChatRoom(data, handleSuccess))\n    },\n    getAllMessages: (id, callback) => {\n      return dispatch(getAllMessages(id, callback))\n    },\n    addMessage: message => {\n      return dispatch(addMessage(message))\n    }\n  }\n}\n\nexport default withRouter(\n  connect(mapStateToprops, mapDispatchToprops)(RoomChat)\n)\n","import { Modal } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport Fade from '@material-ui/core/Fade'\nimport { connect } from 'react-redux'\nimport { updateRoomUsers } from '../../actions/chatRoomAction'\nimport RoomData from '../rooms/roomData'\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: theme.palette.secondary.main,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  textField: {}\n}))\n\nconst RoomDetailsModal = props => {\n  const classes = useStyles()\n  const { show, onClose, label = 'Room Details', ...restProps } = props\n  return (\n    <Modal\n      aria-labelledby='transition-modal-title'\n      aria-describedby='transition-modal-description'\n      className={classes.modal}\n      open={show}\n      centered\n      onClose={onClose}\n    >\n      <Fade in={show}>\n        <RoomData meeting={props.meeting} />\n      </Fade>\n    </Modal>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentRoom: state.room.currentRoom\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    updateRoomUsers: (data, id, handleSuccess) => {\n      return dispatch(updateRoomUsers(data, id, handleSuccess))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToprops)(RoomDetailsModal)\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {\n  Paper,\n  Typography\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport MicIcon from '@material-ui/icons/Mic'\nimport MicOffIcon from '@material-ui/icons/MicOff'\n\nconst useStyles = makeStyles(theme => ({\n  videoOffDiv: {\n    overflow: 'hidden',\n    objectFit: 'fill',\n    backgroundSize: 'cover',\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    display: 'grid',\n    alignItems: 'center',\n    justifyItems: 'center'\n  }\n}))\nconst VideoOffDiv = props => {\n  const classes = useStyles()\n  // const dimensions = props.dimension / Math.sqrt(1 + props.numpeers)\n\n  return (\n    <Paper\n      className={classes.videoOffDiv}\n      style={{\n        width: props.width,\n        height: props.height,\n        display: props.video ? 'none' : ''\n      }}\n    >\n      <div>\n        <Typography variant='h5'>{props.name}</Typography>\n        {props.audio ? <MicIcon /> : <MicOffIcon />}\n      </div>\n    </Paper>\n  )\n}\n\nexport default VideoOffDiv\n","import { makeStyles } from '@material-ui/styles'\nimport React, { useEffect, useRef } from 'react'\n\nconst useStyles = makeStyles(theme => ({\n  video: {\n    backgroundSize: 'cover',\n    objectFit: 'fill',\n    overflow: 'hidden'\n  }\n}))\nexport const Video = props => {\n  const ref = useRef()\n  const classes = useStyles()\n\n  useEffect(() => {\n    props.peer &&\n      props.peer.on('stream', stream => {\n        ref.current.srcObject = stream\n      })\n  }, [])\n\n  return (\n    <video\n      playsInline\n      width={props.width}\n      height={props.height}\n      controls={true}\n      autoPlay\n      style={{ display: props.video ? 'block' : 'none' }}\n      className={classes.video}\n      ref={ref}\n    />\n  )\n}\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Grid,\n  Paper,\n  Typography\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport MicIcon from '@material-ui/icons/Mic'\nimport MicOffIcon from '@material-ui/icons/MicOff'\nimport VideoOffDiv from './videoOffDiv'\nimport { Video } from './video'\n\nconst useStyles = makeStyles(theme => ({\n  video: {\n    backgroundSize: 'cover',\n    objectFit: 'fill',\n    overflow: 'hidden'\n  },\n  userDetailDiv: {\n    position: 'absolute',\n    top: '0.4rem',\n    // left: '6.25%',\n    color: 'white',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    // display: 'flex',\n    // alignItems: 'center',\n    // background: 'top',\n    height: '1.8rem',\n    borderRadius: '0.3rem',\n    // fontSize: '0.8rem',\n    padding: '0.2rem 0.4rem'\n  },\n  userDiv: {\n    textAlign: 'center',\n    position: 'relative',\n    padding: theme.spacing(1),\n    margin: theme.spacing(1),\n    display: 'grid',\n    justifyContent: 'center'\n  }\n}))\nconst UserCard = props => {\n  const classes = useStyles()\n  //   const dimensions = props.dimension / Math.sqrt(1 + props.numpeers)\n\n  return (\n    <Grid\n      container\n      item\n      xs={12}\n      // style={{'display':'none'}}\n      // xs={12}\n      className={classes.userDiv}\n      style={{'display' : props.show ? '' : 'none' }}\n    >\n      <Card>\n        {props.refer ? (\n          <video\n            width={props.width}\n            height={props.height}\n            playsInline\n            muted\n            controls={true}\n            style={{ display: props.video ? 'block' : 'none' }}\n            autoPlay\n            className={classes.video}\n            ref={props.refer}\n          />\n        ) : (\n          <Video\n            peer={props.peer.peer}\n            video={props.video}\n            dimension={props.dimensions}\n            width={props.width}\n            height={props.height}\n            numpeers={props.numpeers}\n          />\n        )}\n        <VideoOffDiv\n          name={props.name}\n          audio={props.audio}\n          video={props.video}\n          dimension={props.dimensions}\n          width={props.width}\n          height={props.height}\n          numpeers={props.numpeers}\n        />\n        <div\n          style={{ display: props.video ? 'block' : 'none' }}\n          className={classes.userDetailDiv}\n        >\n          <Typography variant='h5' gutterBottom>\n            {props.name} {props.audio ? <MicIcon /> : <MicOffIcon />}\n          </Typography>\n        </div>\n      </Card>\n      {/* </Paper> */}\n    </Grid>\n  )\n}\n\nexport default UserCard\n","import {\n  Grid,\n  Typography,\n  Paper,\n  makeStyles,\n  Button,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  StepLabel,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Avatar,\n  Divider,\n  Fab,\n  Menu,\n  MenuItem\n} from '@material-ui/core'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { useSelector } from 'react-redux'\nimport { useHistory, withRouter } from 'react-router'\n// import io from \"socket.io-client\";\nimport Peer from 'simple-peer'\nimport {\n  addMessage,\n  getAllMessages,\n  getRoomDetails,\n  setUserDimension\n} from '../../actions/chatRoomAction'\nimport toast, { Toaster } from 'react-hot-toast'\nimport TimeAgo from 'react-timeago'\n// import styled from \"styled-components\";\nimport WebSocketInstance from '../../websocket/socket'\nimport RoomDetailsModal from '../common/roomDataModal'\nimport VideocamIcon from '@material-ui/icons/Videocam'\nimport VideocamOffIcon from '@material-ui/icons/VideocamOff'\nimport MicIcon from '@material-ui/icons/Mic'\nimport MicOffIcon from '@material-ui/icons/MicOff'\nimport CallEndIcon from '@material-ui/icons/CallEnd'\nimport ChatIcon from '@material-ui/icons/Chat'\nimport SendIcon from '@material-ui/icons/Send'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport DetailsIcon from '@material-ui/icons/Details'\nimport ScreenShareIcon from '@material-ui/icons/ScreenShare'\nimport VideoOffDiv from './videoOffDiv'\nimport RoomChat from '../rooms/roomChat'\nimport UserCard from './userCard'\nimport ChatBox from '../common/chatBox'\nimport GridOnIcon from '@material-ui/icons/GridOn'\nimport GridOffIcon from '@material-ui/icons/GridOff'\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\nimport RoomData from '../rooms/roomData'\nimport GroupIcon from '@material-ui/icons/Group'\n\nconst useStyles = makeStyles(theme => ({\n  video: {\n    // width: '100%',\n    // height: '100%',SvgIcon\n    // width: window.screen.availWidth/1.2,\n    backgroundSize: 'cover',\n    objectFit: 'fill',\n    overflow: 'hidden'\n  },\n  gridContainer: {\n    justifyContent: 'center',\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column'\n    }\n  },\n  introLobby: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    display: 'grid',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    // gridAutoFlow: 'column',\n    overflow: 'hidden',\n    height: '100%',\n    width: '100%',\n    boxShadow: 'none'\n    // [theme.breakpoints.down('sm')]: {\n    //   gridAutoFlow: 'row'\n    // }\n  },\n  userDetailDiv: {\n    position: 'absolute'\n    // marginLeft: '3%'\n  },\n  userDiv: {\n    textAlign: 'center',\n    position: 'relative',\n    padding: theme.spacing(1),\n    margin: theme.spacing(1)\n  },\n  chatRoom: {\n    height: '100%'\n  },\n  chatRoomMainDiv: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    width: '100%',\n    height: '100%',\n    position: 'relative'\n  },\n  chatBox: {\n    position: 'relative',\n    backgroundColor: theme.palette.secondary.main,\n    zIndex: 5,\n    // width: 'auto',\n    minWidth: '30vh',\n    maxHeight: '100%',\n    [theme.breakpoints.down('xs')]: {\n      position: 'absolute',\n      top: 0,\n      bottom: 0,\n      right: 0,\n      left: 0,\n      width: '100%',\n      height: '100%'\n    }\n  },\n  chatBoxIntro: {\n    padding: '2px'\n  },\n  chatBoxMessages: {\n    padding: '2px',\n    position: 'relative',\n    overflow: 'hidden',\n    height: '85%',\n    width: '100%'\n  },\n  messageList: {\n    maxHeight: '100%',\n    top: 0,\n    left: 0,\n    right: -theme.spacing(2),\n    position: 'absolute',\n    overflowY: 'scroll'\n  },\n  actionButtons: {\n    position: 'absolute',\n    bottom: 0,\n    display: 'grid',\n    justifyContent: 'center',\n    boxShadow: 'none',\n    gridAutoFlow: 'column',\n    zIndex: 3,\n    // left: '0',\n    // right: '0',\n    // marginLeft: 'auto',\n    // marginRight: 'auto',\n    right: 0,\n    left: 0\n    // [theme.breakpoints.up('md')]: {\n\n    // },\n    // [theme.breakpoints.down('xs')]: {\n    //   // gridAutoFlow: 'row'\n    // }\n    // left: '40%'\n  },\n  desktopButton: {\n    [theme.breakpoints.down('xs')]: {\n      display: 'none'\n    }\n  },\n  mobileButton: {\n    display: 'none',\n    [theme.breakpoints.down('xs')]: {\n      display: 'block'\n    }\n  },\n  textfield: {\n    position: 'absolute',\n    bottom: '0px',\n    width: '100%',\n    backgroundColor: theme.palette.primary.main\n  }\n}))\n\nconst videoConstraints = {\n  // height: usersDiv.current.offsetHeight,\n  // width: usersDiv.current.offsetWidth\n}\n\nconst Room = React.memo(props => {\n  const history = useHistory()\n  const currentRoom = useSelector(state => state.room.currentRoom)\n  const [inLobby, setInLobby] = useState(true)\n  const [pendingRequest, setPendingRequest] = useState(false)\n  const [message, setMessage] = useState()\n  const token = useSelector(state => state.auth.token)\n  const [peers, setPeers] = useState([])\n  const [streams, setStreams] = useState([])\n  const [allMessages, setAllMessages] = useState([])\n  const [websocket, setWebSocket] = useState([])\n  var socketRef = useRef()\n  var [dimension, setDimension] = useState(100)\n  var [videoHeight, setVideoHeight] = useState(window.screen.availHeight / 2.2)\n  var [videoWidth, setVideoWidth] = useState(window.screen.availWidth / 2.2)\n  const userVideo = useRef()\n  const messageBox = useRef()\n  // const duserVideo = useRef()\n  const usersDiv = useRef()\n  var localstream = useRef()\n  const [mystream, setMystream] = useState()\n  const [myVideoTrack, setMyVideoTrack] = useState(null)\n  const [video, setVideo] = useState(true)\n  const [col, setCol] = useState(0)\n  const [showRoomDetailModal, setShowRoomDetailModal] = useState(false)\n  const [show, setShow] = useState(true)\n  const [showDetails, setShowDetails] = useState(true)\n  const [chatBoxOpen, setChatBoxOpen] = useState(false)\n  const [allUsersBoxOpen, setAllUsersBoxOpen] = useState(false)\n  const [audio, setAudio] = useState(true)\n  const [roomExist, setRoomExists] = useState(false)\n  const peersRef = useRef([])\n  const classes = useStyles()\n  const [anchorAvatarEl, setAnchorAvatarEl] = useState(null)\n  const [searchUser, setSearchUser] = useState('')\n\n  useEffect(() => {\n    props.getAllMessages(props.match.params.id)\n    return () => {\n      const tracks = localstream.current.getTracks()\n      tracks.map(track => {\n        track.stop()\n      })\n      localstream.current.getTracks()[1].stop()\n      WebSocketInstance.close()\n    }\n  }, [])\n\n  useEffect(() => {\n    if (messageBox.current) {\n      messageBox.current.scrollTop = messageBox.current.scrollHeight\n    }\n  }, [messageBox.current, props.messages.length])\n\n  useEffect(() => {\n    if (usersDiv.current) {\n      // const d =\n      //   Math.sqrt(usersDiv.current.offsetWidth * usersDiv.current.offsetWidth) /\n      //   2\n      // setDimension(d)\n      var n = 0\n      if (show) {\n        n++\n      }\n      n += peersRef.current.filter(peer => peer.show === true).length\n      if (n == 0) {\n        setShowDetails(true)\n      } else {\n        setShowDetails(false)\n      }\n      var numCol = Math.sqrt(n)\n      if (usersDiv.current.offsetHeight < usersDiv.current.offsetWidth) {\n        numCol = Math.ceil(numCol)\n      } else {\n        numCol = Math.floor(numCol)\n      }\n      setCol(numCol)\n      const numRow = Math.ceil(n / numCol)\n      setVideoHeight(usersDiv.current.offsetHeight / (1.2 * numRow))\n      setVideoWidth(usersDiv.current.offsetWidth / (1.2 * numCol))\n    }\n  }, [\n    usersDiv.current,\n    peers,\n    show,\n    chatBoxOpen,\n    allUsersBoxOpen,\n    peersRef.current.length\n  ])\n\n  useEffect(() => {\n    props.getRoomDetails(props.match.params.id, () => {\n      if (currentRoom && currentRoom.created_by.pk == props.myuser.pk) {\n        navigator.mediaDevices\n          .getUserMedia({ video: { videoConstraints }, audio: true })\n          .then(stream => {\n            userVideo.current.srcObject = stream\n            localstream.current = stream\n            setMyVideoTrack(stream.getVideoTracks()[0])\n            setMystream(stream)\n          })\n          .catch(err => {\n            toast.error('Cannot get access to your camera and video !')\n          })\n        setInLobby(true)\n      }\n      setRoomExists(true)\n    })\n  }, [currentRoom.id])\n\n  useEffect(() => {\n    if (roomExist) {\n      if (inLobby) {\n        navigator.mediaDevices\n          .getUserMedia({ video: { videoConstraints }, audio: true })\n          .then(stream => {\n            userVideo.current.srcObject = stream\n            localstream.current = stream\n            setMyVideoTrack(stream.getVideoTracks()[0])\n            setMystream(stream)\n          })\n          .catch(err => {\n            toast.error('Cannot get access to your camera and video !')\n          })\n      } else {\n        if (Boolean(WebSocketInstance) && WebSocketInstance.socketRef) {\n          WebSocketInstance.close()\n        }\n        WebSocketInstance.connect(\n          `${window.location.protocol == 'http:' ? 'ws' : 'wss'}://${\n            window.location.host.includes('localhost:')\n              ? 'localhost:8000'\n              : window.location.hostname\n          }/ws/chat/${props.currentRoom.sharing_id}`\n        )\n        setWebSocket(WebSocketInstance)\n        WebSocketInstance.sendSignal('join room', {\n          video,\n          audio,\n          onlyChat: false\n        })\n        WebSocketInstance.on('request invite', user => {\n          let presentInUsers =\n            props.currentRoom.all_users.indexOf(user.id) != -1\n          if (user.id == props.currentRoom.created_by.pk || presentInUsers) {\n            WebSocketInstance.sendSignal('accept invite', user.id)\n          } else if (\n            props.currentRoom.created_by.pk == props.myuser.pk &&\n            currentRoom.created_by.pk != user.id\n          ) {\n            toast(\n              t => (\n                <div>\n                  {user.email} wants to join{' '}\n                  <Button\n                    color='inherit'\n                    onClick={() => handleUserAccept(t.id, user.id)}\n                  >\n                    accept\n                  </Button>\n                  <Button\n                    color='inherit'\n                    onClick={() => handleUserReject(t.id, user.id)}\n                  >\n                    Decline\n                  </Button>\n                </div>\n              ),\n              {\n                icon: '👤',\n                duration: 100000\n              }\n            )\n          }\n        })\n        WebSocketInstance.on('invite was rejected', payload => {\n          if (props.myuser.pk == payload.id) {\n            // alert('Admin rejected your request')\n            toast(\"Admin rejected your request\", { icon : 'ℹ️'})\n            history.push('/')\n          }\n        })\n        WebSocketInstance.on('all users', payload => {\n          if (pendingRequest == true) {\n            setPendingRequest(false)\n            userVideo.current.srcObject = localstream.current\n          }\n          if (payload.id == props.myuser.pk) {\n            const allPeers = []\n            payload.users.forEach(user => {\n              if (user[0] !== props.myuser.pk) {\n                if (!Boolean(peersRef.current.some(e => e.peerID == user[0]))) {\n                  const peer = createPeer(\n                    user[0],\n                    props.myuser.pk,\n                    localstream.current\n                  )\n                  peersRef.current.push({\n                    peerID: user[0],\n                    peerName: user[1],\n                    video: user[2],\n                    audio: user[3],\n                    show: true,\n                    peer\n                  })\n                  allPeers.push({\n                    peerID: user[0],\n                    peerName: user[1],\n                    video: user[2],\n                    audio: user[3],\n                    show: true,\n                    peer\n                  })\n                }\n              }\n            })\n            setPeers(allPeers)\n          }\n        })\n\n        WebSocketInstance.on('user joined', payload => {\n          if (payload.userID === props.myuser.pk) {\n            if (\n              !Boolean(\n                peersRef.current.some(e => e.peerID == payload.caller[0])\n              )\n            ) {\n              const peer = addPeer(\n                payload.signal,\n                payload.caller,\n                localstream.current\n              )\n              toast(`${payload.caller[1]} joined the room.`, { icon: '👏' })\n              peersRef.current.push({\n                peerID: payload.caller[0],\n                peerName: payload.caller[1],\n                video: payload.caller[2],\n                audio: payload.caller[3],\n                show: true,\n                peer\n              })\n\n              let peerObj = {\n                peerID: payload.caller[0],\n                peerName: payload.caller[1],\n                video: payload.caller[2],\n                audio: payload.caller[3],\n                show: true,\n                peer\n              }\n\n              setPeers([...peers, peerObj])\n\n            }\n          }\n        })\n\n        WebSocketInstance.on('receiving returned signal', payload => {\n          if (payload.userID === props.myuser.pk) {\n            const item = peersRef.current.find(p => p.peerID === payload.id)\n            item.peer.signal(payload.signal)\n          }\n        })\n\n        WebSocketInstance.on('user left', id => {\n          const peerObj = peersRef.current.find(p => p.peerID === id)\n          if (peerObj) {\n            toast(`${peerObj.peerName} left.`, { icon: 'ℹ️' })\n\n            peerObj.peer.destroy()\n          }\n          const allPeers = peersRef.current.filter(p => p.peerID !== id)\n          peersRef.current = allPeers\n          setPeers(allPeers)\n        })\n\n        WebSocketInstance.on('message received', payload => {\n          // const msgObj = {\n          //   user: payload.user,\n          //   msg: payload.message\n          // }\n          // setAllMessages(messages => [...messages, msgObj])\n          payload.user = JSON.parse(payload.user)\n          if (\n            props.myuser.first_name != payload.user.first_name &&\n            !chatBoxOpen\n          ) {\n            toast(`${payload.user.first_name} : ${payload.message}`, {\n              icon: '💬'\n            })\n          }\n          props.addMessage(payload)\n        })\n\n        WebSocketInstance.on('toggle video', payload => {\n          if (payload.id == props.myuser.pk) {\n            setVideo(payload.value)\n          } else {\n            var newPeers = peersRef.current\n            for (var i in newPeers) {\n              if (newPeers[i].peerID == payload.id) {\n                newPeers[i].video = payload.value\n                break //Stop this loop, we found it!\n              }\n            }\n            setPeers([...newPeers])\n            peersRef.current = newPeers\n          }\n        })\n\n        WebSocketInstance.on('toggle audio', payload => {\n          if (payload.id == props.myuser.pk) {\n            setAudio(payload.value)\n          } else {\n            var newPeers = peersRef.current\n            for (var i in newPeers) {\n              if (newPeers[i].peerID == payload.id) {\n                newPeers[i].audio = payload.value\n                break //Stop this loop, we found it!\n              }\n            }\n            setPeers([...newPeers])\n            peersRef.current = newPeers\n          }\n        })\n      }\n    }\n  }, [roomExist, inLobby])\n\n  const handleAvatarBtnClick = event => {\n    setAnchorAvatarEl(event.currentTarget)\n  }\n\n  const handleAvatarBtnClose = () => {\n    setAnchorAvatarEl(null)\n  }\n\n  const handleSearchUser = e => {\n    setSearchUser(e.target.value)\n  }\n\n  function handleUserAccept (toast_id, user_id) {\n    WebSocketInstance.sendSignal('accept invite', user_id)\n    toast.dismiss(toast_id)\n  }\n\n  function handleUserReject (toast_id, user_id) {\n    WebSocketInstance.sendSignal('reject invite', user_id)\n    toast.dismiss(toast_id)\n  }\n\n  function createPeer (userToSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    })\n\n    peer.on('signal', signal => {\n      WebSocketInstance.sendSignal('sending signal', {\n        userToSignal,\n        callerID,\n        signal\n      })\n    })\n\n    return peer\n  }\n\n  function addPeer (incomingSignal, caller, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    })\n    let callerID = caller[0]\n    peer.on('signal', signal => {\n      WebSocketInstance.sendSignal('returning signal', { signal, callerID })\n    })\n\n    peer.signal(incomingSignal)\n\n    return peer\n  }\n\n  function shareScreen () {\n    setMyVideoTrack(localstream.current.getVideoTracks()[0])\n    navigator.mediaDevices\n      .getDisplayMedia({ video: { cursor: 'always' }, audio: 'true' })\n      .then(screenStream => {\n        for (let index = 0; index < peersRef.current.length; index++) {\n          peersRef.current[index].peer.replaceTrack(\n            localstream.current.getVideoTracks()[0],\n            screenStream.getVideoTracks()[0],\n            localstream.current\n          )\n        }\n        setPeers([...peersRef.current])\n        localstream.current.removeTrack(localstream.current.getVideoTracks()[0])\n        localstream.current.addTrack(screenStream.getVideoTracks()[0])\n        screenStream.getVideoTracks()[0].onended = function () {\n          for (let index = 0; index < peersRef.current.length; index++) {\n            peersRef.current[index].peer.replaceTrack(\n              localstream.current.getVideoTracks()[0],\n              myVideoTrack,\n              localstream.current\n            )\n          }\n          setPeers([...peersRef.current])\n          localstream.current.removeTrack(\n            localstream.current.getVideoTracks()[0]\n          )\n          localstream.current.addTrack(myVideoTrack)\n        }\n      })\n  }\n\n  function handleMessageSend () {\n    if(message != '') WebSocketInstance.sendSignal('send_message', message)\n    setMessage('')\n  }\n\n  function handleKeyPress (event) {\n    if(event.key === 'Enter'){\n      handleMessageSend()\n    }\n  }\n\n  function handleMessageChange (event) {\n    setMessage(event.target.value)\n  }\n\n  function togglePeerShow (peer) {\n    var newPeers = peersRef.current\n    for (var i in newPeers) {\n      if (newPeers[i].peerID == peer.peerID) {\n        newPeers[i].show = !newPeers[i].show\n        break //Stop this loop, we found it!\n      }\n    }\n    setPeers([...newPeers])\n    peersRef.current = newPeers\n  }\n\n  function toggleChatBoxOpen () {\n    setAllUsersBoxOpen(false)\n    setChatBoxOpen(!chatBoxOpen)\n  }\n\n  function toggleAllUsersBoxOpen () {\n    setChatBoxOpen(false)\n    setAllUsersBoxOpen(!allUsersBoxOpen)\n  }\n\n  function handleJoinRoom () {\n    if(props.myuser.pk != currentRoom.created_by.pk) toast.success(\"Notified Admin, waiting for approval...\")\n    setPendingRequest(true)\n    setInLobby(false)\n  }\n\n  function toggleShow () {\n    if (show) {\n      setShow(false)\n    } else {\n      setShow(true)\n      if (userVideo.current) {\n        userVideo.current.srcObject = localstream.current\n      }\n    }\n  }\n\n  function handleVideoToggle () {\n    localstream.current.getVideoTracks()[0].enabled = !localstream.current.getVideoTracks()[0]\n      .enabled\n    if (inLobby) {\n      setVideo(!video)\n    } else {\n      WebSocketInstance.sendSignal('toggle video')\n    }\n  }\n  function handleAudioToggle () {\n    localstream.current.getAudioTracks()[0].enabled = !localstream.current.getAudioTracks()[0]\n      .enabled\n    // setAudio(!audio)\n    if (inLobby) {\n      setAudio(!audio)\n    } else {\n      WebSocketInstance.sendSignal('toggle audio')\n    }\n  }\n  function handleDisconnect () {\n    const tracks = mystream && mystream.getTracks()\n    tracks.map(track => {\n      track.stop()\n    })\n    history.push(`/room/${currentRoom.id}`)\n  }\n  return roomExist ? (\n    !inLobby && !pendingRequest ? (\n      <div className={classes.chatRoom}>\n        <Toaster />\n        <div className={classes.chatRoomMainDiv}>\n          <Grid\n            // xs={chatBoxOpen ? 6 : 12}\n            container\n            spacing={2}\n            className={classes.paper}\n            ref={usersDiv}\n            style={{\n              gridTemplateColumns: `repeat(${col},1fr)`,\n              position: showDetails ? 'relative' : ''\n            }}\n          >\n            <Grid className={classes.actionButtons}>\n              <Button onClick={handleVideoToggle}>\n                {video ? <VideocamIcon /> : <VideocamOffIcon />}\n              </Button>\n              <Button onClick={handleAudioToggle}>\n                {audio ? <MicIcon /> : <MicOffIcon />}\n              </Button>\n              <Button onClick={toggleChatBoxOpen}>\n                <ChatIcon />\n              </Button>\n              <Button\n                className={classes.desktopButton}\n                onClick={toggleAllUsersBoxOpen}\n              >\n                <GroupIcon />\n              </Button>\n              <Button\n                style={{ backgroundColor: 'red' }}\n                onClick={handleDisconnect}\n              >\n                <CallEndIcon />\n              </Button>\n              <Button className={classes.desktopButton} onClick={shareScreen}>\n                <ScreenShareIcon />\n              </Button>\n              <Button\n                className={classes.desktopButton}\n                onClick={() => setShowRoomDetailModal(true)}\n              >\n                <DetailsIcon />\n              </Button>\n              <Button\n                aria-controls='avatar-dropdown'\n                content='avatar'\n                // variant='contained'\n                // color='secondary'\n                // aria-haspopup='true'\n                // color='inherit'\n                // size='large'\n                className={classes.mobileButton}\n                // className='header-title-button'\n                onClick={handleAvatarBtnClick}\n                startIcon={<MoreVertIcon />}\n              />\n              <Menu\n                id='avatar-dropdown'\n                anchorEl={anchorAvatarEl}\n                // keepMounted\n                open={Boolean(anchorAvatarEl)}\n                onClose={handleAvatarBtnClose}\n                style={{ marginBottom: '30px' }}\n                // style={{ marginTop: '30px' }}\n              >\n                <MenuItem onClick={toggleAllUsersBoxOpen}>\n                  Manage Users\n                </MenuItem>\n                <MenuItem onClick={shareScreen}>Share Screen</MenuItem>\n                <MenuItem onClick={() => setShowRoomDetailModal(true)}>\n                  View Details\n                </MenuItem>\n              </Menu>\n            </Grid>\n            {showRoomDetailModal && (\n              <RoomDetailsModal\n                show={showRoomDetailModal}\n                meeting={false}\n                onClose={() => setShowRoomDetailModal(false)}\n              />\n            )}\n            {showDetails && <RoomData meeting={false} />}\n            <UserCard\n              key={props.myuser.pk - 100}\n              video={video}\n              audio={audio}\n              dimensions={dimension / Math.sqrt(2 + peersRef.current.length)}\n              width={videoWidth}\n              height={videoHeight}\n              show={show}\n              refer={userVideo}\n              name={props.myuser.first_name}\n              numpeers={peersRef.current.length}\n            />\n            {/* <UserCard\n              key={props.myuser.pk}\n              video={video}\n              audio={audio}\n              dimensions={dimension / Math.sqrt(2 + peersRef.current.length)}\n              width={videoWidth}\n              height={videoHeight}\n              refer={duserVideo}\n              name={props.myuser.first_name}\n              numpeers={peersRef.current.length}\n            /> */}\n\n            {peersRef.current.map(peer => {\n              return (\n                <UserCard\n                  key={peer.peerID}\n                  video={peer.video}\n                  audio={peer.audio}\n                  dimensions={\n                    dimension / Math.sqrt(2 + peersRef.current.length)\n                  }\n                  width={videoWidth}\n                  height={videoHeight}\n                  refer={null}\n                  show={peer.show}\n                  peer={peer}\n                  name={peer.peerName}\n                  numpeers={peersRef.current.length}\n                />\n              )\n            })}\n          </Grid>\n          {chatBoxOpen ? (\n            <Grid className={classes.chatBox}>\n              <Grid className={classes.chatBoxIntro}>\n                <IconButton>\n                  <ArrowBackIcon onClick={toggleChatBoxOpen} />\n                </IconButton>\n              </Grid>\n              <ChatBox />\n              <Grid className={classes.chatBoxInput}>\n                <TextField\n                  color='secondary'\n                  className={classes.textfield}\n                  onChange={handleMessageChange}\n                  onKeyPress={handleKeyPress}\n                  value={message}\n                  name='message'\n                  variant='outlined'\n                  autoComplete={false}\n                  label=''\n                  placeholder='Enter your msg'\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position='end'>\n                        <IconButton onClick={handleMessageSend}>\n                          <SvgIcon>\n                            <SendIcon />\n                          </SvgIcon>\n                        </IconButton>\n                      </InputAdornment>\n                    )\n                  }}\n                />\n              </Grid>\n            </Grid>\n          ) : (\n            ''\n          )}\n          {allUsersBoxOpen ? (\n            <Grid className={classes.chatBox}>\n              <Grid className={classes.chatBoxIntro}>\n                <IconButton>\n                  <ArrowBackIcon onClick={toggleAllUsersBoxOpen} />\n                </IconButton>\n              </Grid>\n              <Grid>\n                <List>\n                  <ListItem key='RemySharp'>\n                    <ListItemIcon>\n                      <Avatar color='inherit'>\n                        {props.myuser.first_name[0]}\n                      </Avatar>\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={props.myuser.first_name}\n                    ></ListItemText>\n                    <IconButton onClick={handleVideoToggle}>\n                      {video ? <VideocamIcon /> : <VideocamOffIcon />}\n                    </IconButton>\n                    <IconButton onClick={handleAudioToggle}>\n                      {audio ? <MicIcon /> : <MicOffIcon />}\n                    </IconButton>\n                    <IconButton onClick={() => toggleShow()}>\n                      {show ? <GridOnIcon /> : <GridOffIcon />}\n                    </IconButton>\n                  </ListItem>\n                </List>\n                <Divider />\n                <Grid item xs={12} style={{ padding: '10px' }}>\n                  <TextField\n                    id='outlined-basic-email'\n                    label='Search'\n                    name={searchUser}\n                    value={searchUser}\n                    onChange={handleSearchUser}\n                    variant='outlined'\n                    fullWidth\n                  />\n                </Grid>\n                <Divider />\n                <List>\n                  {peersRef.current.map(peer => {\n                    return (\n                      <ListItem style={{display: peer.peerName.includes(searchUser) ? '' : 'none'}} key='RemySharp'>\n                        <ListItemIcon>\n                          <Avatar color='inherit'>{peer.peerName[0]}</Avatar>\n                        </ListItemIcon>\n                        <ListItemText primary={peer.peerName}>\n                          Remy Sharp\n                        </ListItemText>\n                        <IconButton disabled>\n                          {peer.video ? (\n                            <VideocamIcon disabled />\n                          ) : (\n                            <VideocamOffIcon disabled />\n                          )}\n                        </IconButton>\n                        <IconButton disabled>\n                          {peer.audio ? (\n                            <MicIcon disabled />\n                          ) : (\n                            <MicOffIcon disabled />\n                          )}\n                        </IconButton>\n                        <IconButton onClick={() => togglePeerShow(peer)}>\n                          {peer.show ? <GridOnIcon /> : <GridOffIcon />}\n                        </IconButton>\n                      </ListItem>\n                    )\n                  })}\n                </List>\n              </Grid>\n            </Grid>\n          ) : (\n            ''\n          )}\n        </div>\n      </div>\n    ) : (\n      <div>\n        <div className={classes.introLobby}>\n          <UserCard\n            key={props.myuser.pk}\n            video={video}\n            audio={audio}\n            dimensions={dimension / Math.sqrt(1 + peersRef.current.length)}\n            width={videoWidth}\n            show={show}\n            height={videoHeight}\n            refer={userVideo}\n            name={props.myuser.first_name}\n            numpeers={peersRef.current.length}\n          />\n          <div>\n            <Button disabled={pendingRequest} onClick={handleVideoToggle}>\n              {video ? <VideocamIcon /> : <VideocamOffIcon />}\n            </Button>\n            <Button disabled={pendingRequest} onClick={handleAudioToggle}>\n              {audio ? <MicIcon /> : <MicOffIcon />}\n            </Button>\n            <Button onClick={handleJoinRoom} disabled={pendingRequest}>\n              Join room\n            </Button>\n          </div>\n        </div>\n        <RoomData meeting={false} />\n      </div>\n    )\n  ) : (\n    <div>Room doesnt exist</div>\n  )\n})\n\nconst mapStateToprops = state => {\n  return {\n    myuser: state.auth.user,\n    currentRoom: state.room.currentRoom,\n    token: state.auth.token,\n    messages: state.room.messages,\n    userDimension: state.room.userDimension\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    getRoomDetails: (id, handleSuccess) => {\n      return dispatch(getRoomDetails(id, handleSuccess))\n    },\n    getAllMessages: (id, callback) => {\n      return dispatch(getAllMessages(id, callback))\n    },\n    addMessage: message => {\n      return dispatch(addMessage(message))\n    },\n    setUserDimension: dimension => {\n      return dispatch(setUserDimension(dimension))\n    }\n  }\n}\nexport default withRouter(connect(mapStateToprops, mapDispatchToprops)(Room))\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { logoutUser } from '../actions/authAction'\nimport VideoPlayer from '../components/video/videoPlayer.js'\n\nclass VideoView extends Component {\n  render () {\n    return (\n      <div style={{height:'90vh'}} className='VideoView'>\n        <VideoPlayer />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logoutUser: () => {\n      return dispatch(logoutUser())\n    }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(VideoView)\n"],"sourceRoot":""}