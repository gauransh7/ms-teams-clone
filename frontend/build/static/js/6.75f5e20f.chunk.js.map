{"version":3,"sources":["components/video/videoPlayer.js","views/video.js"],"names":["useStyles","makeStyles","theme","video","backgroundSize","objectFit","overflow","gridContainer","justifyContent","breakpoints","down","flexDirection","paper","display","gridAutoFlow","height","width","boxShadow","userDetailDiv","position","userDiv","textAlign","padding","spacing","margin","chatRoom","chatRoomMainDiv","chatBox","backgroundColor","palette","secondary","main","zIndex","minWidth","maxHeight","top","bottom","right","left","chatBoxIntro","chatBoxMessages","actionButtons","marginLeft","marginRight","up","textfield","primary","Video","props","console","log","ref","useRef","classes","useEffect","peer","on","stream","current","srcObject","playsInline","numpeers","window","screen","availWidth","availHeight","autoPlay","className","videoConstraints","withRouter","connect","state","myuser","auth","user","currentRoom","room","token","dispatch","updateRoomUsers","data","id","handleSuccess","history","useHistory","useSelector","useState","message","setMessage","peers","setPeers","allMessages","setAllMessages","setWebSocket","userVideo","localstream","mystream","setMystream","setVideo","chatBoxOpen","setChatBoxOpen","audio","setAudio","roomExist","setRoomExists","peersRef","toggleChatBoxOpen","match","params","sharing_id","code","JSON","stringify","getTracks","map","track","stop","WebSocketInstance","close","Boolean","socketRef","location","protocol","host","includes","hostname","navigator","mediaDevices","getUserMedia","then","sendSignal","users","forEach","pk","userToSignal","callerID","Peer","initiator","trickle","signal","createPeer","push","peerID","peerName","payload","userID","toast","caller","icon","incomingSignal","addPeer","some","e","peerObj","find","p","destroy","filter","msgObj","msg","messages","first_name","catch","err","error","Grid","container","item","xs","Typography","variant","gutterBottom","length","muted","IconButton","onClick","obj","chatBoxInput","TextField","color","onChange","event","target","value","name","autoComplete","label","placeholder","InputProps","endAdornment","InputAdornment","SvgIcon","Button","getVideoTracks","enabled","getAudioTracks","getDisplayMedia","cursor","screenStream","VideoView","style","Component","logoutUser"],"mappings":"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","file":"static/js/6.75f5e20f.chunk.js","sourcesContent":["import {\n  Grid,\n  Typography,\n  Paper,\n  makeStyles,\n  Button,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  StepLabel,\n  IconButton\n} from '@material-ui/core'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { useSelector } from 'react-redux'\nimport { useHistory, withRouter } from 'react-router'\n// import io from \"socket.io-client\";\nimport Peer from 'simple-peer'\nimport { updateRoomUsers } from '../../actions/chatRoomAction'\nimport toast, { Toaster } from 'react-hot-toast'\n// import styled from \"styled-components\";\nimport WebSocketInstance from '../../websocket/socket'\nimport VideocamIcon from '@material-ui/icons/Videocam'\nimport VideocamOffIcon from '@material-ui/icons/VideocamOff'\nimport MicIcon from '@material-ui/icons/Mic'\nimport MicOffIcon from '@material-ui/icons/MicOff'\nimport CallEndIcon from '@material-ui/icons/CallEnd'\nimport ChatIcon from '@material-ui/icons/Chat'\nimport SendIcon from '@material-ui/icons/Send'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport ScreenShareIcon from '@material-ui/icons/ScreenShare';\n\nconst useStyles = makeStyles(theme => ({\n  video: {\n    // width: '100%',\n    // height: '100%',\n    // height: window.screen.availHeight/1.2,\n    // width: window.screen.availWidth/1.2,\n    backgroundSize: 'cover',\n    objectFit: 'fill',\n    overflow: 'hidden'\n  },\n  gridContainer: {\n    justifyContent: 'center',\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column'\n    }\n  },\n  paper: {\n    // padding: '2px',\n    // border: '2px solid black',\n    // margin: '2px',\n    // gridTemplateColumns: '1fr 1fr',\n    display: 'grid',\n    justifyContent: 'space-around',\n    gridAutoFlow: 'column',\n    overflow: 'hidden',\n    height: '100%',\n    width: '100%',\n    boxShadow: 'none',\n    [theme.breakpoints.down('sm')]: {\n      gridAutoFlow: 'row'\n    }\n  },\n  userDetailDiv: {\n    position: 'absolute'\n    // marginLeft: '3%'\n  },\n  userDiv: {\n    textAlign: 'center',\n    position: 'relative',\n    padding: theme.spacing(1),\n    margin: theme.spacing(1)\n  },\n  chatRoom: {\n    height: '100%'\n  },\n  chatRoomMainDiv: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    width: '100%',\n    height: '100%',\n    position: 'relative'\n  },\n  chatBox: {\n    position: 'relative',\n    backgroundColor: theme.palette.secondary.main,\n    zIndex: 2,\n    width: 'auto',\n    minWidth: '30vh',\n    maxHeight: '100%',\n    [theme.breakpoints.down('xs')]: {\n      position: 'absolute',\n      top: 0,\n      bottom: 0,\n      right: 0,\n      left: 0,\n      width: '100%',\n      height: '100%'\n    }\n  },\n  chatBoxIntro: {\n    padding: '2px'\n  },\n  chatBoxMessages: {\n    padding: '2px'\n  },\n  actionButtons: {\n    position: 'absolute',\n    bottom: '2rem',\n    display: 'grid',\n    justifyContent: 'center',\n    boxShadow: 'none',\n    gridAutoFlow: 'column',\n    // left: '0',\n    // right: '0',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    [theme.breakpoints.up('md')]: {\n      right: 0,\n      left: 0\n    },\n    [theme.breakpoints.down('xs')]: {\n      gridAutoFlow: 'row'\n    }\n    // left: '40%'\n  },\n  textfield: {\n    position: 'absolute',\n    bottom: '0px',\n    width: '100%',\n    backgroundColor: theme.palette.primary.main\n  }\n}))\n\nconst Video = props => {\n  console.log(props)\n  const ref = useRef()\n  const classes = useStyles()\n\n  useEffect(() => {\n    props.peer.on('stream', stream => {\n      ref.current.srcObject = stream\n    })\n  }, [])\n\n  return (\n    <video\n      playsInline\n      width={\n        props.numpeers == 0 || window.screen.availWidth < 1400\n          ? window.screen.availWidth / 1.3\n          : window.screen.availWidth / 2.2\n      }\n      height={\n        props.numpeers == 0\n          ? window.screen.availHeight / 1.3\n          : window.screen.availWidth < 1400\n          ? window.screen.availHeight / 2.3\n          : window.screen.availHeight / 1.3\n      }\n      autoPlay\n      className={classes.video}\n      ref={ref}\n    />\n  )\n}\n\nconst videoConstraints = {\n  height: window.screen.availHeight,\n  width: window.screen.availWidth\n}\n\nconst Room = props => {\n  const history = useHistory()\n  const currentRoom = useSelector(state => state.room.currentRoom)\n  const [message, setMessage] = useState()\n  const token = useSelector(state => state.auth.token)\n  const [peers, setPeers] = useState([])\n  const [allMessages, setAllMessages] = useState([])\n  const [websocket, setWebSocket] = useState([])\n  var socketRef = useRef()\n  const userVideo = useRef()\n  const dummyUserVideo = useRef()\n  var localstream = useRef()\n  const [mystream, setMystream] = useState()\n  const [video, setVideo] = useState(true)\n  const [chatBoxOpen, setChatBoxOpen] = useState(false)\n  const [audio, setAudio] = useState(true)\n  const [roomExist, setRoomExists] = useState(false)\n  const peersRef = useRef([])\n  const roomID = ''\n  const classes = useStyles()\n\n  // const handleSuccess = () => {\n  //   console.log(\"success\")\n  //   setRoomExists(true)\n  // }\n  useEffect(() => {\n    console.log(history)\n    console.log(props)\n    let data = {\n      id: props.match.params.id,\n      sharing_id: props.match.params.code\n    }\n    data = JSON.stringify(data)\n    props.updateRoomUsers(data, props.match.params.id, () => {\n      setRoomExists(true)\n    })\n    return () => {\n      // Anything in here is fired on component unmount.\n      // console.log(localstream.current.getTracks())\n      const tracks = localstream.current.getTracks()\n      tracks.map(track => {\n        track.stop()\n      })\n      localstream.current.getTracks()[0].stop()\n      WebSocketInstance.close()\n    }\n  }, [])\n\n  useEffect(() => {\n    if (roomExist) {\n      console.log(props.currentRoom)\n      if (Boolean(WebSocketInstance) && WebSocketInstance.socketRef) {\n        WebSocketInstance.close()\n      }\n      WebSocketInstance.connect(\n        `${window.location.protocol == 'http:' ? 'ws' : 'wss'}://${\n          window.location.host.includes('localhost:')\n            ? 'localhost:8000'\n            : window.location.hostname\n        }/ws/chat/${props.currentRoom.sharing_id}`\n      )\n      // WebSocketInstance.waitForSocketConnection(() => {\n      //   console.log('looping')\n      // })\n      setWebSocket(WebSocketInstance)\n      navigator.mediaDevices\n        .getUserMedia({ video: { videoConstraints }, audio: true })\n        .then(stream => {\n          userVideo.current.srcObject = stream\n          // dummyUserVideo.current.srcObject = stream\n          localstream.current = stream\n          setMystream(stream)\n          WebSocketInstance.sendSignal('join room', roomID)\n          WebSocketInstance.on('all users', users => {\n            console.log('all users received')\n            console.log(users)\n            const peers = []\n            users.forEach(user => {\n              if (user[0] !== props.myuser.pk) {\n                const peer = createPeer(user[0], props.myuser.pk, stream)\n                peersRef.current.push({\n                  peerID: user[0],\n                  peerName: user[1],\n                  peer\n                })\n                peers.push({\n                  peerID: user[0],\n                  peerName: user[1],\n                  peer\n                })\n                console.log('created peer ' + user.id)\n              }\n            })\n            setPeers(peers)\n            console.log('peers after all users')\n            console.log(peers)\n          })\n\n          WebSocketInstance.on('user joined', payload => {\n            console.log(peers)\n            console.log(payload.userID)\n            if (payload.userID === props.myuser.pk) {\n              toast(`${payload.caller[1]} joined the room.`, { icon: '👏' })\n              const peer = addPeer(payload.signal, payload.caller, stream)\n              if (\n                !Boolean(\n                  peersRef.current.some(e => e.peerID == payload.caller[0])\n                )\n              ) {\n                console.log(`${payload.caller[1]} joined the room.`)\n                peersRef.current.push({\n                  peerID: payload.caller[0],\n                  peerName: payload.caller[1],\n                  peer\n                })\n\n                const peerObj = {\n                  peerID: payload.callerID,\n                  peerName: payload.caller[1],\n                  peer\n                }\n\n                setPeers(users => [...users, peerObj])\n                console.log('added peer ' + peerObj.peerID)\n              }\n              console.log(peers)\n            }\n          })\n\n          WebSocketInstance.on('receiving returned signal', payload => {\n            console.log('receiving returned signal')\n            if (payload.userID === props.myuser.pk) {\n              const item = peersRef.current.find(p => p.peerID === payload.id)\n              item.peer.signal(payload.signal)\n            }\n          })\n\n          WebSocketInstance.on('user left', id => {\n            const peerObj = peersRef.current.find(p => p.peerID === id)\n            if (peerObj) {\n              toast(`${peerObj.peerName} left.`, { icon: 'ℹ️' })\n\n              peerObj.peer.destroy()\n            }\n            const peers = peersRef.current.filter(p => p.peerID !== id)\n            peersRef.current = peers\n            setPeers(peers)\n          })\n\n          WebSocketInstance.on('message received', payload => {\n            const msgObj = {\n              user: payload.user,\n              msg: payload.message\n            }\n            setAllMessages(messages => [...messages, msgObj])\n            if (props.myuser.first_name != msgObj.user && !chatBoxOpen) {\n              toast(`${payload.user} : ${payload.message}`, { icon: '💬' })\n            }\n            console.log(allMessages)\n          })\n        })\n        .catch(err => {\n          console.log(err)\n          toast.error('Cannot get access to your camera and video !')\n        })\n    }\n  }, [roomExist])\n\n  function createPeer (userToSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    })\n\n    peer.on('signal', signal => {\n      WebSocketInstance.sendSignal('sending signal', {\n        userToSignal,\n        callerID,\n        signal\n      })\n    })\n\n    return peer\n  }\n\n  function addPeer (incomingSignal, caller, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    })\n    let callerID = caller[0]\n    peer.on('signal', signal => {\n      WebSocketInstance.sendSignal('returning signal', { signal, callerID })\n    })\n\n    peer.signal(incomingSignal)\n\n    return peer\n  }\n\n  function shareScreen () {\n    console.log(mystream)\n    console.log(peersRef.current[0].peer)\n    navigator.mediaDevices\n      .getDisplayMedia({ cursor: true })\n      .then(screenStream => {\n        console.log(screenStream.getVideoTracks())\n        // peersRef.current[0].peer.getSenders()[1].replaceTrack(screenStream.getTracks()[0])\n        userVideo.current.srcObject = screenStream\n        // screenStream.getTracks()[0].onended = () =>{\n        // peers[0].peer.replaceTrack(screenStream.getVideoTracks()[0],mystream.getVideoTracks()[0],mystream)\n        // userVideo.current.srcObject=mystream\n        // }\n      })\n  }\n\n  function handleMessageSend () {\n    WebSocketInstance.sendSignal('send_message', message)\n    setMessage('')\n  }\n\n  function handleMessageChange (event) {\n    setMessage(event.target.value)\n  }\n\n  function toggleChatBoxOpen () {\n    setChatBoxOpen(!chatBoxOpen)\n  }\n\n  function handleVideoToggle () {\n    mystream.getVideoTracks()[0].enabled = !mystream.getVideoTracks()[0].enabled\n    setVideo(!video)\n  }\n  function handleAudioToggle () {\n    mystream.getAudioTracks()[0].enabled = !mystream.getAudioTracks()[0].enabled\n    setAudio(!audio)\n  }\n  function handleDisconnect () {\n    console.log(mystream)\n    const tracks = mystream && mystream.getTracks()\n    tracks.map(track => {\n      track.stop()\n    })\n    // localstream.current.getTracks()[0].stop();\n    // WebSocketInstance.close()\n    history.push('/')\n  }\n\n  return roomExist ? (\n    <div className={classes.chatRoom}>\n      <Toaster />\n      <div className={classes.chatRoomMainDiv}>\n        <Grid\n          // xs={chatBoxOpen ? 6 : 12}\n          container\n          spacing={2}\n          className={classes.paper}\n        >\n          <Grid\n            container\n            item\n            xs={12}\n            // xs={12}\n            key={props.myuser.pk}\n            className={classes.userDiv}\n          >\n            {/* <Paper> */}\n            <Typography\n              variant='h5'\n              className={classes.userDetailDiv}\n              gutterBottom\n            >\n              {props.myuser.first_name}\n            </Typography>\n            <video\n              width={\n                peers.length == 0 || window.screen.availWidth < 1400\n                  ? window.screen.availWidth / 1.3\n                  : window.screen.availWidth / 2.2\n              }\n              height={\n                peers.length == 0\n                  ? window.screen.availHeight / 1.3\n                  : window.screen.availWidth < 1400\n                  ? window.screen.availHeight / 2.3\n                  : window.screen.availHeight / 1.3\n              }\n              playsInline\n              muted\n              autoPlay\n              className={classes.video}\n              ref={userVideo}\n            />\n            {/* </Paper> */}\n          </Grid>\n          {/* <Grid\n            // container\n            item\n            xs={12}\n            // xs={12}\n            key={-2}\n            className={classes.userDiv}\n          >\n            <Paper>\n            <Typography\n              variant='h5'\n              className={classes.userDetailDiv}\n              gutterBottom\n            >\n              {props.myuser.first_name}\n            </Typography>\n            <video\n              width={\n                peers.length == 0\n                  ? window.screen.availWidth\n                  : window.screen.availWidth / 2\n              }\n              height={\n                peers.length == 0\n                  ? window.screen.availHeight\n                  : window.screen.availHeight / 2\n              }\n              playsInline\n              muted\n              autoPlay\n              className={classes.video}\n              ref={dummyUserVideo}\n            />\n            </Paper>\n          </Grid> */}\n\n          {peers.map(peer => {\n            return (\n              <Grid\n                // container\n                xs={12}\n                // xs={12}\n                item\n                key={peer.peerID}\n                className={classes.userDiv}\n              >\n                {/* <Paper> */}\n                <Typography\n                  variant='h5'\n                  className={classes.userDetailDiv}\n                  gutterBottom\n                >\n                  {peer.peerName}\n                </Typography>\n                <Video peer={peer.peer} numpeers={peers.length} />\n                {/* </Paper> */}\n              </Grid>\n            )\n          })}\n        </Grid>\n        {chatBoxOpen ? (\n          <Grid className={classes.chatBox}>\n            <Grid className={classes.chatBoxIntro}>\n              <IconButton>\n                <ArrowBackIcon onClick={toggleChatBoxOpen} />\n              </IconButton>\n            </Grid>\n            {/* <StepLabel>\n                Messages are not saved and will be removed once you disconnect\n              </StepLabel> */}\n            <Grid className={classes.chatBoxMessages}>\n              {allMessages.map(obj => {\n                return (\n                  <div>\n                    <div>{obj.user}</div>\n                    <div>{obj.msg}</div>\n                  </div>\n                )\n              })}\n            </Grid>\n            <Grid className={classes.chatBoxInput}>\n              <TextField\n                color='secondary'\n                className={classes.textfield}\n                onChange={handleMessageChange}\n                value={message}\n                name='message'\n                variant='outlined'\n                autoComplete={false}\n                label=''\n                placeholder='Enter your msg'\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position='end'>\n                      <IconButton>\n                        <SvgIcon onClick={handleMessageSend}>\n                          <SendIcon />\n                        </SvgIcon>\n                      </IconButton>\n                    </InputAdornment>\n                  )\n                }}\n              />\n            </Grid>\n          </Grid>\n        ) : (\n          ''\n        )}\n      </div>\n      <Grid className={classes.actionButtons}>\n        <Button onClick={handleVideoToggle}>\n          {video ? <VideocamIcon /> : <VideocamOffIcon />}\n        </Button>\n        <Button onClick={handleAudioToggle}>\n          {audio ? <MicIcon /> : <MicOffIcon />}\n        </Button>\n        <Button onClick={toggleChatBoxOpen}>\n          <ChatIcon />\n        </Button>\n        <Button onClick={handleDisconnect}>\n          <CallEndIcon />\n        </Button>\n        <Button onClick={shareScreen}>\n          <ScreenShareIcon />\n        </Button>\n      </Grid>\n    </div>\n  ) : (\n    <div>Room doesnt exist</div>\n  )\n}\n\nconst mapStateToprops = state => {\n  return {\n    myuser: state.auth.user,\n    currentRoom: state.room.currentRoom,\n    token: state.auth.token\n  }\n}\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    updateRoomUsers: (data, id, handleSuccess) => {\n      return dispatch(updateRoomUsers(data, id, handleSuccess))\n    }\n  }\n}\n\nexport default withRouter(connect(mapStateToprops, mapDispatchToprops)(Room))\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { logoutUser } from '../actions/authAction'\nimport VideoPlayer from '../components/video/videoPlayer.js'\n\nclass VideoView extends Component {\n  render () {\n    return (\n      <div style={{height:'90vh'}} className='VideoView'>\n        <VideoPlayer />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logoutUser: () => {\n      return dispatch(logoutUser())\n    }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(VideoView)\n"],"sourceRoot":""}